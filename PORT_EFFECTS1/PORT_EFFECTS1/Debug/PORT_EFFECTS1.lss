
PORT_EFFECTS1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001dd8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00001dd8  00001e4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00001e54  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00002520  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  000025a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000018b  00000000  00000000  00002705  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002216  00000000  00000000  00002890  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eac  00000000  00000000  00004aa6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016e8  00000000  00000000  00005952  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  0000703c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003a5  00000000  00000000  000071bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a79  00000000  00000000  00007561  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000588  00000000  00000000  00007fda  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000030  00000000  00000000  00008562  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 ed       	ldi	r30, 0xD8	; 216
      68:	fd e1       	ldi	r31, 0x1D	; 29
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 41 00 	call	0x82	; 0x82 <main>
      7a:	0c 94 ea 0e 	jmp	0x1dd4	; 0x1dd4 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:

#include <avr/io.h>
#include <avr/delay.h>

int main(void)
{
      82:	0f 93       	push	r16
      84:	1f 93       	push	r17
      86:	df 93       	push	r29
      88:	cf 93       	push	r28
      8a:	cd b7       	in	r28, 0x3d	; 61
      8c:	de b7       	in	r29, 0x3e	; 62
      8e:	c0 5b       	subi	r28, 0xB0	; 176
      90:	d0 40       	sbci	r29, 0x00	; 0
      92:	0f b6       	in	r0, 0x3f	; 63
      94:	f8 94       	cli
      96:	de bf       	out	0x3e, r29	; 62
      98:	0f be       	out	0x3f, r0	; 63
      9a:	cd bf       	out	0x3d, r28	; 61
	DDRB=255;
      9c:	87 e3       	ldi	r24, 0x37	; 55
      9e:	90 e0       	ldi	r25, 0x00	; 0
      a0:	2f ef       	ldi	r18, 0xFF	; 255
      a2:	fc 01       	movw	r30, r24
      a4:	20 83       	st	Z, r18
    while(1)
    {
        PORTB=255;
      a6:	88 e3       	ldi	r24, 0x38	; 56
      a8:	90 e0       	ldi	r25, 0x00	; 0
      aa:	2f ef       	ldi	r18, 0xFF	; 255
      ac:	fc 01       	movw	r30, r24
      ae:	20 83       	st	Z, r18
      b0:	80 e0       	ldi	r24, 0x00	; 0
      b2:	90 e0       	ldi	r25, 0x00	; 0
      b4:	aa ef       	ldi	r26, 0xFA	; 250
      b6:	b3 e4       	ldi	r27, 0x43	; 67
      b8:	89 87       	std	Y+9, r24	; 0x09
      ba:	9a 87       	std	Y+10, r25	; 0x0a
      bc:	ab 87       	std	Y+11, r26	; 0x0b
      be:	bc 87       	std	Y+12, r27	; 0x0c
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
      c0:	69 85       	ldd	r22, Y+9	; 0x09
      c2:	7a 85       	ldd	r23, Y+10	; 0x0a
      c4:	8b 85       	ldd	r24, Y+11	; 0x0b
      c6:	9c 85       	ldd	r25, Y+12	; 0x0c
      c8:	20 e0       	ldi	r18, 0x00	; 0
      ca:	30 e0       	ldi	r19, 0x00	; 0
      cc:	4a e7       	ldi	r20, 0x7A	; 122
      ce:	53 e4       	ldi	r21, 0x43	; 67
      d0:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
      d4:	dc 01       	movw	r26, r24
      d6:	cb 01       	movw	r24, r22
      d8:	8d 87       	std	Y+13, r24	; 0x0d
      da:	9e 87       	std	Y+14, r25	; 0x0e
      dc:	af 87       	std	Y+15, r26	; 0x0f
      de:	b8 8b       	std	Y+16, r27	; 0x10
	if (__tmp < 1.0)
      e0:	11 e0       	ldi	r17, 0x01	; 1
      e2:	6d 85       	ldd	r22, Y+13	; 0x0d
      e4:	7e 85       	ldd	r23, Y+14	; 0x0e
      e6:	8f 85       	ldd	r24, Y+15	; 0x0f
      e8:	98 89       	ldd	r25, Y+16	; 0x10
      ea:	20 e0       	ldi	r18, 0x00	; 0
      ec:	30 e0       	ldi	r19, 0x00	; 0
      ee:	40 e8       	ldi	r20, 0x80	; 128
      f0:	5f e3       	ldi	r21, 0x3F	; 63
      f2:	0e 94 a1 0c 	call	0x1942	; 0x1942 <__ltsf2>
      f6:	88 23       	and	r24, r24
      f8:	0c f0       	brlt	.+2      	; 0xfc <main+0x7a>
      fa:	10 e0       	ldi	r17, 0x00	; 0
      fc:	11 23       	and	r17, r17
      fe:	29 f0       	breq	.+10     	; 0x10a <main+0x88>
		__ticks = 1;
     100:	81 e0       	ldi	r24, 0x01	; 1
     102:	90 e0       	ldi	r25, 0x00	; 0
     104:	9a 8b       	std	Y+18, r25	; 0x12
     106:	89 8b       	std	Y+17, r24	; 0x11
     108:	46 c0       	rjmp	.+140    	; 0x196 <main+0x114>
	else if (__tmp > 65535)
     10a:	11 e0       	ldi	r17, 0x01	; 1
     10c:	6d 85       	ldd	r22, Y+13	; 0x0d
     10e:	7e 85       	ldd	r23, Y+14	; 0x0e
     110:	8f 85       	ldd	r24, Y+15	; 0x0f
     112:	98 89       	ldd	r25, Y+16	; 0x10
     114:	20 e0       	ldi	r18, 0x00	; 0
     116:	3f ef       	ldi	r19, 0xFF	; 255
     118:	4f e7       	ldi	r20, 0x7F	; 127
     11a:	57 e4       	ldi	r21, 0x47	; 71
     11c:	0e 94 41 0c 	call	0x1882	; 0x1882 <__gtsf2>
     120:	18 16       	cp	r1, r24
     122:	0c f0       	brlt	.+2      	; 0x126 <main+0xa4>
     124:	10 e0       	ldi	r17, 0x00	; 0
     126:	11 23       	and	r17, r17
     128:	61 f1       	breq	.+88     	; 0x182 <main+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     12a:	69 85       	ldd	r22, Y+9	; 0x09
     12c:	7a 85       	ldd	r23, Y+10	; 0x0a
     12e:	8b 85       	ldd	r24, Y+11	; 0x0b
     130:	9c 85       	ldd	r25, Y+12	; 0x0c
     132:	20 e0       	ldi	r18, 0x00	; 0
     134:	30 e0       	ldi	r19, 0x00	; 0
     136:	40 e2       	ldi	r20, 0x20	; 32
     138:	51 e4       	ldi	r21, 0x41	; 65
     13a:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     13e:	dc 01       	movw	r26, r24
     140:	cb 01       	movw	r24, r22
     142:	bc 01       	movw	r22, r24
     144:	cd 01       	movw	r24, r26
     146:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     14a:	dc 01       	movw	r26, r24
     14c:	cb 01       	movw	r24, r22
     14e:	9a 8b       	std	Y+18, r25	; 0x12
     150:	89 8b       	std	Y+17, r24	; 0x11
     152:	12 c0       	rjmp	.+36     	; 0x178 <main+0xf6>
     154:	89 e1       	ldi	r24, 0x19	; 25
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	9c 8b       	std	Y+20, r25	; 0x14
     15a:	8b 8b       	std	Y+19, r24	; 0x13
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     15c:	8b 89       	ldd	r24, Y+19	; 0x13
     15e:	9c 89       	ldd	r25, Y+20	; 0x14
     160:	8c 01       	movw	r16, r24
     162:	c8 01       	movw	r24, r16
     164:	01 97       	sbiw	r24, 0x01	; 1
     166:	f1 f7       	brne	.-4      	; 0x164 <main+0xe2>
     168:	8c 01       	movw	r16, r24
     16a:	1c 8b       	std	Y+20, r17	; 0x14
     16c:	0b 8b       	std	Y+19, r16	; 0x13
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     16e:	89 89       	ldd	r24, Y+17	; 0x11
     170:	9a 89       	ldd	r25, Y+18	; 0x12
     172:	01 97       	sbiw	r24, 0x01	; 1
     174:	9a 8b       	std	Y+18, r25	; 0x12
     176:	89 8b       	std	Y+17, r24	; 0x11
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     178:	89 89       	ldd	r24, Y+17	; 0x11
     17a:	9a 89       	ldd	r25, Y+18	; 0x12
     17c:	00 97       	sbiw	r24, 0x00	; 0
     17e:	51 f7       	brne	.-44     	; 0x154 <main+0xd2>
     180:	17 c0       	rjmp	.+46     	; 0x1b0 <main+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     182:	6d 85       	ldd	r22, Y+13	; 0x0d
     184:	7e 85       	ldd	r23, Y+14	; 0x0e
     186:	8f 85       	ldd	r24, Y+15	; 0x0f
     188:	98 89       	ldd	r25, Y+16	; 0x10
     18a:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     18e:	dc 01       	movw	r26, r24
     190:	cb 01       	movw	r24, r22
     192:	9a 8b       	std	Y+18, r25	; 0x12
     194:	89 8b       	std	Y+17, r24	; 0x11
     196:	89 89       	ldd	r24, Y+17	; 0x11
     198:	9a 89       	ldd	r25, Y+18	; 0x12
     19a:	9e 8b       	std	Y+22, r25	; 0x16
     19c:	8d 8b       	std	Y+21, r24	; 0x15
     19e:	8d 89       	ldd	r24, Y+21	; 0x15
     1a0:	9e 89       	ldd	r25, Y+22	; 0x16
     1a2:	8c 01       	movw	r16, r24
     1a4:	f8 01       	movw	r30, r16
     1a6:	31 97       	sbiw	r30, 0x01	; 1
     1a8:	f1 f7       	brne	.-4      	; 0x1a6 <main+0x124>
     1aa:	8f 01       	movw	r16, r30
     1ac:	1e 8b       	std	Y+22, r17	; 0x16
     1ae:	0d 8b       	std	Y+21, r16	; 0x15
		_delay_ms(500);
		PORTB=0;
     1b0:	88 e3       	ldi	r24, 0x38	; 56
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	fc 01       	movw	r30, r24
     1b6:	10 82       	st	Z, r1
     1b8:	80 e0       	ldi	r24, 0x00	; 0
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	aa ef       	ldi	r26, 0xFA	; 250
     1be:	b3 e4       	ldi	r27, 0x43	; 67
     1c0:	8f 8b       	std	Y+23, r24	; 0x17
     1c2:	98 8f       	std	Y+24, r25	; 0x18
     1c4:	a9 8f       	std	Y+25, r26	; 0x19
     1c6:	ba 8f       	std	Y+26, r27	; 0x1a
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     1c8:	6f 89       	ldd	r22, Y+23	; 0x17
     1ca:	78 8d       	ldd	r23, Y+24	; 0x18
     1cc:	89 8d       	ldd	r24, Y+25	; 0x19
     1ce:	9a 8d       	ldd	r25, Y+26	; 0x1a
     1d0:	20 e0       	ldi	r18, 0x00	; 0
     1d2:	30 e0       	ldi	r19, 0x00	; 0
     1d4:	4a e7       	ldi	r20, 0x7A	; 122
     1d6:	53 e4       	ldi	r21, 0x43	; 67
     1d8:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     1dc:	dc 01       	movw	r26, r24
     1de:	cb 01       	movw	r24, r22
     1e0:	8b 8f       	std	Y+27, r24	; 0x1b
     1e2:	9c 8f       	std	Y+28, r25	; 0x1c
     1e4:	ad 8f       	std	Y+29, r26	; 0x1d
     1e6:	be 8f       	std	Y+30, r27	; 0x1e
	if (__tmp < 1.0)
     1e8:	11 e0       	ldi	r17, 0x01	; 1
     1ea:	6b 8d       	ldd	r22, Y+27	; 0x1b
     1ec:	7c 8d       	ldd	r23, Y+28	; 0x1c
     1ee:	8d 8d       	ldd	r24, Y+29	; 0x1d
     1f0:	9e 8d       	ldd	r25, Y+30	; 0x1e
     1f2:	20 e0       	ldi	r18, 0x00	; 0
     1f4:	30 e0       	ldi	r19, 0x00	; 0
     1f6:	40 e8       	ldi	r20, 0x80	; 128
     1f8:	5f e3       	ldi	r21, 0x3F	; 63
     1fa:	0e 94 a1 0c 	call	0x1942	; 0x1942 <__ltsf2>
     1fe:	88 23       	and	r24, r24
     200:	0c f0       	brlt	.+2      	; 0x204 <main+0x182>
     202:	10 e0       	ldi	r17, 0x00	; 0
     204:	11 23       	and	r17, r17
     206:	29 f0       	breq	.+10     	; 0x212 <main+0x190>
		__ticks = 1;
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	98 a3       	std	Y+32, r25	; 0x20
     20e:	8f 8f       	std	Y+31, r24	; 0x1f
     210:	46 c0       	rjmp	.+140    	; 0x29e <main+0x21c>
	else if (__tmp > 65535)
     212:	11 e0       	ldi	r17, 0x01	; 1
     214:	6b 8d       	ldd	r22, Y+27	; 0x1b
     216:	7c 8d       	ldd	r23, Y+28	; 0x1c
     218:	8d 8d       	ldd	r24, Y+29	; 0x1d
     21a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     21c:	20 e0       	ldi	r18, 0x00	; 0
     21e:	3f ef       	ldi	r19, 0xFF	; 255
     220:	4f e7       	ldi	r20, 0x7F	; 127
     222:	57 e4       	ldi	r21, 0x47	; 71
     224:	0e 94 41 0c 	call	0x1882	; 0x1882 <__gtsf2>
     228:	18 16       	cp	r1, r24
     22a:	0c f0       	brlt	.+2      	; 0x22e <main+0x1ac>
     22c:	10 e0       	ldi	r17, 0x00	; 0
     22e:	11 23       	and	r17, r17
     230:	61 f1       	breq	.+88     	; 0x28a <main+0x208>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     232:	6f 89       	ldd	r22, Y+23	; 0x17
     234:	78 8d       	ldd	r23, Y+24	; 0x18
     236:	89 8d       	ldd	r24, Y+25	; 0x19
     238:	9a 8d       	ldd	r25, Y+26	; 0x1a
     23a:	20 e0       	ldi	r18, 0x00	; 0
     23c:	30 e0       	ldi	r19, 0x00	; 0
     23e:	40 e2       	ldi	r20, 0x20	; 32
     240:	51 e4       	ldi	r21, 0x41	; 65
     242:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     246:	dc 01       	movw	r26, r24
     248:	cb 01       	movw	r24, r22
     24a:	bc 01       	movw	r22, r24
     24c:	cd 01       	movw	r24, r26
     24e:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     252:	dc 01       	movw	r26, r24
     254:	cb 01       	movw	r24, r22
     256:	98 a3       	std	Y+32, r25	; 0x20
     258:	8f 8f       	std	Y+31, r24	; 0x1f
     25a:	12 c0       	rjmp	.+36     	; 0x280 <main+0x1fe>
     25c:	89 e1       	ldi	r24, 0x19	; 25
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	9a a3       	std	Y+34, r25	; 0x22
     262:	89 a3       	std	Y+33, r24	; 0x21
     264:	89 a1       	ldd	r24, Y+33	; 0x21
     266:	9a a1       	ldd	r25, Y+34	; 0x22
     268:	8c 01       	movw	r16, r24
     26a:	c8 01       	movw	r24, r16
     26c:	01 97       	sbiw	r24, 0x01	; 1
     26e:	f1 f7       	brne	.-4      	; 0x26c <main+0x1ea>
     270:	8c 01       	movw	r16, r24
     272:	1a a3       	std	Y+34, r17	; 0x22
     274:	09 a3       	std	Y+33, r16	; 0x21
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     276:	8f 8d       	ldd	r24, Y+31	; 0x1f
     278:	98 a1       	ldd	r25, Y+32	; 0x20
     27a:	01 97       	sbiw	r24, 0x01	; 1
     27c:	98 a3       	std	Y+32, r25	; 0x20
     27e:	8f 8f       	std	Y+31, r24	; 0x1f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     280:	8f 8d       	ldd	r24, Y+31	; 0x1f
     282:	98 a1       	ldd	r25, Y+32	; 0x20
     284:	00 97       	sbiw	r24, 0x00	; 0
     286:	51 f7       	brne	.-44     	; 0x25c <main+0x1da>
     288:	17 c0       	rjmp	.+46     	; 0x2b8 <main+0x236>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     28a:	6b 8d       	ldd	r22, Y+27	; 0x1b
     28c:	7c 8d       	ldd	r23, Y+28	; 0x1c
     28e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     290:	9e 8d       	ldd	r25, Y+30	; 0x1e
     292:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     296:	dc 01       	movw	r26, r24
     298:	cb 01       	movw	r24, r22
     29a:	98 a3       	std	Y+32, r25	; 0x20
     29c:	8f 8f       	std	Y+31, r24	; 0x1f
     29e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     2a0:	98 a1       	ldd	r25, Y+32	; 0x20
     2a2:	9c a3       	std	Y+36, r25	; 0x24
     2a4:	8b a3       	std	Y+35, r24	; 0x23
     2a6:	8b a1       	ldd	r24, Y+35	; 0x23
     2a8:	9c a1       	ldd	r25, Y+36	; 0x24
     2aa:	8c 01       	movw	r16, r24
     2ac:	f8 01       	movw	r30, r16
     2ae:	31 97       	sbiw	r30, 0x01	; 1
     2b0:	f1 f7       	brne	.-4      	; 0x2ae <main+0x22c>
     2b2:	8f 01       	movw	r16, r30
     2b4:	1c a3       	std	Y+36, r17	; 0x24
     2b6:	0b a3       	std	Y+35, r16	; 0x23
		_delay_ms(500);
		
		PORTB=0x80;
     2b8:	88 e3       	ldi	r24, 0x38	; 56
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	20 e8       	ldi	r18, 0x80	; 128
     2be:	fc 01       	movw	r30, r24
     2c0:	20 83       	st	Z, r18
     2c2:	80 e0       	ldi	r24, 0x00	; 0
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	aa ef       	ldi	r26, 0xFA	; 250
     2c8:	b3 e4       	ldi	r27, 0x43	; 67
     2ca:	8d a3       	std	Y+37, r24	; 0x25
     2cc:	9e a3       	std	Y+38, r25	; 0x26
     2ce:	af a3       	std	Y+39, r26	; 0x27
     2d0:	b8 a7       	std	Y+40, r27	; 0x28
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     2d2:	6d a1       	ldd	r22, Y+37	; 0x25
     2d4:	7e a1       	ldd	r23, Y+38	; 0x26
     2d6:	8f a1       	ldd	r24, Y+39	; 0x27
     2d8:	98 a5       	ldd	r25, Y+40	; 0x28
     2da:	20 e0       	ldi	r18, 0x00	; 0
     2dc:	30 e0       	ldi	r19, 0x00	; 0
     2de:	4a e7       	ldi	r20, 0x7A	; 122
     2e0:	53 e4       	ldi	r21, 0x43	; 67
     2e2:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     2e6:	dc 01       	movw	r26, r24
     2e8:	cb 01       	movw	r24, r22
     2ea:	89 a7       	std	Y+41, r24	; 0x29
     2ec:	9a a7       	std	Y+42, r25	; 0x2a
     2ee:	ab a7       	std	Y+43, r26	; 0x2b
     2f0:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
     2f2:	11 e0       	ldi	r17, 0x01	; 1
     2f4:	69 a5       	ldd	r22, Y+41	; 0x29
     2f6:	7a a5       	ldd	r23, Y+42	; 0x2a
     2f8:	8b a5       	ldd	r24, Y+43	; 0x2b
     2fa:	9c a5       	ldd	r25, Y+44	; 0x2c
     2fc:	20 e0       	ldi	r18, 0x00	; 0
     2fe:	30 e0       	ldi	r19, 0x00	; 0
     300:	40 e8       	ldi	r20, 0x80	; 128
     302:	5f e3       	ldi	r21, 0x3F	; 63
     304:	0e 94 a1 0c 	call	0x1942	; 0x1942 <__ltsf2>
     308:	88 23       	and	r24, r24
     30a:	0c f0       	brlt	.+2      	; 0x30e <main+0x28c>
     30c:	10 e0       	ldi	r17, 0x00	; 0
     30e:	11 23       	and	r17, r17
     310:	29 f0       	breq	.+10     	; 0x31c <main+0x29a>
		__ticks = 1;
     312:	81 e0       	ldi	r24, 0x01	; 1
     314:	90 e0       	ldi	r25, 0x00	; 0
     316:	9e a7       	std	Y+46, r25	; 0x2e
     318:	8d a7       	std	Y+45, r24	; 0x2d
     31a:	46 c0       	rjmp	.+140    	; 0x3a8 <main+0x326>
	else if (__tmp > 65535)
     31c:	11 e0       	ldi	r17, 0x01	; 1
     31e:	69 a5       	ldd	r22, Y+41	; 0x29
     320:	7a a5       	ldd	r23, Y+42	; 0x2a
     322:	8b a5       	ldd	r24, Y+43	; 0x2b
     324:	9c a5       	ldd	r25, Y+44	; 0x2c
     326:	20 e0       	ldi	r18, 0x00	; 0
     328:	3f ef       	ldi	r19, 0xFF	; 255
     32a:	4f e7       	ldi	r20, 0x7F	; 127
     32c:	57 e4       	ldi	r21, 0x47	; 71
     32e:	0e 94 41 0c 	call	0x1882	; 0x1882 <__gtsf2>
     332:	18 16       	cp	r1, r24
     334:	0c f0       	brlt	.+2      	; 0x338 <main+0x2b6>
     336:	10 e0       	ldi	r17, 0x00	; 0
     338:	11 23       	and	r17, r17
     33a:	61 f1       	breq	.+88     	; 0x394 <main+0x312>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     33c:	6d a1       	ldd	r22, Y+37	; 0x25
     33e:	7e a1       	ldd	r23, Y+38	; 0x26
     340:	8f a1       	ldd	r24, Y+39	; 0x27
     342:	98 a5       	ldd	r25, Y+40	; 0x28
     344:	20 e0       	ldi	r18, 0x00	; 0
     346:	30 e0       	ldi	r19, 0x00	; 0
     348:	40 e2       	ldi	r20, 0x20	; 32
     34a:	51 e4       	ldi	r21, 0x41	; 65
     34c:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     350:	dc 01       	movw	r26, r24
     352:	cb 01       	movw	r24, r22
     354:	bc 01       	movw	r22, r24
     356:	cd 01       	movw	r24, r26
     358:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     35c:	dc 01       	movw	r26, r24
     35e:	cb 01       	movw	r24, r22
     360:	9e a7       	std	Y+46, r25	; 0x2e
     362:	8d a7       	std	Y+45, r24	; 0x2d
     364:	12 c0       	rjmp	.+36     	; 0x38a <main+0x308>
     366:	89 e1       	ldi	r24, 0x19	; 25
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	98 ab       	std	Y+48, r25	; 0x30
     36c:	8f a7       	std	Y+47, r24	; 0x2f
     36e:	8f a5       	ldd	r24, Y+47	; 0x2f
     370:	98 a9       	ldd	r25, Y+48	; 0x30
     372:	8c 01       	movw	r16, r24
     374:	c8 01       	movw	r24, r16
     376:	01 97       	sbiw	r24, 0x01	; 1
     378:	f1 f7       	brne	.-4      	; 0x376 <main+0x2f4>
     37a:	8c 01       	movw	r16, r24
     37c:	18 ab       	std	Y+48, r17	; 0x30
     37e:	0f a7       	std	Y+47, r16	; 0x2f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     380:	8d a5       	ldd	r24, Y+45	; 0x2d
     382:	9e a5       	ldd	r25, Y+46	; 0x2e
     384:	01 97       	sbiw	r24, 0x01	; 1
     386:	9e a7       	std	Y+46, r25	; 0x2e
     388:	8d a7       	std	Y+45, r24	; 0x2d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     38a:	8d a5       	ldd	r24, Y+45	; 0x2d
     38c:	9e a5       	ldd	r25, Y+46	; 0x2e
     38e:	00 97       	sbiw	r24, 0x00	; 0
     390:	51 f7       	brne	.-44     	; 0x366 <main+0x2e4>
     392:	17 c0       	rjmp	.+46     	; 0x3c2 <main+0x340>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     394:	69 a5       	ldd	r22, Y+41	; 0x29
     396:	7a a5       	ldd	r23, Y+42	; 0x2a
     398:	8b a5       	ldd	r24, Y+43	; 0x2b
     39a:	9c a5       	ldd	r25, Y+44	; 0x2c
     39c:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     3a0:	dc 01       	movw	r26, r24
     3a2:	cb 01       	movw	r24, r22
     3a4:	9e a7       	std	Y+46, r25	; 0x2e
     3a6:	8d a7       	std	Y+45, r24	; 0x2d
     3a8:	8d a5       	ldd	r24, Y+45	; 0x2d
     3aa:	9e a5       	ldd	r25, Y+46	; 0x2e
     3ac:	9a ab       	std	Y+50, r25	; 0x32
     3ae:	89 ab       	std	Y+49, r24	; 0x31
     3b0:	89 a9       	ldd	r24, Y+49	; 0x31
     3b2:	9a a9       	ldd	r25, Y+50	; 0x32
     3b4:	8c 01       	movw	r16, r24
     3b6:	f8 01       	movw	r30, r16
     3b8:	31 97       	sbiw	r30, 0x01	; 1
     3ba:	f1 f7       	brne	.-4      	; 0x3b8 <main+0x336>
     3bc:	8f 01       	movw	r16, r30
     3be:	1a ab       	std	Y+50, r17	; 0x32
     3c0:	09 ab       	std	Y+49, r16	; 0x31
		_delay_ms(500);
		PORTB=0;
     3c2:	88 e3       	ldi	r24, 0x38	; 56
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	fc 01       	movw	r30, r24
     3c8:	10 82       	st	Z, r1
     3ca:	80 e0       	ldi	r24, 0x00	; 0
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	aa ef       	ldi	r26, 0xFA	; 250
     3d0:	b3 e4       	ldi	r27, 0x43	; 67
     3d2:	8b ab       	std	Y+51, r24	; 0x33
     3d4:	9c ab       	std	Y+52, r25	; 0x34
     3d6:	ad ab       	std	Y+53, r26	; 0x35
     3d8:	be ab       	std	Y+54, r27	; 0x36
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     3da:	6b a9       	ldd	r22, Y+51	; 0x33
     3dc:	7c a9       	ldd	r23, Y+52	; 0x34
     3de:	8d a9       	ldd	r24, Y+53	; 0x35
     3e0:	9e a9       	ldd	r25, Y+54	; 0x36
     3e2:	20 e0       	ldi	r18, 0x00	; 0
     3e4:	30 e0       	ldi	r19, 0x00	; 0
     3e6:	4a e7       	ldi	r20, 0x7A	; 122
     3e8:	53 e4       	ldi	r21, 0x43	; 67
     3ea:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     3ee:	dc 01       	movw	r26, r24
     3f0:	cb 01       	movw	r24, r22
     3f2:	8f ab       	std	Y+55, r24	; 0x37
     3f4:	98 af       	std	Y+56, r25	; 0x38
     3f6:	a9 af       	std	Y+57, r26	; 0x39
     3f8:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
     3fa:	11 e0       	ldi	r17, 0x01	; 1
     3fc:	6f a9       	ldd	r22, Y+55	; 0x37
     3fe:	78 ad       	ldd	r23, Y+56	; 0x38
     400:	89 ad       	ldd	r24, Y+57	; 0x39
     402:	9a ad       	ldd	r25, Y+58	; 0x3a
     404:	20 e0       	ldi	r18, 0x00	; 0
     406:	30 e0       	ldi	r19, 0x00	; 0
     408:	40 e8       	ldi	r20, 0x80	; 128
     40a:	5f e3       	ldi	r21, 0x3F	; 63
     40c:	0e 94 a1 0c 	call	0x1942	; 0x1942 <__ltsf2>
     410:	88 23       	and	r24, r24
     412:	0c f0       	brlt	.+2      	; 0x416 <main+0x394>
     414:	10 e0       	ldi	r17, 0x00	; 0
     416:	11 23       	and	r17, r17
     418:	29 f0       	breq	.+10     	; 0x424 <main+0x3a2>
		__ticks = 1;
     41a:	81 e0       	ldi	r24, 0x01	; 1
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	9c af       	std	Y+60, r25	; 0x3c
     420:	8b af       	std	Y+59, r24	; 0x3b
     422:	46 c0       	rjmp	.+140    	; 0x4b0 <main+0x42e>
	else if (__tmp > 65535)
     424:	11 e0       	ldi	r17, 0x01	; 1
     426:	6f a9       	ldd	r22, Y+55	; 0x37
     428:	78 ad       	ldd	r23, Y+56	; 0x38
     42a:	89 ad       	ldd	r24, Y+57	; 0x39
     42c:	9a ad       	ldd	r25, Y+58	; 0x3a
     42e:	20 e0       	ldi	r18, 0x00	; 0
     430:	3f ef       	ldi	r19, 0xFF	; 255
     432:	4f e7       	ldi	r20, 0x7F	; 127
     434:	57 e4       	ldi	r21, 0x47	; 71
     436:	0e 94 41 0c 	call	0x1882	; 0x1882 <__gtsf2>
     43a:	18 16       	cp	r1, r24
     43c:	0c f0       	brlt	.+2      	; 0x440 <main+0x3be>
     43e:	10 e0       	ldi	r17, 0x00	; 0
     440:	11 23       	and	r17, r17
     442:	61 f1       	breq	.+88     	; 0x49c <main+0x41a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     444:	6b a9       	ldd	r22, Y+51	; 0x33
     446:	7c a9       	ldd	r23, Y+52	; 0x34
     448:	8d a9       	ldd	r24, Y+53	; 0x35
     44a:	9e a9       	ldd	r25, Y+54	; 0x36
     44c:	20 e0       	ldi	r18, 0x00	; 0
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	40 e2       	ldi	r20, 0x20	; 32
     452:	51 e4       	ldi	r21, 0x41	; 65
     454:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     458:	dc 01       	movw	r26, r24
     45a:	cb 01       	movw	r24, r22
     45c:	bc 01       	movw	r22, r24
     45e:	cd 01       	movw	r24, r26
     460:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     464:	dc 01       	movw	r26, r24
     466:	cb 01       	movw	r24, r22
     468:	9c af       	std	Y+60, r25	; 0x3c
     46a:	8b af       	std	Y+59, r24	; 0x3b
     46c:	12 c0       	rjmp	.+36     	; 0x492 <main+0x410>
     46e:	89 e1       	ldi	r24, 0x19	; 25
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	9e af       	std	Y+62, r25	; 0x3e
     474:	8d af       	std	Y+61, r24	; 0x3d
     476:	8d ad       	ldd	r24, Y+61	; 0x3d
     478:	9e ad       	ldd	r25, Y+62	; 0x3e
     47a:	8c 01       	movw	r16, r24
     47c:	c8 01       	movw	r24, r16
     47e:	01 97       	sbiw	r24, 0x01	; 1
     480:	f1 f7       	brne	.-4      	; 0x47e <main+0x3fc>
     482:	8c 01       	movw	r16, r24
     484:	1e af       	std	Y+62, r17	; 0x3e
     486:	0d af       	std	Y+61, r16	; 0x3d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     488:	8b ad       	ldd	r24, Y+59	; 0x3b
     48a:	9c ad       	ldd	r25, Y+60	; 0x3c
     48c:	01 97       	sbiw	r24, 0x01	; 1
     48e:	9c af       	std	Y+60, r25	; 0x3c
     490:	8b af       	std	Y+59, r24	; 0x3b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     492:	8b ad       	ldd	r24, Y+59	; 0x3b
     494:	9c ad       	ldd	r25, Y+60	; 0x3c
     496:	00 97       	sbiw	r24, 0x00	; 0
     498:	51 f7       	brne	.-44     	; 0x46e <main+0x3ec>
     49a:	20 c0       	rjmp	.+64     	; 0x4dc <main+0x45a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     49c:	6f a9       	ldd	r22, Y+55	; 0x37
     49e:	78 ad       	ldd	r23, Y+56	; 0x38
     4a0:	89 ad       	ldd	r24, Y+57	; 0x39
     4a2:	9a ad       	ldd	r25, Y+58	; 0x3a
     4a4:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     4a8:	dc 01       	movw	r26, r24
     4aa:	cb 01       	movw	r24, r22
     4ac:	9c af       	std	Y+60, r25	; 0x3c
     4ae:	8b af       	std	Y+59, r24	; 0x3b
     4b0:	2b ad       	ldd	r18, Y+59	; 0x3b
     4b2:	3c ad       	ldd	r19, Y+60	; 0x3c
     4b4:	ce 01       	movw	r24, r28
     4b6:	cf 96       	adiw	r24, 0x3f	; 63
     4b8:	fc 01       	movw	r30, r24
     4ba:	31 83       	std	Z+1, r19	; 0x01
     4bc:	20 83       	st	Z, r18
     4be:	ce 01       	movw	r24, r28
     4c0:	cf 96       	adiw	r24, 0x3f	; 63
     4c2:	fc 01       	movw	r30, r24
     4c4:	80 81       	ld	r24, Z
     4c6:	91 81       	ldd	r25, Z+1	; 0x01
     4c8:	8c 01       	movw	r16, r24
     4ca:	c8 01       	movw	r24, r16
     4cc:	01 97       	sbiw	r24, 0x01	; 1
     4ce:	f1 f7       	brne	.-4      	; 0x4cc <main+0x44a>
     4d0:	8c 01       	movw	r16, r24
     4d2:	ce 01       	movw	r24, r28
     4d4:	cf 96       	adiw	r24, 0x3f	; 63
     4d6:	fc 01       	movw	r30, r24
     4d8:	11 83       	std	Z+1, r17	; 0x01
     4da:	00 83       	st	Z, r16
		_delay_ms(500);
		
		PORTB=0x16;
     4dc:	88 e3       	ldi	r24, 0x38	; 56
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	26 e1       	ldi	r18, 0x16	; 22
     4e2:	fc 01       	movw	r30, r24
     4e4:	20 83       	st	Z, r18
     4e6:	9e 01       	movw	r18, r28
     4e8:	2f 5b       	subi	r18, 0xBF	; 191
     4ea:	3f 4f       	sbci	r19, 0xFF	; 255
     4ec:	80 e0       	ldi	r24, 0x00	; 0
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	aa ef       	ldi	r26, 0xFA	; 250
     4f2:	b3 e4       	ldi	r27, 0x43	; 67
     4f4:	f9 01       	movw	r30, r18
     4f6:	80 83       	st	Z, r24
     4f8:	91 83       	std	Z+1, r25	; 0x01
     4fa:	a2 83       	std	Z+2, r26	; 0x02
     4fc:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     4fe:	8e 01       	movw	r16, r28
     500:	0b 5b       	subi	r16, 0xBB	; 187
     502:	1f 4f       	sbci	r17, 0xFF	; 255
     504:	ce 01       	movw	r24, r28
     506:	8f 5b       	subi	r24, 0xBF	; 191
     508:	9f 4f       	sbci	r25, 0xFF	; 255
     50a:	fc 01       	movw	r30, r24
     50c:	60 81       	ld	r22, Z
     50e:	71 81       	ldd	r23, Z+1	; 0x01
     510:	82 81       	ldd	r24, Z+2	; 0x02
     512:	93 81       	ldd	r25, Z+3	; 0x03
     514:	20 e0       	ldi	r18, 0x00	; 0
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	4a e7       	ldi	r20, 0x7A	; 122
     51a:	53 e4       	ldi	r21, 0x43	; 67
     51c:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     520:	dc 01       	movw	r26, r24
     522:	cb 01       	movw	r24, r22
     524:	f8 01       	movw	r30, r16
     526:	80 83       	st	Z, r24
     528:	91 83       	std	Z+1, r25	; 0x01
     52a:	a2 83       	std	Z+2, r26	; 0x02
     52c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     52e:	ce 01       	movw	r24, r28
     530:	8b 5b       	subi	r24, 0xBB	; 187
     532:	9f 4f       	sbci	r25, 0xFF	; 255
     534:	11 e0       	ldi	r17, 0x01	; 1
     536:	fc 01       	movw	r30, r24
     538:	60 81       	ld	r22, Z
     53a:	71 81       	ldd	r23, Z+1	; 0x01
     53c:	82 81       	ldd	r24, Z+2	; 0x02
     53e:	93 81       	ldd	r25, Z+3	; 0x03
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	40 e8       	ldi	r20, 0x80	; 128
     546:	5f e3       	ldi	r21, 0x3F	; 63
     548:	0e 94 a1 0c 	call	0x1942	; 0x1942 <__ltsf2>
     54c:	88 23       	and	r24, r24
     54e:	0c f0       	brlt	.+2      	; 0x552 <main+0x4d0>
     550:	10 e0       	ldi	r17, 0x00	; 0
     552:	11 23       	and	r17, r17
     554:	49 f0       	breq	.+18     	; 0x568 <main+0x4e6>
		__ticks = 1;
     556:	ce 01       	movw	r24, r28
     558:	87 5b       	subi	r24, 0xB7	; 183
     55a:	9f 4f       	sbci	r25, 0xFF	; 255
     55c:	21 e0       	ldi	r18, 0x01	; 1
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	fc 01       	movw	r30, r24
     562:	31 83       	std	Z+1, r19	; 0x01
     564:	20 83       	st	Z, r18
     566:	74 c0       	rjmp	.+232    	; 0x650 <main+0x5ce>
	else if (__tmp > 65535)
     568:	ce 01       	movw	r24, r28
     56a:	8b 5b       	subi	r24, 0xBB	; 187
     56c:	9f 4f       	sbci	r25, 0xFF	; 255
     56e:	11 e0       	ldi	r17, 0x01	; 1
     570:	fc 01       	movw	r30, r24
     572:	60 81       	ld	r22, Z
     574:	71 81       	ldd	r23, Z+1	; 0x01
     576:	82 81       	ldd	r24, Z+2	; 0x02
     578:	93 81       	ldd	r25, Z+3	; 0x03
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	3f ef       	ldi	r19, 0xFF	; 255
     57e:	4f e7       	ldi	r20, 0x7F	; 127
     580:	57 e4       	ldi	r21, 0x47	; 71
     582:	0e 94 41 0c 	call	0x1882	; 0x1882 <__gtsf2>
     586:	18 16       	cp	r1, r24
     588:	0c f0       	brlt	.+2      	; 0x58c <main+0x50a>
     58a:	10 e0       	ldi	r17, 0x00	; 0
     58c:	11 23       	and	r17, r17
     58e:	09 f4       	brne	.+2      	; 0x592 <main+0x510>
     590:	4d c0       	rjmp	.+154    	; 0x62c <main+0x5aa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     592:	ce 01       	movw	r24, r28
     594:	8f 5b       	subi	r24, 0xBF	; 191
     596:	9f 4f       	sbci	r25, 0xFF	; 255
     598:	fc 01       	movw	r30, r24
     59a:	60 81       	ld	r22, Z
     59c:	71 81       	ldd	r23, Z+1	; 0x01
     59e:	82 81       	ldd	r24, Z+2	; 0x02
     5a0:	93 81       	ldd	r25, Z+3	; 0x03
     5a2:	20 e0       	ldi	r18, 0x00	; 0
     5a4:	30 e0       	ldi	r19, 0x00	; 0
     5a6:	40 e2       	ldi	r20, 0x20	; 32
     5a8:	51 e4       	ldi	r21, 0x41	; 65
     5aa:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     5ae:	dc 01       	movw	r26, r24
     5b0:	cb 01       	movw	r24, r22
     5b2:	8e 01       	movw	r16, r28
     5b4:	07 5b       	subi	r16, 0xB7	; 183
     5b6:	1f 4f       	sbci	r17, 0xFF	; 255
     5b8:	bc 01       	movw	r22, r24
     5ba:	cd 01       	movw	r24, r26
     5bc:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     5c0:	dc 01       	movw	r26, r24
     5c2:	cb 01       	movw	r24, r22
     5c4:	f8 01       	movw	r30, r16
     5c6:	91 83       	std	Z+1, r25	; 0x01
     5c8:	80 83       	st	Z, r24
     5ca:	27 c0       	rjmp	.+78     	; 0x61a <main+0x598>
     5cc:	ce 01       	movw	r24, r28
     5ce:	85 5b       	subi	r24, 0xB5	; 181
     5d0:	9f 4f       	sbci	r25, 0xFF	; 255
     5d2:	29 e1       	ldi	r18, 0x19	; 25
     5d4:	30 e0       	ldi	r19, 0x00	; 0
     5d6:	fc 01       	movw	r30, r24
     5d8:	31 83       	std	Z+1, r19	; 0x01
     5da:	20 83       	st	Z, r18
     5dc:	ce 01       	movw	r24, r28
     5de:	85 5b       	subi	r24, 0xB5	; 181
     5e0:	9f 4f       	sbci	r25, 0xFF	; 255
     5e2:	fc 01       	movw	r30, r24
     5e4:	80 81       	ld	r24, Z
     5e6:	91 81       	ldd	r25, Z+1	; 0x01
     5e8:	8c 01       	movw	r16, r24
     5ea:	c8 01       	movw	r24, r16
     5ec:	01 97       	sbiw	r24, 0x01	; 1
     5ee:	f1 f7       	brne	.-4      	; 0x5ec <main+0x56a>
     5f0:	8c 01       	movw	r16, r24
     5f2:	ce 01       	movw	r24, r28
     5f4:	85 5b       	subi	r24, 0xB5	; 181
     5f6:	9f 4f       	sbci	r25, 0xFF	; 255
     5f8:	fc 01       	movw	r30, r24
     5fa:	11 83       	std	Z+1, r17	; 0x01
     5fc:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5fe:	ce 01       	movw	r24, r28
     600:	87 5b       	subi	r24, 0xB7	; 183
     602:	9f 4f       	sbci	r25, 0xFF	; 255
     604:	9e 01       	movw	r18, r28
     606:	27 5b       	subi	r18, 0xB7	; 183
     608:	3f 4f       	sbci	r19, 0xFF	; 255
     60a:	f9 01       	movw	r30, r18
     60c:	20 81       	ld	r18, Z
     60e:	31 81       	ldd	r19, Z+1	; 0x01
     610:	21 50       	subi	r18, 0x01	; 1
     612:	30 40       	sbci	r19, 0x00	; 0
     614:	fc 01       	movw	r30, r24
     616:	31 83       	std	Z+1, r19	; 0x01
     618:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     61a:	ce 01       	movw	r24, r28
     61c:	87 5b       	subi	r24, 0xB7	; 183
     61e:	9f 4f       	sbci	r25, 0xFF	; 255
     620:	fc 01       	movw	r30, r24
     622:	80 81       	ld	r24, Z
     624:	91 81       	ldd	r25, Z+1	; 0x01
     626:	00 97       	sbiw	r24, 0x00	; 0
     628:	89 f6       	brne	.-94     	; 0x5cc <main+0x54a>
     62a:	2f c0       	rjmp	.+94     	; 0x68a <main+0x608>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     62c:	8e 01       	movw	r16, r28
     62e:	07 5b       	subi	r16, 0xB7	; 183
     630:	1f 4f       	sbci	r17, 0xFF	; 255
     632:	ce 01       	movw	r24, r28
     634:	8b 5b       	subi	r24, 0xBB	; 187
     636:	9f 4f       	sbci	r25, 0xFF	; 255
     638:	fc 01       	movw	r30, r24
     63a:	60 81       	ld	r22, Z
     63c:	71 81       	ldd	r23, Z+1	; 0x01
     63e:	82 81       	ldd	r24, Z+2	; 0x02
     640:	93 81       	ldd	r25, Z+3	; 0x03
     642:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     646:	dc 01       	movw	r26, r24
     648:	cb 01       	movw	r24, r22
     64a:	f8 01       	movw	r30, r16
     64c:	91 83       	std	Z+1, r25	; 0x01
     64e:	80 83       	st	Z, r24
     650:	ce 01       	movw	r24, r28
     652:	83 5b       	subi	r24, 0xB3	; 179
     654:	9f 4f       	sbci	r25, 0xFF	; 255
     656:	9e 01       	movw	r18, r28
     658:	27 5b       	subi	r18, 0xB7	; 183
     65a:	3f 4f       	sbci	r19, 0xFF	; 255
     65c:	f9 01       	movw	r30, r18
     65e:	20 81       	ld	r18, Z
     660:	31 81       	ldd	r19, Z+1	; 0x01
     662:	fc 01       	movw	r30, r24
     664:	31 83       	std	Z+1, r19	; 0x01
     666:	20 83       	st	Z, r18
     668:	ce 01       	movw	r24, r28
     66a:	83 5b       	subi	r24, 0xB3	; 179
     66c:	9f 4f       	sbci	r25, 0xFF	; 255
     66e:	fc 01       	movw	r30, r24
     670:	80 81       	ld	r24, Z
     672:	91 81       	ldd	r25, Z+1	; 0x01
     674:	8c 01       	movw	r16, r24
     676:	c8 01       	movw	r24, r16
     678:	01 97       	sbiw	r24, 0x01	; 1
     67a:	f1 f7       	brne	.-4      	; 0x678 <main+0x5f6>
     67c:	8c 01       	movw	r16, r24
     67e:	ce 01       	movw	r24, r28
     680:	83 5b       	subi	r24, 0xB3	; 179
     682:	9f 4f       	sbci	r25, 0xFF	; 255
     684:	fc 01       	movw	r30, r24
     686:	11 83       	std	Z+1, r17	; 0x01
     688:	00 83       	st	Z, r16
		_delay_ms(500);
		PORTB=0;
     68a:	88 e3       	ldi	r24, 0x38	; 56
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	fc 01       	movw	r30, r24
     690:	10 82       	st	Z, r1
     692:	9e 01       	movw	r18, r28
     694:	21 5b       	subi	r18, 0xB1	; 177
     696:	3f 4f       	sbci	r19, 0xFF	; 255
     698:	80 e0       	ldi	r24, 0x00	; 0
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	aa ef       	ldi	r26, 0xFA	; 250
     69e:	b3 e4       	ldi	r27, 0x43	; 67
     6a0:	f9 01       	movw	r30, r18
     6a2:	80 83       	st	Z, r24
     6a4:	91 83       	std	Z+1, r25	; 0x01
     6a6:	a2 83       	std	Z+2, r26	; 0x02
     6a8:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     6aa:	8e 01       	movw	r16, r28
     6ac:	0d 5a       	subi	r16, 0xAD	; 173
     6ae:	1f 4f       	sbci	r17, 0xFF	; 255
     6b0:	ce 01       	movw	r24, r28
     6b2:	81 5b       	subi	r24, 0xB1	; 177
     6b4:	9f 4f       	sbci	r25, 0xFF	; 255
     6b6:	fc 01       	movw	r30, r24
     6b8:	60 81       	ld	r22, Z
     6ba:	71 81       	ldd	r23, Z+1	; 0x01
     6bc:	82 81       	ldd	r24, Z+2	; 0x02
     6be:	93 81       	ldd	r25, Z+3	; 0x03
     6c0:	20 e0       	ldi	r18, 0x00	; 0
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	4a e7       	ldi	r20, 0x7A	; 122
     6c6:	53 e4       	ldi	r21, 0x43	; 67
     6c8:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     6cc:	dc 01       	movw	r26, r24
     6ce:	cb 01       	movw	r24, r22
     6d0:	f8 01       	movw	r30, r16
     6d2:	80 83       	st	Z, r24
     6d4:	91 83       	std	Z+1, r25	; 0x01
     6d6:	a2 83       	std	Z+2, r26	; 0x02
     6d8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     6da:	ce 01       	movw	r24, r28
     6dc:	8d 5a       	subi	r24, 0xAD	; 173
     6de:	9f 4f       	sbci	r25, 0xFF	; 255
     6e0:	11 e0       	ldi	r17, 0x01	; 1
     6e2:	fc 01       	movw	r30, r24
     6e4:	60 81       	ld	r22, Z
     6e6:	71 81       	ldd	r23, Z+1	; 0x01
     6e8:	82 81       	ldd	r24, Z+2	; 0x02
     6ea:	93 81       	ldd	r25, Z+3	; 0x03
     6ec:	20 e0       	ldi	r18, 0x00	; 0
     6ee:	30 e0       	ldi	r19, 0x00	; 0
     6f0:	40 e8       	ldi	r20, 0x80	; 128
     6f2:	5f e3       	ldi	r21, 0x3F	; 63
     6f4:	0e 94 a1 0c 	call	0x1942	; 0x1942 <__ltsf2>
     6f8:	88 23       	and	r24, r24
     6fa:	0c f0       	brlt	.+2      	; 0x6fe <main+0x67c>
     6fc:	10 e0       	ldi	r17, 0x00	; 0
     6fe:	11 23       	and	r17, r17
     700:	49 f0       	breq	.+18     	; 0x714 <main+0x692>
		__ticks = 1;
     702:	ce 01       	movw	r24, r28
     704:	89 5a       	subi	r24, 0xA9	; 169
     706:	9f 4f       	sbci	r25, 0xFF	; 255
     708:	21 e0       	ldi	r18, 0x01	; 1
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	fc 01       	movw	r30, r24
     70e:	31 83       	std	Z+1, r19	; 0x01
     710:	20 83       	st	Z, r18
     712:	74 c0       	rjmp	.+232    	; 0x7fc <main+0x77a>
	else if (__tmp > 65535)
     714:	ce 01       	movw	r24, r28
     716:	8d 5a       	subi	r24, 0xAD	; 173
     718:	9f 4f       	sbci	r25, 0xFF	; 255
     71a:	11 e0       	ldi	r17, 0x01	; 1
     71c:	fc 01       	movw	r30, r24
     71e:	60 81       	ld	r22, Z
     720:	71 81       	ldd	r23, Z+1	; 0x01
     722:	82 81       	ldd	r24, Z+2	; 0x02
     724:	93 81       	ldd	r25, Z+3	; 0x03
     726:	20 e0       	ldi	r18, 0x00	; 0
     728:	3f ef       	ldi	r19, 0xFF	; 255
     72a:	4f e7       	ldi	r20, 0x7F	; 127
     72c:	57 e4       	ldi	r21, 0x47	; 71
     72e:	0e 94 41 0c 	call	0x1882	; 0x1882 <__gtsf2>
     732:	18 16       	cp	r1, r24
     734:	0c f0       	brlt	.+2      	; 0x738 <main+0x6b6>
     736:	10 e0       	ldi	r17, 0x00	; 0
     738:	11 23       	and	r17, r17
     73a:	09 f4       	brne	.+2      	; 0x73e <main+0x6bc>
     73c:	4d c0       	rjmp	.+154    	; 0x7d8 <main+0x756>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     73e:	ce 01       	movw	r24, r28
     740:	81 5b       	subi	r24, 0xB1	; 177
     742:	9f 4f       	sbci	r25, 0xFF	; 255
     744:	fc 01       	movw	r30, r24
     746:	60 81       	ld	r22, Z
     748:	71 81       	ldd	r23, Z+1	; 0x01
     74a:	82 81       	ldd	r24, Z+2	; 0x02
     74c:	93 81       	ldd	r25, Z+3	; 0x03
     74e:	20 e0       	ldi	r18, 0x00	; 0
     750:	30 e0       	ldi	r19, 0x00	; 0
     752:	40 e2       	ldi	r20, 0x20	; 32
     754:	51 e4       	ldi	r21, 0x41	; 65
     756:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     75a:	dc 01       	movw	r26, r24
     75c:	cb 01       	movw	r24, r22
     75e:	8e 01       	movw	r16, r28
     760:	09 5a       	subi	r16, 0xA9	; 169
     762:	1f 4f       	sbci	r17, 0xFF	; 255
     764:	bc 01       	movw	r22, r24
     766:	cd 01       	movw	r24, r26
     768:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     76c:	dc 01       	movw	r26, r24
     76e:	cb 01       	movw	r24, r22
     770:	f8 01       	movw	r30, r16
     772:	91 83       	std	Z+1, r25	; 0x01
     774:	80 83       	st	Z, r24
     776:	27 c0       	rjmp	.+78     	; 0x7c6 <main+0x744>
     778:	ce 01       	movw	r24, r28
     77a:	87 5a       	subi	r24, 0xA7	; 167
     77c:	9f 4f       	sbci	r25, 0xFF	; 255
     77e:	29 e1       	ldi	r18, 0x19	; 25
     780:	30 e0       	ldi	r19, 0x00	; 0
     782:	fc 01       	movw	r30, r24
     784:	31 83       	std	Z+1, r19	; 0x01
     786:	20 83       	st	Z, r18
     788:	ce 01       	movw	r24, r28
     78a:	87 5a       	subi	r24, 0xA7	; 167
     78c:	9f 4f       	sbci	r25, 0xFF	; 255
     78e:	fc 01       	movw	r30, r24
     790:	80 81       	ld	r24, Z
     792:	91 81       	ldd	r25, Z+1	; 0x01
     794:	8c 01       	movw	r16, r24
     796:	c8 01       	movw	r24, r16
     798:	01 97       	sbiw	r24, 0x01	; 1
     79a:	f1 f7       	brne	.-4      	; 0x798 <main+0x716>
     79c:	8c 01       	movw	r16, r24
     79e:	ce 01       	movw	r24, r28
     7a0:	87 5a       	subi	r24, 0xA7	; 167
     7a2:	9f 4f       	sbci	r25, 0xFF	; 255
     7a4:	fc 01       	movw	r30, r24
     7a6:	11 83       	std	Z+1, r17	; 0x01
     7a8:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7aa:	ce 01       	movw	r24, r28
     7ac:	89 5a       	subi	r24, 0xA9	; 169
     7ae:	9f 4f       	sbci	r25, 0xFF	; 255
     7b0:	9e 01       	movw	r18, r28
     7b2:	29 5a       	subi	r18, 0xA9	; 169
     7b4:	3f 4f       	sbci	r19, 0xFF	; 255
     7b6:	f9 01       	movw	r30, r18
     7b8:	20 81       	ld	r18, Z
     7ba:	31 81       	ldd	r19, Z+1	; 0x01
     7bc:	21 50       	subi	r18, 0x01	; 1
     7be:	30 40       	sbci	r19, 0x00	; 0
     7c0:	fc 01       	movw	r30, r24
     7c2:	31 83       	std	Z+1, r19	; 0x01
     7c4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7c6:	ce 01       	movw	r24, r28
     7c8:	89 5a       	subi	r24, 0xA9	; 169
     7ca:	9f 4f       	sbci	r25, 0xFF	; 255
     7cc:	fc 01       	movw	r30, r24
     7ce:	80 81       	ld	r24, Z
     7d0:	91 81       	ldd	r25, Z+1	; 0x01
     7d2:	00 97       	sbiw	r24, 0x00	; 0
     7d4:	89 f6       	brne	.-94     	; 0x778 <main+0x6f6>
     7d6:	2f c0       	rjmp	.+94     	; 0x836 <main+0x7b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7d8:	8e 01       	movw	r16, r28
     7da:	09 5a       	subi	r16, 0xA9	; 169
     7dc:	1f 4f       	sbci	r17, 0xFF	; 255
     7de:	ce 01       	movw	r24, r28
     7e0:	8d 5a       	subi	r24, 0xAD	; 173
     7e2:	9f 4f       	sbci	r25, 0xFF	; 255
     7e4:	fc 01       	movw	r30, r24
     7e6:	60 81       	ld	r22, Z
     7e8:	71 81       	ldd	r23, Z+1	; 0x01
     7ea:	82 81       	ldd	r24, Z+2	; 0x02
     7ec:	93 81       	ldd	r25, Z+3	; 0x03
     7ee:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     7f2:	dc 01       	movw	r26, r24
     7f4:	cb 01       	movw	r24, r22
     7f6:	f8 01       	movw	r30, r16
     7f8:	91 83       	std	Z+1, r25	; 0x01
     7fa:	80 83       	st	Z, r24
     7fc:	ce 01       	movw	r24, r28
     7fe:	85 5a       	subi	r24, 0xA5	; 165
     800:	9f 4f       	sbci	r25, 0xFF	; 255
     802:	9e 01       	movw	r18, r28
     804:	29 5a       	subi	r18, 0xA9	; 169
     806:	3f 4f       	sbci	r19, 0xFF	; 255
     808:	f9 01       	movw	r30, r18
     80a:	20 81       	ld	r18, Z
     80c:	31 81       	ldd	r19, Z+1	; 0x01
     80e:	fc 01       	movw	r30, r24
     810:	31 83       	std	Z+1, r19	; 0x01
     812:	20 83       	st	Z, r18
     814:	ce 01       	movw	r24, r28
     816:	85 5a       	subi	r24, 0xA5	; 165
     818:	9f 4f       	sbci	r25, 0xFF	; 255
     81a:	fc 01       	movw	r30, r24
     81c:	80 81       	ld	r24, Z
     81e:	91 81       	ldd	r25, Z+1	; 0x01
     820:	8c 01       	movw	r16, r24
     822:	c8 01       	movw	r24, r16
     824:	01 97       	sbiw	r24, 0x01	; 1
     826:	f1 f7       	brne	.-4      	; 0x824 <main+0x7a2>
     828:	8c 01       	movw	r16, r24
     82a:	ce 01       	movw	r24, r28
     82c:	85 5a       	subi	r24, 0xA5	; 165
     82e:	9f 4f       	sbci	r25, 0xFF	; 255
     830:	fc 01       	movw	r30, r24
     832:	11 83       	std	Z+1, r17	; 0x01
     834:	00 83       	st	Z, r16
		_delay_ms(500);
		
		PORTB=0xaa;
     836:	88 e3       	ldi	r24, 0x38	; 56
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	2a ea       	ldi	r18, 0xAA	; 170
     83c:	fc 01       	movw	r30, r24
     83e:	20 83       	st	Z, r18
     840:	9e 01       	movw	r18, r28
     842:	23 5a       	subi	r18, 0xA3	; 163
     844:	3f 4f       	sbci	r19, 0xFF	; 255
     846:	80 e0       	ldi	r24, 0x00	; 0
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	aa ef       	ldi	r26, 0xFA	; 250
     84c:	b3 e4       	ldi	r27, 0x43	; 67
     84e:	f9 01       	movw	r30, r18
     850:	80 83       	st	Z, r24
     852:	91 83       	std	Z+1, r25	; 0x01
     854:	a2 83       	std	Z+2, r26	; 0x02
     856:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     858:	8e 01       	movw	r16, r28
     85a:	0f 59       	subi	r16, 0x9F	; 159
     85c:	1f 4f       	sbci	r17, 0xFF	; 255
     85e:	ce 01       	movw	r24, r28
     860:	83 5a       	subi	r24, 0xA3	; 163
     862:	9f 4f       	sbci	r25, 0xFF	; 255
     864:	fc 01       	movw	r30, r24
     866:	60 81       	ld	r22, Z
     868:	71 81       	ldd	r23, Z+1	; 0x01
     86a:	82 81       	ldd	r24, Z+2	; 0x02
     86c:	93 81       	ldd	r25, Z+3	; 0x03
     86e:	20 e0       	ldi	r18, 0x00	; 0
     870:	30 e0       	ldi	r19, 0x00	; 0
     872:	4a e7       	ldi	r20, 0x7A	; 122
     874:	53 e4       	ldi	r21, 0x43	; 67
     876:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     87a:	dc 01       	movw	r26, r24
     87c:	cb 01       	movw	r24, r22
     87e:	f8 01       	movw	r30, r16
     880:	80 83       	st	Z, r24
     882:	91 83       	std	Z+1, r25	; 0x01
     884:	a2 83       	std	Z+2, r26	; 0x02
     886:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     888:	ce 01       	movw	r24, r28
     88a:	8f 59       	subi	r24, 0x9F	; 159
     88c:	9f 4f       	sbci	r25, 0xFF	; 255
     88e:	11 e0       	ldi	r17, 0x01	; 1
     890:	fc 01       	movw	r30, r24
     892:	60 81       	ld	r22, Z
     894:	71 81       	ldd	r23, Z+1	; 0x01
     896:	82 81       	ldd	r24, Z+2	; 0x02
     898:	93 81       	ldd	r25, Z+3	; 0x03
     89a:	20 e0       	ldi	r18, 0x00	; 0
     89c:	30 e0       	ldi	r19, 0x00	; 0
     89e:	40 e8       	ldi	r20, 0x80	; 128
     8a0:	5f e3       	ldi	r21, 0x3F	; 63
     8a2:	0e 94 a1 0c 	call	0x1942	; 0x1942 <__ltsf2>
     8a6:	88 23       	and	r24, r24
     8a8:	0c f0       	brlt	.+2      	; 0x8ac <__stack+0x4d>
     8aa:	10 e0       	ldi	r17, 0x00	; 0
     8ac:	11 23       	and	r17, r17
     8ae:	49 f0       	breq	.+18     	; 0x8c2 <__stack+0x63>
		__ticks = 1;
     8b0:	ce 01       	movw	r24, r28
     8b2:	8b 59       	subi	r24, 0x9B	; 155
     8b4:	9f 4f       	sbci	r25, 0xFF	; 255
     8b6:	21 e0       	ldi	r18, 0x01	; 1
     8b8:	30 e0       	ldi	r19, 0x00	; 0
     8ba:	fc 01       	movw	r30, r24
     8bc:	31 83       	std	Z+1, r19	; 0x01
     8be:	20 83       	st	Z, r18
     8c0:	74 c0       	rjmp	.+232    	; 0x9aa <__stack+0x14b>
	else if (__tmp > 65535)
     8c2:	ce 01       	movw	r24, r28
     8c4:	8f 59       	subi	r24, 0x9F	; 159
     8c6:	9f 4f       	sbci	r25, 0xFF	; 255
     8c8:	11 e0       	ldi	r17, 0x01	; 1
     8ca:	fc 01       	movw	r30, r24
     8cc:	60 81       	ld	r22, Z
     8ce:	71 81       	ldd	r23, Z+1	; 0x01
     8d0:	82 81       	ldd	r24, Z+2	; 0x02
     8d2:	93 81       	ldd	r25, Z+3	; 0x03
     8d4:	20 e0       	ldi	r18, 0x00	; 0
     8d6:	3f ef       	ldi	r19, 0xFF	; 255
     8d8:	4f e7       	ldi	r20, 0x7F	; 127
     8da:	57 e4       	ldi	r21, 0x47	; 71
     8dc:	0e 94 41 0c 	call	0x1882	; 0x1882 <__gtsf2>
     8e0:	18 16       	cp	r1, r24
     8e2:	0c f0       	brlt	.+2      	; 0x8e6 <__stack+0x87>
     8e4:	10 e0       	ldi	r17, 0x00	; 0
     8e6:	11 23       	and	r17, r17
     8e8:	09 f4       	brne	.+2      	; 0x8ec <__stack+0x8d>
     8ea:	4d c0       	rjmp	.+154    	; 0x986 <__stack+0x127>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8ec:	ce 01       	movw	r24, r28
     8ee:	83 5a       	subi	r24, 0xA3	; 163
     8f0:	9f 4f       	sbci	r25, 0xFF	; 255
     8f2:	fc 01       	movw	r30, r24
     8f4:	60 81       	ld	r22, Z
     8f6:	71 81       	ldd	r23, Z+1	; 0x01
     8f8:	82 81       	ldd	r24, Z+2	; 0x02
     8fa:	93 81       	ldd	r25, Z+3	; 0x03
     8fc:	20 e0       	ldi	r18, 0x00	; 0
     8fe:	30 e0       	ldi	r19, 0x00	; 0
     900:	40 e2       	ldi	r20, 0x20	; 32
     902:	51 e4       	ldi	r21, 0x41	; 65
     904:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     908:	dc 01       	movw	r26, r24
     90a:	cb 01       	movw	r24, r22
     90c:	8e 01       	movw	r16, r28
     90e:	0b 59       	subi	r16, 0x9B	; 155
     910:	1f 4f       	sbci	r17, 0xFF	; 255
     912:	bc 01       	movw	r22, r24
     914:	cd 01       	movw	r24, r26
     916:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     91a:	dc 01       	movw	r26, r24
     91c:	cb 01       	movw	r24, r22
     91e:	f8 01       	movw	r30, r16
     920:	91 83       	std	Z+1, r25	; 0x01
     922:	80 83       	st	Z, r24
     924:	27 c0       	rjmp	.+78     	; 0x974 <__stack+0x115>
     926:	ce 01       	movw	r24, r28
     928:	89 59       	subi	r24, 0x99	; 153
     92a:	9f 4f       	sbci	r25, 0xFF	; 255
     92c:	29 e1       	ldi	r18, 0x19	; 25
     92e:	30 e0       	ldi	r19, 0x00	; 0
     930:	fc 01       	movw	r30, r24
     932:	31 83       	std	Z+1, r19	; 0x01
     934:	20 83       	st	Z, r18
     936:	ce 01       	movw	r24, r28
     938:	89 59       	subi	r24, 0x99	; 153
     93a:	9f 4f       	sbci	r25, 0xFF	; 255
     93c:	fc 01       	movw	r30, r24
     93e:	80 81       	ld	r24, Z
     940:	91 81       	ldd	r25, Z+1	; 0x01
     942:	8c 01       	movw	r16, r24
     944:	c8 01       	movw	r24, r16
     946:	01 97       	sbiw	r24, 0x01	; 1
     948:	f1 f7       	brne	.-4      	; 0x946 <__stack+0xe7>
     94a:	8c 01       	movw	r16, r24
     94c:	ce 01       	movw	r24, r28
     94e:	89 59       	subi	r24, 0x99	; 153
     950:	9f 4f       	sbci	r25, 0xFF	; 255
     952:	fc 01       	movw	r30, r24
     954:	11 83       	std	Z+1, r17	; 0x01
     956:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     958:	ce 01       	movw	r24, r28
     95a:	8b 59       	subi	r24, 0x9B	; 155
     95c:	9f 4f       	sbci	r25, 0xFF	; 255
     95e:	9e 01       	movw	r18, r28
     960:	2b 59       	subi	r18, 0x9B	; 155
     962:	3f 4f       	sbci	r19, 0xFF	; 255
     964:	f9 01       	movw	r30, r18
     966:	20 81       	ld	r18, Z
     968:	31 81       	ldd	r19, Z+1	; 0x01
     96a:	21 50       	subi	r18, 0x01	; 1
     96c:	30 40       	sbci	r19, 0x00	; 0
     96e:	fc 01       	movw	r30, r24
     970:	31 83       	std	Z+1, r19	; 0x01
     972:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     974:	ce 01       	movw	r24, r28
     976:	8b 59       	subi	r24, 0x9B	; 155
     978:	9f 4f       	sbci	r25, 0xFF	; 255
     97a:	fc 01       	movw	r30, r24
     97c:	80 81       	ld	r24, Z
     97e:	91 81       	ldd	r25, Z+1	; 0x01
     980:	00 97       	sbiw	r24, 0x00	; 0
     982:	89 f6       	brne	.-94     	; 0x926 <__stack+0xc7>
     984:	2f c0       	rjmp	.+94     	; 0x9e4 <__stack+0x185>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     986:	8e 01       	movw	r16, r28
     988:	0b 59       	subi	r16, 0x9B	; 155
     98a:	1f 4f       	sbci	r17, 0xFF	; 255
     98c:	ce 01       	movw	r24, r28
     98e:	8f 59       	subi	r24, 0x9F	; 159
     990:	9f 4f       	sbci	r25, 0xFF	; 255
     992:	fc 01       	movw	r30, r24
     994:	60 81       	ld	r22, Z
     996:	71 81       	ldd	r23, Z+1	; 0x01
     998:	82 81       	ldd	r24, Z+2	; 0x02
     99a:	93 81       	ldd	r25, Z+3	; 0x03
     99c:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     9a0:	dc 01       	movw	r26, r24
     9a2:	cb 01       	movw	r24, r22
     9a4:	f8 01       	movw	r30, r16
     9a6:	91 83       	std	Z+1, r25	; 0x01
     9a8:	80 83       	st	Z, r24
     9aa:	ce 01       	movw	r24, r28
     9ac:	87 59       	subi	r24, 0x97	; 151
     9ae:	9f 4f       	sbci	r25, 0xFF	; 255
     9b0:	9e 01       	movw	r18, r28
     9b2:	2b 59       	subi	r18, 0x9B	; 155
     9b4:	3f 4f       	sbci	r19, 0xFF	; 255
     9b6:	f9 01       	movw	r30, r18
     9b8:	20 81       	ld	r18, Z
     9ba:	31 81       	ldd	r19, Z+1	; 0x01
     9bc:	fc 01       	movw	r30, r24
     9be:	31 83       	std	Z+1, r19	; 0x01
     9c0:	20 83       	st	Z, r18
     9c2:	ce 01       	movw	r24, r28
     9c4:	87 59       	subi	r24, 0x97	; 151
     9c6:	9f 4f       	sbci	r25, 0xFF	; 255
     9c8:	fc 01       	movw	r30, r24
     9ca:	80 81       	ld	r24, Z
     9cc:	91 81       	ldd	r25, Z+1	; 0x01
     9ce:	8c 01       	movw	r16, r24
     9d0:	c8 01       	movw	r24, r16
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	f1 f7       	brne	.-4      	; 0x9d2 <__stack+0x173>
     9d6:	8c 01       	movw	r16, r24
     9d8:	ce 01       	movw	r24, r28
     9da:	87 59       	subi	r24, 0x97	; 151
     9dc:	9f 4f       	sbci	r25, 0xFF	; 255
     9de:	fc 01       	movw	r30, r24
     9e0:	11 83       	std	Z+1, r17	; 0x01
     9e2:	00 83       	st	Z, r16
		_delay_ms(500);
		PORTB=0x55;
     9e4:	88 e3       	ldi	r24, 0x38	; 56
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	25 e5       	ldi	r18, 0x55	; 85
     9ea:	fc 01       	movw	r30, r24
     9ec:	20 83       	st	Z, r18
     9ee:	9e 01       	movw	r18, r28
     9f0:	25 59       	subi	r18, 0x95	; 149
     9f2:	3f 4f       	sbci	r19, 0xFF	; 255
     9f4:	80 e0       	ldi	r24, 0x00	; 0
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	aa ef       	ldi	r26, 0xFA	; 250
     9fa:	b3 e4       	ldi	r27, 0x43	; 67
     9fc:	f9 01       	movw	r30, r18
     9fe:	80 83       	st	Z, r24
     a00:	91 83       	std	Z+1, r25	; 0x01
     a02:	a2 83       	std	Z+2, r26	; 0x02
     a04:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     a06:	8e 01       	movw	r16, r28
     a08:	01 59       	subi	r16, 0x91	; 145
     a0a:	1f 4f       	sbci	r17, 0xFF	; 255
     a0c:	ce 01       	movw	r24, r28
     a0e:	85 59       	subi	r24, 0x95	; 149
     a10:	9f 4f       	sbci	r25, 0xFF	; 255
     a12:	fc 01       	movw	r30, r24
     a14:	60 81       	ld	r22, Z
     a16:	71 81       	ldd	r23, Z+1	; 0x01
     a18:	82 81       	ldd	r24, Z+2	; 0x02
     a1a:	93 81       	ldd	r25, Z+3	; 0x03
     a1c:	20 e0       	ldi	r18, 0x00	; 0
     a1e:	30 e0       	ldi	r19, 0x00	; 0
     a20:	4a e7       	ldi	r20, 0x7A	; 122
     a22:	53 e4       	ldi	r21, 0x43	; 67
     a24:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     a28:	dc 01       	movw	r26, r24
     a2a:	cb 01       	movw	r24, r22
     a2c:	f8 01       	movw	r30, r16
     a2e:	80 83       	st	Z, r24
     a30:	91 83       	std	Z+1, r25	; 0x01
     a32:	a2 83       	std	Z+2, r26	; 0x02
     a34:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     a36:	ce 01       	movw	r24, r28
     a38:	81 59       	subi	r24, 0x91	; 145
     a3a:	9f 4f       	sbci	r25, 0xFF	; 255
     a3c:	11 e0       	ldi	r17, 0x01	; 1
     a3e:	fc 01       	movw	r30, r24
     a40:	60 81       	ld	r22, Z
     a42:	71 81       	ldd	r23, Z+1	; 0x01
     a44:	82 81       	ldd	r24, Z+2	; 0x02
     a46:	93 81       	ldd	r25, Z+3	; 0x03
     a48:	20 e0       	ldi	r18, 0x00	; 0
     a4a:	30 e0       	ldi	r19, 0x00	; 0
     a4c:	40 e8       	ldi	r20, 0x80	; 128
     a4e:	5f e3       	ldi	r21, 0x3F	; 63
     a50:	0e 94 a1 0c 	call	0x1942	; 0x1942 <__ltsf2>
     a54:	88 23       	and	r24, r24
     a56:	0c f0       	brlt	.+2      	; 0xa5a <__stack+0x1fb>
     a58:	10 e0       	ldi	r17, 0x00	; 0
     a5a:	11 23       	and	r17, r17
     a5c:	49 f0       	breq	.+18     	; 0xa70 <__stack+0x211>
		__ticks = 1;
     a5e:	ce 01       	movw	r24, r28
     a60:	8d 58       	subi	r24, 0x8D	; 141
     a62:	9f 4f       	sbci	r25, 0xFF	; 255
     a64:	21 e0       	ldi	r18, 0x01	; 1
     a66:	30 e0       	ldi	r19, 0x00	; 0
     a68:	fc 01       	movw	r30, r24
     a6a:	31 83       	std	Z+1, r19	; 0x01
     a6c:	20 83       	st	Z, r18
     a6e:	74 c0       	rjmp	.+232    	; 0xb58 <__stack+0x2f9>
	else if (__tmp > 65535)
     a70:	ce 01       	movw	r24, r28
     a72:	81 59       	subi	r24, 0x91	; 145
     a74:	9f 4f       	sbci	r25, 0xFF	; 255
     a76:	11 e0       	ldi	r17, 0x01	; 1
     a78:	fc 01       	movw	r30, r24
     a7a:	60 81       	ld	r22, Z
     a7c:	71 81       	ldd	r23, Z+1	; 0x01
     a7e:	82 81       	ldd	r24, Z+2	; 0x02
     a80:	93 81       	ldd	r25, Z+3	; 0x03
     a82:	20 e0       	ldi	r18, 0x00	; 0
     a84:	3f ef       	ldi	r19, 0xFF	; 255
     a86:	4f e7       	ldi	r20, 0x7F	; 127
     a88:	57 e4       	ldi	r21, 0x47	; 71
     a8a:	0e 94 41 0c 	call	0x1882	; 0x1882 <__gtsf2>
     a8e:	18 16       	cp	r1, r24
     a90:	0c f0       	brlt	.+2      	; 0xa94 <__stack+0x235>
     a92:	10 e0       	ldi	r17, 0x00	; 0
     a94:	11 23       	and	r17, r17
     a96:	09 f4       	brne	.+2      	; 0xa9a <__stack+0x23b>
     a98:	4d c0       	rjmp	.+154    	; 0xb34 <__stack+0x2d5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a9a:	ce 01       	movw	r24, r28
     a9c:	85 59       	subi	r24, 0x95	; 149
     a9e:	9f 4f       	sbci	r25, 0xFF	; 255
     aa0:	fc 01       	movw	r30, r24
     aa2:	60 81       	ld	r22, Z
     aa4:	71 81       	ldd	r23, Z+1	; 0x01
     aa6:	82 81       	ldd	r24, Z+2	; 0x02
     aa8:	93 81       	ldd	r25, Z+3	; 0x03
     aaa:	20 e0       	ldi	r18, 0x00	; 0
     aac:	30 e0       	ldi	r19, 0x00	; 0
     aae:	40 e2       	ldi	r20, 0x20	; 32
     ab0:	51 e4       	ldi	r21, 0x41	; 65
     ab2:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     ab6:	dc 01       	movw	r26, r24
     ab8:	cb 01       	movw	r24, r22
     aba:	8e 01       	movw	r16, r28
     abc:	0d 58       	subi	r16, 0x8D	; 141
     abe:	1f 4f       	sbci	r17, 0xFF	; 255
     ac0:	bc 01       	movw	r22, r24
     ac2:	cd 01       	movw	r24, r26
     ac4:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     ac8:	dc 01       	movw	r26, r24
     aca:	cb 01       	movw	r24, r22
     acc:	f8 01       	movw	r30, r16
     ace:	91 83       	std	Z+1, r25	; 0x01
     ad0:	80 83       	st	Z, r24
     ad2:	27 c0       	rjmp	.+78     	; 0xb22 <__stack+0x2c3>
     ad4:	ce 01       	movw	r24, r28
     ad6:	8b 58       	subi	r24, 0x8B	; 139
     ad8:	9f 4f       	sbci	r25, 0xFF	; 255
     ada:	29 e1       	ldi	r18, 0x19	; 25
     adc:	30 e0       	ldi	r19, 0x00	; 0
     ade:	fc 01       	movw	r30, r24
     ae0:	31 83       	std	Z+1, r19	; 0x01
     ae2:	20 83       	st	Z, r18
     ae4:	ce 01       	movw	r24, r28
     ae6:	8b 58       	subi	r24, 0x8B	; 139
     ae8:	9f 4f       	sbci	r25, 0xFF	; 255
     aea:	fc 01       	movw	r30, r24
     aec:	80 81       	ld	r24, Z
     aee:	91 81       	ldd	r25, Z+1	; 0x01
     af0:	8c 01       	movw	r16, r24
     af2:	c8 01       	movw	r24, r16
     af4:	01 97       	sbiw	r24, 0x01	; 1
     af6:	f1 f7       	brne	.-4      	; 0xaf4 <__stack+0x295>
     af8:	8c 01       	movw	r16, r24
     afa:	ce 01       	movw	r24, r28
     afc:	8b 58       	subi	r24, 0x8B	; 139
     afe:	9f 4f       	sbci	r25, 0xFF	; 255
     b00:	fc 01       	movw	r30, r24
     b02:	11 83       	std	Z+1, r17	; 0x01
     b04:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b06:	ce 01       	movw	r24, r28
     b08:	8d 58       	subi	r24, 0x8D	; 141
     b0a:	9f 4f       	sbci	r25, 0xFF	; 255
     b0c:	9e 01       	movw	r18, r28
     b0e:	2d 58       	subi	r18, 0x8D	; 141
     b10:	3f 4f       	sbci	r19, 0xFF	; 255
     b12:	f9 01       	movw	r30, r18
     b14:	20 81       	ld	r18, Z
     b16:	31 81       	ldd	r19, Z+1	; 0x01
     b18:	21 50       	subi	r18, 0x01	; 1
     b1a:	30 40       	sbci	r19, 0x00	; 0
     b1c:	fc 01       	movw	r30, r24
     b1e:	31 83       	std	Z+1, r19	; 0x01
     b20:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b22:	ce 01       	movw	r24, r28
     b24:	8d 58       	subi	r24, 0x8D	; 141
     b26:	9f 4f       	sbci	r25, 0xFF	; 255
     b28:	fc 01       	movw	r30, r24
     b2a:	80 81       	ld	r24, Z
     b2c:	91 81       	ldd	r25, Z+1	; 0x01
     b2e:	00 97       	sbiw	r24, 0x00	; 0
     b30:	89 f6       	brne	.-94     	; 0xad4 <__stack+0x275>
     b32:	2f c0       	rjmp	.+94     	; 0xb92 <__stack+0x333>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b34:	8e 01       	movw	r16, r28
     b36:	0d 58       	subi	r16, 0x8D	; 141
     b38:	1f 4f       	sbci	r17, 0xFF	; 255
     b3a:	ce 01       	movw	r24, r28
     b3c:	81 59       	subi	r24, 0x91	; 145
     b3e:	9f 4f       	sbci	r25, 0xFF	; 255
     b40:	fc 01       	movw	r30, r24
     b42:	60 81       	ld	r22, Z
     b44:	71 81       	ldd	r23, Z+1	; 0x01
     b46:	82 81       	ldd	r24, Z+2	; 0x02
     b48:	93 81       	ldd	r25, Z+3	; 0x03
     b4a:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     b4e:	dc 01       	movw	r26, r24
     b50:	cb 01       	movw	r24, r22
     b52:	f8 01       	movw	r30, r16
     b54:	91 83       	std	Z+1, r25	; 0x01
     b56:	80 83       	st	Z, r24
     b58:	ce 01       	movw	r24, r28
     b5a:	89 58       	subi	r24, 0x89	; 137
     b5c:	9f 4f       	sbci	r25, 0xFF	; 255
     b5e:	9e 01       	movw	r18, r28
     b60:	2d 58       	subi	r18, 0x8D	; 141
     b62:	3f 4f       	sbci	r19, 0xFF	; 255
     b64:	f9 01       	movw	r30, r18
     b66:	20 81       	ld	r18, Z
     b68:	31 81       	ldd	r19, Z+1	; 0x01
     b6a:	fc 01       	movw	r30, r24
     b6c:	31 83       	std	Z+1, r19	; 0x01
     b6e:	20 83       	st	Z, r18
     b70:	ce 01       	movw	r24, r28
     b72:	89 58       	subi	r24, 0x89	; 137
     b74:	9f 4f       	sbci	r25, 0xFF	; 255
     b76:	fc 01       	movw	r30, r24
     b78:	80 81       	ld	r24, Z
     b7a:	91 81       	ldd	r25, Z+1	; 0x01
     b7c:	8c 01       	movw	r16, r24
     b7e:	c8 01       	movw	r24, r16
     b80:	01 97       	sbiw	r24, 0x01	; 1
     b82:	f1 f7       	brne	.-4      	; 0xb80 <__stack+0x321>
     b84:	8c 01       	movw	r16, r24
     b86:	ce 01       	movw	r24, r28
     b88:	89 58       	subi	r24, 0x89	; 137
     b8a:	9f 4f       	sbci	r25, 0xFF	; 255
     b8c:	fc 01       	movw	r30, r24
     b8e:	11 83       	std	Z+1, r17	; 0x01
     b90:	00 83       	st	Z, r16
		_delay_ms(500);
		
		for (int i=1; i<=128; i*=2)
     b92:	81 e0       	ldi	r24, 0x01	; 1
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	9a 83       	std	Y+2, r25	; 0x02
     b98:	89 83       	std	Y+1, r24	; 0x01
     b9a:	dd c0       	rjmp	.+442    	; 0xd56 <__stack+0x4f7>
		{
			PORTB=i;
     b9c:	88 e3       	ldi	r24, 0x38	; 56
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	29 81       	ldd	r18, Y+1	; 0x01
     ba2:	fc 01       	movw	r30, r24
     ba4:	20 83       	st	Z, r18
     ba6:	9e 01       	movw	r18, r28
     ba8:	27 58       	subi	r18, 0x87	; 135
     baa:	3f 4f       	sbci	r19, 0xFF	; 255
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	aa ef       	ldi	r26, 0xFA	; 250
     bb2:	b3 e4       	ldi	r27, 0x43	; 67
     bb4:	f9 01       	movw	r30, r18
     bb6:	80 83       	st	Z, r24
     bb8:	91 83       	std	Z+1, r25	; 0x01
     bba:	a2 83       	std	Z+2, r26	; 0x02
     bbc:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     bbe:	8e 01       	movw	r16, r28
     bc0:	03 58       	subi	r16, 0x83	; 131
     bc2:	1f 4f       	sbci	r17, 0xFF	; 255
     bc4:	ce 01       	movw	r24, r28
     bc6:	87 58       	subi	r24, 0x87	; 135
     bc8:	9f 4f       	sbci	r25, 0xFF	; 255
     bca:	fc 01       	movw	r30, r24
     bcc:	60 81       	ld	r22, Z
     bce:	71 81       	ldd	r23, Z+1	; 0x01
     bd0:	82 81       	ldd	r24, Z+2	; 0x02
     bd2:	93 81       	ldd	r25, Z+3	; 0x03
     bd4:	20 e0       	ldi	r18, 0x00	; 0
     bd6:	30 e0       	ldi	r19, 0x00	; 0
     bd8:	4a e7       	ldi	r20, 0x7A	; 122
     bda:	53 e4       	ldi	r21, 0x43	; 67
     bdc:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     be0:	dc 01       	movw	r26, r24
     be2:	cb 01       	movw	r24, r22
     be4:	f8 01       	movw	r30, r16
     be6:	80 83       	st	Z, r24
     be8:	91 83       	std	Z+1, r25	; 0x01
     bea:	a2 83       	std	Z+2, r26	; 0x02
     bec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     bee:	ce 01       	movw	r24, r28
     bf0:	83 58       	subi	r24, 0x83	; 131
     bf2:	9f 4f       	sbci	r25, 0xFF	; 255
     bf4:	11 e0       	ldi	r17, 0x01	; 1
     bf6:	fc 01       	movw	r30, r24
     bf8:	60 81       	ld	r22, Z
     bfa:	71 81       	ldd	r23, Z+1	; 0x01
     bfc:	82 81       	ldd	r24, Z+2	; 0x02
     bfe:	93 81       	ldd	r25, Z+3	; 0x03
     c00:	20 e0       	ldi	r18, 0x00	; 0
     c02:	30 e0       	ldi	r19, 0x00	; 0
     c04:	40 e8       	ldi	r20, 0x80	; 128
     c06:	5f e3       	ldi	r21, 0x3F	; 63
     c08:	0e 94 a1 0c 	call	0x1942	; 0x1942 <__ltsf2>
     c0c:	88 23       	and	r24, r24
     c0e:	0c f0       	brlt	.+2      	; 0xc12 <__stack+0x3b3>
     c10:	10 e0       	ldi	r17, 0x00	; 0
     c12:	11 23       	and	r17, r17
     c14:	49 f0       	breq	.+18     	; 0xc28 <__stack+0x3c9>
		__ticks = 1;
     c16:	ce 01       	movw	r24, r28
     c18:	8f 57       	subi	r24, 0x7F	; 127
     c1a:	9f 4f       	sbci	r25, 0xFF	; 255
     c1c:	21 e0       	ldi	r18, 0x01	; 1
     c1e:	30 e0       	ldi	r19, 0x00	; 0
     c20:	fc 01       	movw	r30, r24
     c22:	31 83       	std	Z+1, r19	; 0x01
     c24:	20 83       	st	Z, r18
     c26:	74 c0       	rjmp	.+232    	; 0xd10 <__stack+0x4b1>
	else if (__tmp > 65535)
     c28:	ce 01       	movw	r24, r28
     c2a:	83 58       	subi	r24, 0x83	; 131
     c2c:	9f 4f       	sbci	r25, 0xFF	; 255
     c2e:	11 e0       	ldi	r17, 0x01	; 1
     c30:	fc 01       	movw	r30, r24
     c32:	60 81       	ld	r22, Z
     c34:	71 81       	ldd	r23, Z+1	; 0x01
     c36:	82 81       	ldd	r24, Z+2	; 0x02
     c38:	93 81       	ldd	r25, Z+3	; 0x03
     c3a:	20 e0       	ldi	r18, 0x00	; 0
     c3c:	3f ef       	ldi	r19, 0xFF	; 255
     c3e:	4f e7       	ldi	r20, 0x7F	; 127
     c40:	57 e4       	ldi	r21, 0x47	; 71
     c42:	0e 94 41 0c 	call	0x1882	; 0x1882 <__gtsf2>
     c46:	18 16       	cp	r1, r24
     c48:	0c f0       	brlt	.+2      	; 0xc4c <__stack+0x3ed>
     c4a:	10 e0       	ldi	r17, 0x00	; 0
     c4c:	11 23       	and	r17, r17
     c4e:	09 f4       	brne	.+2      	; 0xc52 <__stack+0x3f3>
     c50:	4d c0       	rjmp	.+154    	; 0xcec <__stack+0x48d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c52:	ce 01       	movw	r24, r28
     c54:	87 58       	subi	r24, 0x87	; 135
     c56:	9f 4f       	sbci	r25, 0xFF	; 255
     c58:	fc 01       	movw	r30, r24
     c5a:	60 81       	ld	r22, Z
     c5c:	71 81       	ldd	r23, Z+1	; 0x01
     c5e:	82 81       	ldd	r24, Z+2	; 0x02
     c60:	93 81       	ldd	r25, Z+3	; 0x03
     c62:	20 e0       	ldi	r18, 0x00	; 0
     c64:	30 e0       	ldi	r19, 0x00	; 0
     c66:	40 e2       	ldi	r20, 0x20	; 32
     c68:	51 e4       	ldi	r21, 0x41	; 65
     c6a:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     c6e:	dc 01       	movw	r26, r24
     c70:	cb 01       	movw	r24, r22
     c72:	8e 01       	movw	r16, r28
     c74:	0f 57       	subi	r16, 0x7F	; 127
     c76:	1f 4f       	sbci	r17, 0xFF	; 255
     c78:	bc 01       	movw	r22, r24
     c7a:	cd 01       	movw	r24, r26
     c7c:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     c80:	dc 01       	movw	r26, r24
     c82:	cb 01       	movw	r24, r22
     c84:	f8 01       	movw	r30, r16
     c86:	91 83       	std	Z+1, r25	; 0x01
     c88:	80 83       	st	Z, r24
     c8a:	27 c0       	rjmp	.+78     	; 0xcda <__stack+0x47b>
     c8c:	ce 01       	movw	r24, r28
     c8e:	8d 57       	subi	r24, 0x7D	; 125
     c90:	9f 4f       	sbci	r25, 0xFF	; 255
     c92:	29 e1       	ldi	r18, 0x19	; 25
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	fc 01       	movw	r30, r24
     c98:	31 83       	std	Z+1, r19	; 0x01
     c9a:	20 83       	st	Z, r18
     c9c:	ce 01       	movw	r24, r28
     c9e:	8d 57       	subi	r24, 0x7D	; 125
     ca0:	9f 4f       	sbci	r25, 0xFF	; 255
     ca2:	fc 01       	movw	r30, r24
     ca4:	80 81       	ld	r24, Z
     ca6:	91 81       	ldd	r25, Z+1	; 0x01
     ca8:	8c 01       	movw	r16, r24
     caa:	c8 01       	movw	r24, r16
     cac:	01 97       	sbiw	r24, 0x01	; 1
     cae:	f1 f7       	brne	.-4      	; 0xcac <__stack+0x44d>
     cb0:	8c 01       	movw	r16, r24
     cb2:	ce 01       	movw	r24, r28
     cb4:	8d 57       	subi	r24, 0x7D	; 125
     cb6:	9f 4f       	sbci	r25, 0xFF	; 255
     cb8:	fc 01       	movw	r30, r24
     cba:	11 83       	std	Z+1, r17	; 0x01
     cbc:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     cbe:	ce 01       	movw	r24, r28
     cc0:	8f 57       	subi	r24, 0x7F	; 127
     cc2:	9f 4f       	sbci	r25, 0xFF	; 255
     cc4:	9e 01       	movw	r18, r28
     cc6:	2f 57       	subi	r18, 0x7F	; 127
     cc8:	3f 4f       	sbci	r19, 0xFF	; 255
     cca:	f9 01       	movw	r30, r18
     ccc:	20 81       	ld	r18, Z
     cce:	31 81       	ldd	r19, Z+1	; 0x01
     cd0:	21 50       	subi	r18, 0x01	; 1
     cd2:	30 40       	sbci	r19, 0x00	; 0
     cd4:	fc 01       	movw	r30, r24
     cd6:	31 83       	std	Z+1, r19	; 0x01
     cd8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     cda:	ce 01       	movw	r24, r28
     cdc:	8f 57       	subi	r24, 0x7F	; 127
     cde:	9f 4f       	sbci	r25, 0xFF	; 255
     ce0:	fc 01       	movw	r30, r24
     ce2:	80 81       	ld	r24, Z
     ce4:	91 81       	ldd	r25, Z+1	; 0x01
     ce6:	00 97       	sbiw	r24, 0x00	; 0
     ce8:	89 f6       	brne	.-94     	; 0xc8c <__stack+0x42d>
     cea:	2f c0       	rjmp	.+94     	; 0xd4a <__stack+0x4eb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     cec:	8e 01       	movw	r16, r28
     cee:	0f 57       	subi	r16, 0x7F	; 127
     cf0:	1f 4f       	sbci	r17, 0xFF	; 255
     cf2:	ce 01       	movw	r24, r28
     cf4:	83 58       	subi	r24, 0x83	; 131
     cf6:	9f 4f       	sbci	r25, 0xFF	; 255
     cf8:	fc 01       	movw	r30, r24
     cfa:	60 81       	ld	r22, Z
     cfc:	71 81       	ldd	r23, Z+1	; 0x01
     cfe:	82 81       	ldd	r24, Z+2	; 0x02
     d00:	93 81       	ldd	r25, Z+3	; 0x03
     d02:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     d06:	dc 01       	movw	r26, r24
     d08:	cb 01       	movw	r24, r22
     d0a:	f8 01       	movw	r30, r16
     d0c:	91 83       	std	Z+1, r25	; 0x01
     d0e:	80 83       	st	Z, r24
     d10:	ce 01       	movw	r24, r28
     d12:	8b 57       	subi	r24, 0x7B	; 123
     d14:	9f 4f       	sbci	r25, 0xFF	; 255
     d16:	9e 01       	movw	r18, r28
     d18:	2f 57       	subi	r18, 0x7F	; 127
     d1a:	3f 4f       	sbci	r19, 0xFF	; 255
     d1c:	f9 01       	movw	r30, r18
     d1e:	20 81       	ld	r18, Z
     d20:	31 81       	ldd	r19, Z+1	; 0x01
     d22:	fc 01       	movw	r30, r24
     d24:	31 83       	std	Z+1, r19	; 0x01
     d26:	20 83       	st	Z, r18
     d28:	ce 01       	movw	r24, r28
     d2a:	8b 57       	subi	r24, 0x7B	; 123
     d2c:	9f 4f       	sbci	r25, 0xFF	; 255
     d2e:	fc 01       	movw	r30, r24
     d30:	80 81       	ld	r24, Z
     d32:	91 81       	ldd	r25, Z+1	; 0x01
     d34:	8c 01       	movw	r16, r24
     d36:	c8 01       	movw	r24, r16
     d38:	01 97       	sbiw	r24, 0x01	; 1
     d3a:	f1 f7       	brne	.-4      	; 0xd38 <__stack+0x4d9>
     d3c:	8c 01       	movw	r16, r24
     d3e:	ce 01       	movw	r24, r28
     d40:	8b 57       	subi	r24, 0x7B	; 123
     d42:	9f 4f       	sbci	r25, 0xFF	; 255
     d44:	fc 01       	movw	r30, r24
     d46:	11 83       	std	Z+1, r17	; 0x01
     d48:	00 83       	st	Z, r16
		PORTB=0xaa;
		_delay_ms(500);
		PORTB=0x55;
		_delay_ms(500);
		
		for (int i=1; i<=128; i*=2)
     d4a:	89 81       	ldd	r24, Y+1	; 0x01
     d4c:	9a 81       	ldd	r25, Y+2	; 0x02
     d4e:	88 0f       	add	r24, r24
     d50:	99 1f       	adc	r25, r25
     d52:	9a 83       	std	Y+2, r25	; 0x02
     d54:	89 83       	std	Y+1, r24	; 0x01
     d56:	89 81       	ldd	r24, Y+1	; 0x01
     d58:	9a 81       	ldd	r25, Y+2	; 0x02
     d5a:	81 38       	cpi	r24, 0x81	; 129
     d5c:	91 05       	cpc	r25, r1
     d5e:	0c f4       	brge	.+2      	; 0xd62 <__stack+0x503>
     d60:	1d cf       	rjmp	.-454    	; 0xb9c <__stack+0x33d>
		{
			PORTB=i;
			_delay_ms(500);
		}
		
		for (int i=64; i>=1; i/=2)
     d62:	80 e4       	ldi	r24, 0x40	; 64
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	9c 83       	std	Y+4, r25	; 0x04
     d68:	8b 83       	std	Y+3, r24	; 0x03
     d6a:	e0 c0       	rjmp	.+448    	; 0xf2c <__stack+0x6cd>
		{
			PORTB=i;
     d6c:	88 e3       	ldi	r24, 0x38	; 56
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	2b 81       	ldd	r18, Y+3	; 0x03
     d72:	fc 01       	movw	r30, r24
     d74:	20 83       	st	Z, r18
     d76:	9e 01       	movw	r18, r28
     d78:	29 57       	subi	r18, 0x79	; 121
     d7a:	3f 4f       	sbci	r19, 0xFF	; 255
     d7c:	80 e0       	ldi	r24, 0x00	; 0
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	aa ef       	ldi	r26, 0xFA	; 250
     d82:	b3 e4       	ldi	r27, 0x43	; 67
     d84:	f9 01       	movw	r30, r18
     d86:	80 83       	st	Z, r24
     d88:	91 83       	std	Z+1, r25	; 0x01
     d8a:	a2 83       	std	Z+2, r26	; 0x02
     d8c:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     d8e:	8e 01       	movw	r16, r28
     d90:	05 57       	subi	r16, 0x75	; 117
     d92:	1f 4f       	sbci	r17, 0xFF	; 255
     d94:	ce 01       	movw	r24, r28
     d96:	89 57       	subi	r24, 0x79	; 121
     d98:	9f 4f       	sbci	r25, 0xFF	; 255
     d9a:	fc 01       	movw	r30, r24
     d9c:	60 81       	ld	r22, Z
     d9e:	71 81       	ldd	r23, Z+1	; 0x01
     da0:	82 81       	ldd	r24, Z+2	; 0x02
     da2:	93 81       	ldd	r25, Z+3	; 0x03
     da4:	20 e0       	ldi	r18, 0x00	; 0
     da6:	30 e0       	ldi	r19, 0x00	; 0
     da8:	4a e7       	ldi	r20, 0x7A	; 122
     daa:	53 e4       	ldi	r21, 0x43	; 67
     dac:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     db0:	dc 01       	movw	r26, r24
     db2:	cb 01       	movw	r24, r22
     db4:	f8 01       	movw	r30, r16
     db6:	80 83       	st	Z, r24
     db8:	91 83       	std	Z+1, r25	; 0x01
     dba:	a2 83       	std	Z+2, r26	; 0x02
     dbc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     dbe:	ce 01       	movw	r24, r28
     dc0:	85 57       	subi	r24, 0x75	; 117
     dc2:	9f 4f       	sbci	r25, 0xFF	; 255
     dc4:	11 e0       	ldi	r17, 0x01	; 1
     dc6:	fc 01       	movw	r30, r24
     dc8:	60 81       	ld	r22, Z
     dca:	71 81       	ldd	r23, Z+1	; 0x01
     dcc:	82 81       	ldd	r24, Z+2	; 0x02
     dce:	93 81       	ldd	r25, Z+3	; 0x03
     dd0:	20 e0       	ldi	r18, 0x00	; 0
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	40 e8       	ldi	r20, 0x80	; 128
     dd6:	5f e3       	ldi	r21, 0x3F	; 63
     dd8:	0e 94 a1 0c 	call	0x1942	; 0x1942 <__ltsf2>
     ddc:	88 23       	and	r24, r24
     dde:	0c f0       	brlt	.+2      	; 0xde2 <__stack+0x583>
     de0:	10 e0       	ldi	r17, 0x00	; 0
     de2:	11 23       	and	r17, r17
     de4:	49 f0       	breq	.+18     	; 0xdf8 <__stack+0x599>
		__ticks = 1;
     de6:	ce 01       	movw	r24, r28
     de8:	81 57       	subi	r24, 0x71	; 113
     dea:	9f 4f       	sbci	r25, 0xFF	; 255
     dec:	21 e0       	ldi	r18, 0x01	; 1
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	fc 01       	movw	r30, r24
     df2:	31 83       	std	Z+1, r19	; 0x01
     df4:	20 83       	st	Z, r18
     df6:	74 c0       	rjmp	.+232    	; 0xee0 <__stack+0x681>
	else if (__tmp > 65535)
     df8:	ce 01       	movw	r24, r28
     dfa:	85 57       	subi	r24, 0x75	; 117
     dfc:	9f 4f       	sbci	r25, 0xFF	; 255
     dfe:	11 e0       	ldi	r17, 0x01	; 1
     e00:	fc 01       	movw	r30, r24
     e02:	60 81       	ld	r22, Z
     e04:	71 81       	ldd	r23, Z+1	; 0x01
     e06:	82 81       	ldd	r24, Z+2	; 0x02
     e08:	93 81       	ldd	r25, Z+3	; 0x03
     e0a:	20 e0       	ldi	r18, 0x00	; 0
     e0c:	3f ef       	ldi	r19, 0xFF	; 255
     e0e:	4f e7       	ldi	r20, 0x7F	; 127
     e10:	57 e4       	ldi	r21, 0x47	; 71
     e12:	0e 94 41 0c 	call	0x1882	; 0x1882 <__gtsf2>
     e16:	18 16       	cp	r1, r24
     e18:	0c f0       	brlt	.+2      	; 0xe1c <__stack+0x5bd>
     e1a:	10 e0       	ldi	r17, 0x00	; 0
     e1c:	11 23       	and	r17, r17
     e1e:	09 f4       	brne	.+2      	; 0xe22 <__stack+0x5c3>
     e20:	4d c0       	rjmp	.+154    	; 0xebc <__stack+0x65d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e22:	ce 01       	movw	r24, r28
     e24:	89 57       	subi	r24, 0x79	; 121
     e26:	9f 4f       	sbci	r25, 0xFF	; 255
     e28:	fc 01       	movw	r30, r24
     e2a:	60 81       	ld	r22, Z
     e2c:	71 81       	ldd	r23, Z+1	; 0x01
     e2e:	82 81       	ldd	r24, Z+2	; 0x02
     e30:	93 81       	ldd	r25, Z+3	; 0x03
     e32:	20 e0       	ldi	r18, 0x00	; 0
     e34:	30 e0       	ldi	r19, 0x00	; 0
     e36:	40 e2       	ldi	r20, 0x20	; 32
     e38:	51 e4       	ldi	r21, 0x41	; 65
     e3a:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     e3e:	dc 01       	movw	r26, r24
     e40:	cb 01       	movw	r24, r22
     e42:	8e 01       	movw	r16, r28
     e44:	01 57       	subi	r16, 0x71	; 113
     e46:	1f 4f       	sbci	r17, 0xFF	; 255
     e48:	bc 01       	movw	r22, r24
     e4a:	cd 01       	movw	r24, r26
     e4c:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     e50:	dc 01       	movw	r26, r24
     e52:	cb 01       	movw	r24, r22
     e54:	f8 01       	movw	r30, r16
     e56:	91 83       	std	Z+1, r25	; 0x01
     e58:	80 83       	st	Z, r24
     e5a:	27 c0       	rjmp	.+78     	; 0xeaa <__stack+0x64b>
     e5c:	ce 01       	movw	r24, r28
     e5e:	8f 56       	subi	r24, 0x6F	; 111
     e60:	9f 4f       	sbci	r25, 0xFF	; 255
     e62:	29 e1       	ldi	r18, 0x19	; 25
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	fc 01       	movw	r30, r24
     e68:	31 83       	std	Z+1, r19	; 0x01
     e6a:	20 83       	st	Z, r18
     e6c:	ce 01       	movw	r24, r28
     e6e:	8f 56       	subi	r24, 0x6F	; 111
     e70:	9f 4f       	sbci	r25, 0xFF	; 255
     e72:	fc 01       	movw	r30, r24
     e74:	80 81       	ld	r24, Z
     e76:	91 81       	ldd	r25, Z+1	; 0x01
     e78:	8c 01       	movw	r16, r24
     e7a:	c8 01       	movw	r24, r16
     e7c:	01 97       	sbiw	r24, 0x01	; 1
     e7e:	f1 f7       	brne	.-4      	; 0xe7c <__stack+0x61d>
     e80:	8c 01       	movw	r16, r24
     e82:	ce 01       	movw	r24, r28
     e84:	8f 56       	subi	r24, 0x6F	; 111
     e86:	9f 4f       	sbci	r25, 0xFF	; 255
     e88:	fc 01       	movw	r30, r24
     e8a:	11 83       	std	Z+1, r17	; 0x01
     e8c:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e8e:	ce 01       	movw	r24, r28
     e90:	81 57       	subi	r24, 0x71	; 113
     e92:	9f 4f       	sbci	r25, 0xFF	; 255
     e94:	9e 01       	movw	r18, r28
     e96:	21 57       	subi	r18, 0x71	; 113
     e98:	3f 4f       	sbci	r19, 0xFF	; 255
     e9a:	f9 01       	movw	r30, r18
     e9c:	20 81       	ld	r18, Z
     e9e:	31 81       	ldd	r19, Z+1	; 0x01
     ea0:	21 50       	subi	r18, 0x01	; 1
     ea2:	30 40       	sbci	r19, 0x00	; 0
     ea4:	fc 01       	movw	r30, r24
     ea6:	31 83       	std	Z+1, r19	; 0x01
     ea8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     eaa:	ce 01       	movw	r24, r28
     eac:	81 57       	subi	r24, 0x71	; 113
     eae:	9f 4f       	sbci	r25, 0xFF	; 255
     eb0:	fc 01       	movw	r30, r24
     eb2:	80 81       	ld	r24, Z
     eb4:	91 81       	ldd	r25, Z+1	; 0x01
     eb6:	00 97       	sbiw	r24, 0x00	; 0
     eb8:	89 f6       	brne	.-94     	; 0xe5c <__stack+0x5fd>
     eba:	2f c0       	rjmp	.+94     	; 0xf1a <__stack+0x6bb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ebc:	8e 01       	movw	r16, r28
     ebe:	01 57       	subi	r16, 0x71	; 113
     ec0:	1f 4f       	sbci	r17, 0xFF	; 255
     ec2:	ce 01       	movw	r24, r28
     ec4:	85 57       	subi	r24, 0x75	; 117
     ec6:	9f 4f       	sbci	r25, 0xFF	; 255
     ec8:	fc 01       	movw	r30, r24
     eca:	60 81       	ld	r22, Z
     ecc:	71 81       	ldd	r23, Z+1	; 0x01
     ece:	82 81       	ldd	r24, Z+2	; 0x02
     ed0:	93 81       	ldd	r25, Z+3	; 0x03
     ed2:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
     ed6:	dc 01       	movw	r26, r24
     ed8:	cb 01       	movw	r24, r22
     eda:	f8 01       	movw	r30, r16
     edc:	91 83       	std	Z+1, r25	; 0x01
     ede:	80 83       	st	Z, r24
     ee0:	ce 01       	movw	r24, r28
     ee2:	8d 56       	subi	r24, 0x6D	; 109
     ee4:	9f 4f       	sbci	r25, 0xFF	; 255
     ee6:	9e 01       	movw	r18, r28
     ee8:	21 57       	subi	r18, 0x71	; 113
     eea:	3f 4f       	sbci	r19, 0xFF	; 255
     eec:	f9 01       	movw	r30, r18
     eee:	20 81       	ld	r18, Z
     ef0:	31 81       	ldd	r19, Z+1	; 0x01
     ef2:	fc 01       	movw	r30, r24
     ef4:	31 83       	std	Z+1, r19	; 0x01
     ef6:	20 83       	st	Z, r18
     ef8:	ce 01       	movw	r24, r28
     efa:	8d 56       	subi	r24, 0x6D	; 109
     efc:	9f 4f       	sbci	r25, 0xFF	; 255
     efe:	fc 01       	movw	r30, r24
     f00:	80 81       	ld	r24, Z
     f02:	91 81       	ldd	r25, Z+1	; 0x01
     f04:	8c 01       	movw	r16, r24
     f06:	c8 01       	movw	r24, r16
     f08:	01 97       	sbiw	r24, 0x01	; 1
     f0a:	f1 f7       	brne	.-4      	; 0xf08 <__stack+0x6a9>
     f0c:	8c 01       	movw	r16, r24
     f0e:	ce 01       	movw	r24, r28
     f10:	8d 56       	subi	r24, 0x6D	; 109
     f12:	9f 4f       	sbci	r25, 0xFF	; 255
     f14:	fc 01       	movw	r30, r24
     f16:	11 83       	std	Z+1, r17	; 0x01
     f18:	00 83       	st	Z, r16
		{
			PORTB=i;
			_delay_ms(500);
		}
		
		for (int i=64; i>=1; i/=2)
     f1a:	8b 81       	ldd	r24, Y+3	; 0x03
     f1c:	9c 81       	ldd	r25, Y+4	; 0x04
     f1e:	99 23       	and	r25, r25
     f20:	0c f4       	brge	.+2      	; 0xf24 <__stack+0x6c5>
     f22:	01 96       	adiw	r24, 0x01	; 1
     f24:	95 95       	asr	r25
     f26:	87 95       	ror	r24
     f28:	9c 83       	std	Y+4, r25	; 0x04
     f2a:	8b 83       	std	Y+3, r24	; 0x03
     f2c:	8b 81       	ldd	r24, Y+3	; 0x03
     f2e:	9c 81       	ldd	r25, Y+4	; 0x04
     f30:	18 16       	cp	r1, r24
     f32:	19 06       	cpc	r1, r25
     f34:	0c f4       	brge	.+2      	; 0xf38 <__stack+0x6d9>
     f36:	1a cf       	rjmp	.-460    	; 0xd6c <__stack+0x50d>
		{
			PORTB=i;
			_delay_ms(500);
		}
		 for (int i=1; i<=128; i*=2)
     f38:	81 e0       	ldi	r24, 0x01	; 1
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	9e 83       	std	Y+6, r25	; 0x06
     f3e:	8d 83       	std	Y+5, r24	; 0x05
     f40:	de c0       	rjmp	.+444    	; 0x10fe <__stack+0x89f>
		{
			PORTB=(255-i);
     f42:	88 e3       	ldi	r24, 0x38	; 56
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	2d 81       	ldd	r18, Y+5	; 0x05
     f48:	20 95       	com	r18
     f4a:	fc 01       	movw	r30, r24
     f4c:	20 83       	st	Z, r18
     f4e:	9e 01       	movw	r18, r28
     f50:	2b 56       	subi	r18, 0x6B	; 107
     f52:	3f 4f       	sbci	r19, 0xFF	; 255
     f54:	80 e0       	ldi	r24, 0x00	; 0
     f56:	90 e0       	ldi	r25, 0x00	; 0
     f58:	aa ef       	ldi	r26, 0xFA	; 250
     f5a:	b3 e4       	ldi	r27, 0x43	; 67
     f5c:	f9 01       	movw	r30, r18
     f5e:	80 83       	st	Z, r24
     f60:	91 83       	std	Z+1, r25	; 0x01
     f62:	a2 83       	std	Z+2, r26	; 0x02
     f64:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     f66:	8e 01       	movw	r16, r28
     f68:	07 56       	subi	r16, 0x67	; 103
     f6a:	1f 4f       	sbci	r17, 0xFF	; 255
     f6c:	ce 01       	movw	r24, r28
     f6e:	8b 56       	subi	r24, 0x6B	; 107
     f70:	9f 4f       	sbci	r25, 0xFF	; 255
     f72:	fc 01       	movw	r30, r24
     f74:	60 81       	ld	r22, Z
     f76:	71 81       	ldd	r23, Z+1	; 0x01
     f78:	82 81       	ldd	r24, Z+2	; 0x02
     f7a:	93 81       	ldd	r25, Z+3	; 0x03
     f7c:	20 e0       	ldi	r18, 0x00	; 0
     f7e:	30 e0       	ldi	r19, 0x00	; 0
     f80:	4a e7       	ldi	r20, 0x7A	; 122
     f82:	53 e4       	ldi	r21, 0x43	; 67
     f84:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
     f88:	dc 01       	movw	r26, r24
     f8a:	cb 01       	movw	r24, r22
     f8c:	f8 01       	movw	r30, r16
     f8e:	80 83       	st	Z, r24
     f90:	91 83       	std	Z+1, r25	; 0x01
     f92:	a2 83       	std	Z+2, r26	; 0x02
     f94:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f96:	ce 01       	movw	r24, r28
     f98:	87 56       	subi	r24, 0x67	; 103
     f9a:	9f 4f       	sbci	r25, 0xFF	; 255
     f9c:	11 e0       	ldi	r17, 0x01	; 1
     f9e:	fc 01       	movw	r30, r24
     fa0:	60 81       	ld	r22, Z
     fa2:	71 81       	ldd	r23, Z+1	; 0x01
     fa4:	82 81       	ldd	r24, Z+2	; 0x02
     fa6:	93 81       	ldd	r25, Z+3	; 0x03
     fa8:	20 e0       	ldi	r18, 0x00	; 0
     faa:	30 e0       	ldi	r19, 0x00	; 0
     fac:	40 e8       	ldi	r20, 0x80	; 128
     fae:	5f e3       	ldi	r21, 0x3F	; 63
     fb0:	0e 94 a1 0c 	call	0x1942	; 0x1942 <__ltsf2>
     fb4:	88 23       	and	r24, r24
     fb6:	0c f0       	brlt	.+2      	; 0xfba <__stack+0x75b>
     fb8:	10 e0       	ldi	r17, 0x00	; 0
     fba:	11 23       	and	r17, r17
     fbc:	49 f0       	breq	.+18     	; 0xfd0 <__stack+0x771>
		__ticks = 1;
     fbe:	ce 01       	movw	r24, r28
     fc0:	83 56       	subi	r24, 0x63	; 99
     fc2:	9f 4f       	sbci	r25, 0xFF	; 255
     fc4:	21 e0       	ldi	r18, 0x01	; 1
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	fc 01       	movw	r30, r24
     fca:	31 83       	std	Z+1, r19	; 0x01
     fcc:	20 83       	st	Z, r18
     fce:	74 c0       	rjmp	.+232    	; 0x10b8 <__stack+0x859>
	else if (__tmp > 65535)
     fd0:	ce 01       	movw	r24, r28
     fd2:	87 56       	subi	r24, 0x67	; 103
     fd4:	9f 4f       	sbci	r25, 0xFF	; 255
     fd6:	11 e0       	ldi	r17, 0x01	; 1
     fd8:	fc 01       	movw	r30, r24
     fda:	60 81       	ld	r22, Z
     fdc:	71 81       	ldd	r23, Z+1	; 0x01
     fde:	82 81       	ldd	r24, Z+2	; 0x02
     fe0:	93 81       	ldd	r25, Z+3	; 0x03
     fe2:	20 e0       	ldi	r18, 0x00	; 0
     fe4:	3f ef       	ldi	r19, 0xFF	; 255
     fe6:	4f e7       	ldi	r20, 0x7F	; 127
     fe8:	57 e4       	ldi	r21, 0x47	; 71
     fea:	0e 94 41 0c 	call	0x1882	; 0x1882 <__gtsf2>
     fee:	18 16       	cp	r1, r24
     ff0:	0c f0       	brlt	.+2      	; 0xff4 <__stack+0x795>
     ff2:	10 e0       	ldi	r17, 0x00	; 0
     ff4:	11 23       	and	r17, r17
     ff6:	09 f4       	brne	.+2      	; 0xffa <__stack+0x79b>
     ff8:	4d c0       	rjmp	.+154    	; 0x1094 <__stack+0x835>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ffa:	ce 01       	movw	r24, r28
     ffc:	8b 56       	subi	r24, 0x6B	; 107
     ffe:	9f 4f       	sbci	r25, 0xFF	; 255
    1000:	fc 01       	movw	r30, r24
    1002:	60 81       	ld	r22, Z
    1004:	71 81       	ldd	r23, Z+1	; 0x01
    1006:	82 81       	ldd	r24, Z+2	; 0x02
    1008:	93 81       	ldd	r25, Z+3	; 0x03
    100a:	20 e0       	ldi	r18, 0x00	; 0
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	40 e2       	ldi	r20, 0x20	; 32
    1010:	51 e4       	ldi	r21, 0x41	; 65
    1012:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
    1016:	dc 01       	movw	r26, r24
    1018:	cb 01       	movw	r24, r22
    101a:	8e 01       	movw	r16, r28
    101c:	03 56       	subi	r16, 0x63	; 99
    101e:	1f 4f       	sbci	r17, 0xFF	; 255
    1020:	bc 01       	movw	r22, r24
    1022:	cd 01       	movw	r24, r26
    1024:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
    1028:	dc 01       	movw	r26, r24
    102a:	cb 01       	movw	r24, r22
    102c:	f8 01       	movw	r30, r16
    102e:	91 83       	std	Z+1, r25	; 0x01
    1030:	80 83       	st	Z, r24
    1032:	27 c0       	rjmp	.+78     	; 0x1082 <__stack+0x823>
    1034:	ce 01       	movw	r24, r28
    1036:	81 56       	subi	r24, 0x61	; 97
    1038:	9f 4f       	sbci	r25, 0xFF	; 255
    103a:	29 e1       	ldi	r18, 0x19	; 25
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	fc 01       	movw	r30, r24
    1040:	31 83       	std	Z+1, r19	; 0x01
    1042:	20 83       	st	Z, r18
    1044:	ce 01       	movw	r24, r28
    1046:	81 56       	subi	r24, 0x61	; 97
    1048:	9f 4f       	sbci	r25, 0xFF	; 255
    104a:	fc 01       	movw	r30, r24
    104c:	80 81       	ld	r24, Z
    104e:	91 81       	ldd	r25, Z+1	; 0x01
    1050:	8c 01       	movw	r16, r24
    1052:	c8 01       	movw	r24, r16
    1054:	01 97       	sbiw	r24, 0x01	; 1
    1056:	f1 f7       	brne	.-4      	; 0x1054 <__stack+0x7f5>
    1058:	8c 01       	movw	r16, r24
    105a:	ce 01       	movw	r24, r28
    105c:	81 56       	subi	r24, 0x61	; 97
    105e:	9f 4f       	sbci	r25, 0xFF	; 255
    1060:	fc 01       	movw	r30, r24
    1062:	11 83       	std	Z+1, r17	; 0x01
    1064:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1066:	ce 01       	movw	r24, r28
    1068:	83 56       	subi	r24, 0x63	; 99
    106a:	9f 4f       	sbci	r25, 0xFF	; 255
    106c:	9e 01       	movw	r18, r28
    106e:	23 56       	subi	r18, 0x63	; 99
    1070:	3f 4f       	sbci	r19, 0xFF	; 255
    1072:	f9 01       	movw	r30, r18
    1074:	20 81       	ld	r18, Z
    1076:	31 81       	ldd	r19, Z+1	; 0x01
    1078:	21 50       	subi	r18, 0x01	; 1
    107a:	30 40       	sbci	r19, 0x00	; 0
    107c:	fc 01       	movw	r30, r24
    107e:	31 83       	std	Z+1, r19	; 0x01
    1080:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1082:	ce 01       	movw	r24, r28
    1084:	83 56       	subi	r24, 0x63	; 99
    1086:	9f 4f       	sbci	r25, 0xFF	; 255
    1088:	fc 01       	movw	r30, r24
    108a:	80 81       	ld	r24, Z
    108c:	91 81       	ldd	r25, Z+1	; 0x01
    108e:	00 97       	sbiw	r24, 0x00	; 0
    1090:	89 f6       	brne	.-94     	; 0x1034 <__stack+0x7d5>
    1092:	2f c0       	rjmp	.+94     	; 0x10f2 <__stack+0x893>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1094:	8e 01       	movw	r16, r28
    1096:	03 56       	subi	r16, 0x63	; 99
    1098:	1f 4f       	sbci	r17, 0xFF	; 255
    109a:	ce 01       	movw	r24, r28
    109c:	87 56       	subi	r24, 0x67	; 103
    109e:	9f 4f       	sbci	r25, 0xFF	; 255
    10a0:	fc 01       	movw	r30, r24
    10a2:	60 81       	ld	r22, Z
    10a4:	71 81       	ldd	r23, Z+1	; 0x01
    10a6:	82 81       	ldd	r24, Z+2	; 0x02
    10a8:	93 81       	ldd	r25, Z+3	; 0x03
    10aa:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
    10ae:	dc 01       	movw	r26, r24
    10b0:	cb 01       	movw	r24, r22
    10b2:	f8 01       	movw	r30, r16
    10b4:	91 83       	std	Z+1, r25	; 0x01
    10b6:	80 83       	st	Z, r24
    10b8:	ce 01       	movw	r24, r28
    10ba:	8f 55       	subi	r24, 0x5F	; 95
    10bc:	9f 4f       	sbci	r25, 0xFF	; 255
    10be:	9e 01       	movw	r18, r28
    10c0:	23 56       	subi	r18, 0x63	; 99
    10c2:	3f 4f       	sbci	r19, 0xFF	; 255
    10c4:	f9 01       	movw	r30, r18
    10c6:	20 81       	ld	r18, Z
    10c8:	31 81       	ldd	r19, Z+1	; 0x01
    10ca:	fc 01       	movw	r30, r24
    10cc:	31 83       	std	Z+1, r19	; 0x01
    10ce:	20 83       	st	Z, r18
    10d0:	ce 01       	movw	r24, r28
    10d2:	8f 55       	subi	r24, 0x5F	; 95
    10d4:	9f 4f       	sbci	r25, 0xFF	; 255
    10d6:	fc 01       	movw	r30, r24
    10d8:	80 81       	ld	r24, Z
    10da:	91 81       	ldd	r25, Z+1	; 0x01
    10dc:	8c 01       	movw	r16, r24
    10de:	c8 01       	movw	r24, r16
    10e0:	01 97       	sbiw	r24, 0x01	; 1
    10e2:	f1 f7       	brne	.-4      	; 0x10e0 <__stack+0x881>
    10e4:	8c 01       	movw	r16, r24
    10e6:	ce 01       	movw	r24, r28
    10e8:	8f 55       	subi	r24, 0x5F	; 95
    10ea:	9f 4f       	sbci	r25, 0xFF	; 255
    10ec:	fc 01       	movw	r30, r24
    10ee:	11 83       	std	Z+1, r17	; 0x01
    10f0:	00 83       	st	Z, r16
		for (int i=64; i>=1; i/=2)
		{
			PORTB=i;
			_delay_ms(500);
		}
		 for (int i=1; i<=128; i*=2)
    10f2:	8d 81       	ldd	r24, Y+5	; 0x05
    10f4:	9e 81       	ldd	r25, Y+6	; 0x06
    10f6:	88 0f       	add	r24, r24
    10f8:	99 1f       	adc	r25, r25
    10fa:	9e 83       	std	Y+6, r25	; 0x06
    10fc:	8d 83       	std	Y+5, r24	; 0x05
    10fe:	8d 81       	ldd	r24, Y+5	; 0x05
    1100:	9e 81       	ldd	r25, Y+6	; 0x06
    1102:	81 38       	cpi	r24, 0x81	; 129
    1104:	91 05       	cpc	r25, r1
    1106:	0c f4       	brge	.+2      	; 0x110a <__stack+0x8ab>
    1108:	1c cf       	rjmp	.-456    	; 0xf42 <__stack+0x6e3>
		{
			PORTB=(255-i);
			_delay_ms(500);
		}
		
		for (int i=64; i>=1; i/=2)
    110a:	80 e4       	ldi	r24, 0x40	; 64
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	98 87       	std	Y+8, r25	; 0x08
    1110:	8f 83       	std	Y+7, r24	; 0x07
    1112:	e1 c0       	rjmp	.+450    	; 0x12d6 <__stack+0xa77>
		{
			PORTB=(255-i);
    1114:	88 e3       	ldi	r24, 0x38	; 56
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	2f 81       	ldd	r18, Y+7	; 0x07
    111a:	20 95       	com	r18
    111c:	fc 01       	movw	r30, r24
    111e:	20 83       	st	Z, r18
    1120:	9e 01       	movw	r18, r28
    1122:	2d 55       	subi	r18, 0x5D	; 93
    1124:	3f 4f       	sbci	r19, 0xFF	; 255
    1126:	80 e0       	ldi	r24, 0x00	; 0
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	aa ef       	ldi	r26, 0xFA	; 250
    112c:	b3 e4       	ldi	r27, 0x43	; 67
    112e:	f9 01       	movw	r30, r18
    1130:	80 83       	st	Z, r24
    1132:	91 83       	std	Z+1, r25	; 0x01
    1134:	a2 83       	std	Z+2, r26	; 0x02
    1136:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    1138:	8e 01       	movw	r16, r28
    113a:	09 55       	subi	r16, 0x59	; 89
    113c:	1f 4f       	sbci	r17, 0xFF	; 255
    113e:	ce 01       	movw	r24, r28
    1140:	8d 55       	subi	r24, 0x5D	; 93
    1142:	9f 4f       	sbci	r25, 0xFF	; 255
    1144:	fc 01       	movw	r30, r24
    1146:	60 81       	ld	r22, Z
    1148:	71 81       	ldd	r23, Z+1	; 0x01
    114a:	82 81       	ldd	r24, Z+2	; 0x02
    114c:	93 81       	ldd	r25, Z+3	; 0x03
    114e:	20 e0       	ldi	r18, 0x00	; 0
    1150:	30 e0       	ldi	r19, 0x00	; 0
    1152:	4a e7       	ldi	r20, 0x7A	; 122
    1154:	53 e4       	ldi	r21, 0x43	; 67
    1156:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
    115a:	dc 01       	movw	r26, r24
    115c:	cb 01       	movw	r24, r22
    115e:	f8 01       	movw	r30, r16
    1160:	80 83       	st	Z, r24
    1162:	91 83       	std	Z+1, r25	; 0x01
    1164:	a2 83       	std	Z+2, r26	; 0x02
    1166:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1168:	ce 01       	movw	r24, r28
    116a:	89 55       	subi	r24, 0x59	; 89
    116c:	9f 4f       	sbci	r25, 0xFF	; 255
    116e:	11 e0       	ldi	r17, 0x01	; 1
    1170:	fc 01       	movw	r30, r24
    1172:	60 81       	ld	r22, Z
    1174:	71 81       	ldd	r23, Z+1	; 0x01
    1176:	82 81       	ldd	r24, Z+2	; 0x02
    1178:	93 81       	ldd	r25, Z+3	; 0x03
    117a:	20 e0       	ldi	r18, 0x00	; 0
    117c:	30 e0       	ldi	r19, 0x00	; 0
    117e:	40 e8       	ldi	r20, 0x80	; 128
    1180:	5f e3       	ldi	r21, 0x3F	; 63
    1182:	0e 94 a1 0c 	call	0x1942	; 0x1942 <__ltsf2>
    1186:	88 23       	and	r24, r24
    1188:	0c f0       	brlt	.+2      	; 0x118c <__stack+0x92d>
    118a:	10 e0       	ldi	r17, 0x00	; 0
    118c:	11 23       	and	r17, r17
    118e:	49 f0       	breq	.+18     	; 0x11a2 <__stack+0x943>
		__ticks = 1;
    1190:	ce 01       	movw	r24, r28
    1192:	85 55       	subi	r24, 0x55	; 85
    1194:	9f 4f       	sbci	r25, 0xFF	; 255
    1196:	21 e0       	ldi	r18, 0x01	; 1
    1198:	30 e0       	ldi	r19, 0x00	; 0
    119a:	fc 01       	movw	r30, r24
    119c:	31 83       	std	Z+1, r19	; 0x01
    119e:	20 83       	st	Z, r18
    11a0:	74 c0       	rjmp	.+232    	; 0x128a <__stack+0xa2b>
	else if (__tmp > 65535)
    11a2:	ce 01       	movw	r24, r28
    11a4:	89 55       	subi	r24, 0x59	; 89
    11a6:	9f 4f       	sbci	r25, 0xFF	; 255
    11a8:	11 e0       	ldi	r17, 0x01	; 1
    11aa:	fc 01       	movw	r30, r24
    11ac:	60 81       	ld	r22, Z
    11ae:	71 81       	ldd	r23, Z+1	; 0x01
    11b0:	82 81       	ldd	r24, Z+2	; 0x02
    11b2:	93 81       	ldd	r25, Z+3	; 0x03
    11b4:	20 e0       	ldi	r18, 0x00	; 0
    11b6:	3f ef       	ldi	r19, 0xFF	; 255
    11b8:	4f e7       	ldi	r20, 0x7F	; 127
    11ba:	57 e4       	ldi	r21, 0x47	; 71
    11bc:	0e 94 41 0c 	call	0x1882	; 0x1882 <__gtsf2>
    11c0:	18 16       	cp	r1, r24
    11c2:	0c f0       	brlt	.+2      	; 0x11c6 <__stack+0x967>
    11c4:	10 e0       	ldi	r17, 0x00	; 0
    11c6:	11 23       	and	r17, r17
    11c8:	09 f4       	brne	.+2      	; 0x11cc <__stack+0x96d>
    11ca:	4d c0       	rjmp	.+154    	; 0x1266 <__stack+0xa07>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11cc:	ce 01       	movw	r24, r28
    11ce:	8d 55       	subi	r24, 0x5D	; 93
    11d0:	9f 4f       	sbci	r25, 0xFF	; 255
    11d2:	fc 01       	movw	r30, r24
    11d4:	60 81       	ld	r22, Z
    11d6:	71 81       	ldd	r23, Z+1	; 0x01
    11d8:	82 81       	ldd	r24, Z+2	; 0x02
    11da:	93 81       	ldd	r25, Z+3	; 0x03
    11dc:	20 e0       	ldi	r18, 0x00	; 0
    11de:	30 e0       	ldi	r19, 0x00	; 0
    11e0:	40 e2       	ldi	r20, 0x20	; 32
    11e2:	51 e4       	ldi	r21, 0x41	; 65
    11e4:	0e 94 47 0b 	call	0x168e	; 0x168e <__mulsf3>
    11e8:	dc 01       	movw	r26, r24
    11ea:	cb 01       	movw	r24, r22
    11ec:	8e 01       	movw	r16, r28
    11ee:	05 55       	subi	r16, 0x55	; 85
    11f0:	1f 4f       	sbci	r17, 0xFF	; 255
    11f2:	bc 01       	movw	r22, r24
    11f4:	cd 01       	movw	r24, r26
    11f6:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
    11fa:	dc 01       	movw	r26, r24
    11fc:	cb 01       	movw	r24, r22
    11fe:	f8 01       	movw	r30, r16
    1200:	91 83       	std	Z+1, r25	; 0x01
    1202:	80 83       	st	Z, r24
    1204:	27 c0       	rjmp	.+78     	; 0x1254 <__stack+0x9f5>
    1206:	ce 01       	movw	r24, r28
    1208:	83 55       	subi	r24, 0x53	; 83
    120a:	9f 4f       	sbci	r25, 0xFF	; 255
    120c:	29 e1       	ldi	r18, 0x19	; 25
    120e:	30 e0       	ldi	r19, 0x00	; 0
    1210:	fc 01       	movw	r30, r24
    1212:	31 83       	std	Z+1, r19	; 0x01
    1214:	20 83       	st	Z, r18
    1216:	ce 01       	movw	r24, r28
    1218:	83 55       	subi	r24, 0x53	; 83
    121a:	9f 4f       	sbci	r25, 0xFF	; 255
    121c:	fc 01       	movw	r30, r24
    121e:	80 81       	ld	r24, Z
    1220:	91 81       	ldd	r25, Z+1	; 0x01
    1222:	8c 01       	movw	r16, r24
    1224:	c8 01       	movw	r24, r16
    1226:	01 97       	sbiw	r24, 0x01	; 1
    1228:	f1 f7       	brne	.-4      	; 0x1226 <__stack+0x9c7>
    122a:	8c 01       	movw	r16, r24
    122c:	ce 01       	movw	r24, r28
    122e:	83 55       	subi	r24, 0x53	; 83
    1230:	9f 4f       	sbci	r25, 0xFF	; 255
    1232:	fc 01       	movw	r30, r24
    1234:	11 83       	std	Z+1, r17	; 0x01
    1236:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1238:	ce 01       	movw	r24, r28
    123a:	85 55       	subi	r24, 0x55	; 85
    123c:	9f 4f       	sbci	r25, 0xFF	; 255
    123e:	9e 01       	movw	r18, r28
    1240:	25 55       	subi	r18, 0x55	; 85
    1242:	3f 4f       	sbci	r19, 0xFF	; 255
    1244:	f9 01       	movw	r30, r18
    1246:	20 81       	ld	r18, Z
    1248:	31 81       	ldd	r19, Z+1	; 0x01
    124a:	21 50       	subi	r18, 0x01	; 1
    124c:	30 40       	sbci	r19, 0x00	; 0
    124e:	fc 01       	movw	r30, r24
    1250:	31 83       	std	Z+1, r19	; 0x01
    1252:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1254:	ce 01       	movw	r24, r28
    1256:	85 55       	subi	r24, 0x55	; 85
    1258:	9f 4f       	sbci	r25, 0xFF	; 255
    125a:	fc 01       	movw	r30, r24
    125c:	80 81       	ld	r24, Z
    125e:	91 81       	ldd	r25, Z+1	; 0x01
    1260:	00 97       	sbiw	r24, 0x00	; 0
    1262:	89 f6       	brne	.-94     	; 0x1206 <__stack+0x9a7>
    1264:	2f c0       	rjmp	.+94     	; 0x12c4 <__stack+0xa65>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1266:	8e 01       	movw	r16, r28
    1268:	05 55       	subi	r16, 0x55	; 85
    126a:	1f 4f       	sbci	r17, 0xFF	; 255
    126c:	ce 01       	movw	r24, r28
    126e:	89 55       	subi	r24, 0x59	; 89
    1270:	9f 4f       	sbci	r25, 0xFF	; 255
    1272:	fc 01       	movw	r30, r24
    1274:	60 81       	ld	r22, Z
    1276:	71 81       	ldd	r23, Z+1	; 0x01
    1278:	82 81       	ldd	r24, Z+2	; 0x02
    127a:	93 81       	ldd	r25, Z+3	; 0x03
    127c:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__fixunssfsi>
    1280:	dc 01       	movw	r26, r24
    1282:	cb 01       	movw	r24, r22
    1284:	f8 01       	movw	r30, r16
    1286:	91 83       	std	Z+1, r25	; 0x01
    1288:	80 83       	st	Z, r24
    128a:	ce 01       	movw	r24, r28
    128c:	81 55       	subi	r24, 0x51	; 81
    128e:	9f 4f       	sbci	r25, 0xFF	; 255
    1290:	9e 01       	movw	r18, r28
    1292:	25 55       	subi	r18, 0x55	; 85
    1294:	3f 4f       	sbci	r19, 0xFF	; 255
    1296:	f9 01       	movw	r30, r18
    1298:	20 81       	ld	r18, Z
    129a:	31 81       	ldd	r19, Z+1	; 0x01
    129c:	fc 01       	movw	r30, r24
    129e:	31 83       	std	Z+1, r19	; 0x01
    12a0:	20 83       	st	Z, r18
    12a2:	ce 01       	movw	r24, r28
    12a4:	81 55       	subi	r24, 0x51	; 81
    12a6:	9f 4f       	sbci	r25, 0xFF	; 255
    12a8:	fc 01       	movw	r30, r24
    12aa:	80 81       	ld	r24, Z
    12ac:	91 81       	ldd	r25, Z+1	; 0x01
    12ae:	8c 01       	movw	r16, r24
    12b0:	c8 01       	movw	r24, r16
    12b2:	01 97       	sbiw	r24, 0x01	; 1
    12b4:	f1 f7       	brne	.-4      	; 0x12b2 <__stack+0xa53>
    12b6:	8c 01       	movw	r16, r24
    12b8:	ce 01       	movw	r24, r28
    12ba:	81 55       	subi	r24, 0x51	; 81
    12bc:	9f 4f       	sbci	r25, 0xFF	; 255
    12be:	fc 01       	movw	r30, r24
    12c0:	11 83       	std	Z+1, r17	; 0x01
    12c2:	00 83       	st	Z, r16
		{
			PORTB=(255-i);
			_delay_ms(500);
		}
		
		for (int i=64; i>=1; i/=2)
    12c4:	8f 81       	ldd	r24, Y+7	; 0x07
    12c6:	98 85       	ldd	r25, Y+8	; 0x08
    12c8:	99 23       	and	r25, r25
    12ca:	0c f4       	brge	.+2      	; 0x12ce <__stack+0xa6f>
    12cc:	01 96       	adiw	r24, 0x01	; 1
    12ce:	95 95       	asr	r25
    12d0:	87 95       	ror	r24
    12d2:	98 87       	std	Y+8, r25	; 0x08
    12d4:	8f 83       	std	Y+7, r24	; 0x07
    12d6:	8f 81       	ldd	r24, Y+7	; 0x07
    12d8:	98 85       	ldd	r25, Y+8	; 0x08
    12da:	18 16       	cp	r1, r24
    12dc:	19 06       	cpc	r1, r25
    12de:	0c f4       	brge	.+2      	; 0x12e2 <__stack+0xa83>
    12e0:	19 cf       	rjmp	.-462    	; 0x1114 <__stack+0x8b5>
		{
			PORTB=(255-i);
			_delay_ms(500);
		}
    }
    12e2:	0c 94 53 00 	jmp	0xa6	; 0xa6 <main+0x24>

000012e6 <__fixunssfsi>:
    12e6:	ef 92       	push	r14
    12e8:	ff 92       	push	r15
    12ea:	0f 93       	push	r16
    12ec:	1f 93       	push	r17
    12ee:	7b 01       	movw	r14, r22
    12f0:	8c 01       	movw	r16, r24
    12f2:	20 e0       	ldi	r18, 0x00	; 0
    12f4:	30 e0       	ldi	r19, 0x00	; 0
    12f6:	40 e0       	ldi	r20, 0x00	; 0
    12f8:	5f e4       	ldi	r21, 0x4F	; 79
    12fa:	0e 94 71 0c 	call	0x18e2	; 0x18e2 <__gesf2>
    12fe:	87 fd       	sbrc	r24, 7
    1300:	11 c0       	rjmp	.+34     	; 0x1324 <__fixunssfsi+0x3e>
    1302:	c8 01       	movw	r24, r16
    1304:	b7 01       	movw	r22, r14
    1306:	20 e0       	ldi	r18, 0x00	; 0
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	40 e0       	ldi	r20, 0x00	; 0
    130c:	5f e4       	ldi	r21, 0x4F	; 79
    130e:	0e 94 16 0b 	call	0x162c	; 0x162c <__subsf3>
    1312:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <__fixsfsi>
    1316:	9b 01       	movw	r18, r22
    1318:	ac 01       	movw	r20, r24
    131a:	20 50       	subi	r18, 0x00	; 0
    131c:	30 40       	sbci	r19, 0x00	; 0
    131e:	40 40       	sbci	r20, 0x00	; 0
    1320:	50 48       	sbci	r21, 0x80	; 128
    1322:	06 c0       	rjmp	.+12     	; 0x1330 <__fixunssfsi+0x4a>
    1324:	c8 01       	movw	r24, r16
    1326:	b7 01       	movw	r22, r14
    1328:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <__fixsfsi>
    132c:	9b 01       	movw	r18, r22
    132e:	ac 01       	movw	r20, r24
    1330:	b9 01       	movw	r22, r18
    1332:	ca 01       	movw	r24, r20
    1334:	1f 91       	pop	r17
    1336:	0f 91       	pop	r16
    1338:	ff 90       	pop	r15
    133a:	ef 90       	pop	r14
    133c:	08 95       	ret

0000133e <_fpadd_parts>:
    133e:	a0 e0       	ldi	r26, 0x00	; 0
    1340:	b0 e0       	ldi	r27, 0x00	; 0
    1342:	e5 ea       	ldi	r30, 0xA5	; 165
    1344:	f9 e0       	ldi	r31, 0x09	; 9
    1346:	0c 94 b7 0e 	jmp	0x1d6e	; 0x1d6e <__prologue_saves__+0x8>
    134a:	fc 01       	movw	r30, r24
    134c:	ea 01       	movw	r28, r20
    134e:	80 81       	ld	r24, Z
    1350:	82 30       	cpi	r24, 0x02	; 2
    1352:	08 f4       	brcc	.+2      	; 0x1356 <_fpadd_parts+0x18>
    1354:	38 c1       	rjmp	.+624    	; 0x15c6 <_fpadd_parts+0x288>
    1356:	db 01       	movw	r26, r22
    1358:	9c 91       	ld	r25, X
    135a:	92 30       	cpi	r25, 0x02	; 2
    135c:	08 f4       	brcc	.+2      	; 0x1360 <_fpadd_parts+0x22>
    135e:	30 c1       	rjmp	.+608    	; 0x15c0 <_fpadd_parts+0x282>
    1360:	84 30       	cpi	r24, 0x04	; 4
    1362:	59 f4       	brne	.+22     	; 0x137a <_fpadd_parts+0x3c>
    1364:	94 30       	cpi	r25, 0x04	; 4
    1366:	09 f0       	breq	.+2      	; 0x136a <_fpadd_parts+0x2c>
    1368:	2e c1       	rjmp	.+604    	; 0x15c6 <_fpadd_parts+0x288>
    136a:	91 81       	ldd	r25, Z+1	; 0x01
    136c:	11 96       	adiw	r26, 0x01	; 1
    136e:	8c 91       	ld	r24, X
    1370:	11 97       	sbiw	r26, 0x01	; 1
    1372:	98 17       	cp	r25, r24
    1374:	09 f0       	breq	.+2      	; 0x1378 <_fpadd_parts+0x3a>
    1376:	21 c1       	rjmp	.+578    	; 0x15ba <_fpadd_parts+0x27c>
    1378:	26 c1       	rjmp	.+588    	; 0x15c6 <_fpadd_parts+0x288>
    137a:	94 30       	cpi	r25, 0x04	; 4
    137c:	09 f4       	brne	.+2      	; 0x1380 <_fpadd_parts+0x42>
    137e:	20 c1       	rjmp	.+576    	; 0x15c0 <_fpadd_parts+0x282>
    1380:	92 30       	cpi	r25, 0x02	; 2
    1382:	b1 f4       	brne	.+44     	; 0x13b0 <_fpadd_parts+0x72>
    1384:	82 30       	cpi	r24, 0x02	; 2
    1386:	09 f0       	breq	.+2      	; 0x138a <_fpadd_parts+0x4c>
    1388:	1e c1       	rjmp	.+572    	; 0x15c6 <_fpadd_parts+0x288>
    138a:	ca 01       	movw	r24, r20
    138c:	af 01       	movw	r20, r30
    138e:	28 e0       	ldi	r18, 0x08	; 8
    1390:	da 01       	movw	r26, r20
    1392:	0d 90       	ld	r0, X+
    1394:	ad 01       	movw	r20, r26
    1396:	dc 01       	movw	r26, r24
    1398:	0d 92       	st	X+, r0
    139a:	cd 01       	movw	r24, r26
    139c:	21 50       	subi	r18, 0x01	; 1
    139e:	c1 f7       	brne	.-16     	; 0x1390 <_fpadd_parts+0x52>
    13a0:	db 01       	movw	r26, r22
    13a2:	11 96       	adiw	r26, 0x01	; 1
    13a4:	8c 91       	ld	r24, X
    13a6:	11 97       	sbiw	r26, 0x01	; 1
    13a8:	91 81       	ldd	r25, Z+1	; 0x01
    13aa:	89 23       	and	r24, r25
    13ac:	89 83       	std	Y+1, r24	; 0x01
    13ae:	0a c1       	rjmp	.+532    	; 0x15c4 <_fpadd_parts+0x286>
    13b0:	82 30       	cpi	r24, 0x02	; 2
    13b2:	09 f4       	brne	.+2      	; 0x13b6 <_fpadd_parts+0x78>
    13b4:	05 c1       	rjmp	.+522    	; 0x15c0 <_fpadd_parts+0x282>
    13b6:	c2 80       	ldd	r12, Z+2	; 0x02
    13b8:	d3 80       	ldd	r13, Z+3	; 0x03
    13ba:	db 01       	movw	r26, r22
    13bc:	12 96       	adiw	r26, 0x02	; 2
    13be:	6d 90       	ld	r6, X+
    13c0:	7c 90       	ld	r7, X
    13c2:	13 97       	sbiw	r26, 0x03	; 3
    13c4:	24 81       	ldd	r18, Z+4	; 0x04
    13c6:	35 81       	ldd	r19, Z+5	; 0x05
    13c8:	46 81       	ldd	r20, Z+6	; 0x06
    13ca:	57 81       	ldd	r21, Z+7	; 0x07
    13cc:	14 96       	adiw	r26, 0x04	; 4
    13ce:	ed 90       	ld	r14, X+
    13d0:	fd 90       	ld	r15, X+
    13d2:	0d 91       	ld	r16, X+
    13d4:	1c 91       	ld	r17, X
    13d6:	17 97       	sbiw	r26, 0x07	; 7
    13d8:	c6 01       	movw	r24, r12
    13da:	86 19       	sub	r24, r6
    13dc:	97 09       	sbc	r25, r7
    13de:	5c 01       	movw	r10, r24
    13e0:	97 ff       	sbrs	r25, 7
    13e2:	04 c0       	rjmp	.+8      	; 0x13ec <_fpadd_parts+0xae>
    13e4:	aa 24       	eor	r10, r10
    13e6:	bb 24       	eor	r11, r11
    13e8:	a8 1a       	sub	r10, r24
    13ea:	b9 0a       	sbc	r11, r25
    13ec:	b0 e2       	ldi	r27, 0x20	; 32
    13ee:	ab 16       	cp	r10, r27
    13f0:	b1 04       	cpc	r11, r1
    13f2:	0c f0       	brlt	.+2      	; 0x13f6 <_fpadd_parts+0xb8>
    13f4:	61 c0       	rjmp	.+194    	; 0x14b8 <_fpadd_parts+0x17a>
    13f6:	18 16       	cp	r1, r24
    13f8:	19 06       	cpc	r1, r25
    13fa:	6c f5       	brge	.+90     	; 0x1456 <_fpadd_parts+0x118>
    13fc:	37 01       	movw	r6, r14
    13fe:	48 01       	movw	r8, r16
    1400:	0a 2c       	mov	r0, r10
    1402:	04 c0       	rjmp	.+8      	; 0x140c <_fpadd_parts+0xce>
    1404:	96 94       	lsr	r9
    1406:	87 94       	ror	r8
    1408:	77 94       	ror	r7
    140a:	67 94       	ror	r6
    140c:	0a 94       	dec	r0
    140e:	d2 f7       	brpl	.-12     	; 0x1404 <_fpadd_parts+0xc6>
    1410:	81 e0       	ldi	r24, 0x01	; 1
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	a0 e0       	ldi	r26, 0x00	; 0
    1416:	b0 e0       	ldi	r27, 0x00	; 0
    1418:	0a 2c       	mov	r0, r10
    141a:	04 c0       	rjmp	.+8      	; 0x1424 <_fpadd_parts+0xe6>
    141c:	88 0f       	add	r24, r24
    141e:	99 1f       	adc	r25, r25
    1420:	aa 1f       	adc	r26, r26
    1422:	bb 1f       	adc	r27, r27
    1424:	0a 94       	dec	r0
    1426:	d2 f7       	brpl	.-12     	; 0x141c <_fpadd_parts+0xde>
    1428:	01 97       	sbiw	r24, 0x01	; 1
    142a:	a1 09       	sbc	r26, r1
    142c:	b1 09       	sbc	r27, r1
    142e:	8e 21       	and	r24, r14
    1430:	9f 21       	and	r25, r15
    1432:	a0 23       	and	r26, r16
    1434:	b1 23       	and	r27, r17
    1436:	ee 24       	eor	r14, r14
    1438:	ff 24       	eor	r15, r15
    143a:	87 01       	movw	r16, r14
    143c:	e3 94       	inc	r14
    143e:	00 97       	sbiw	r24, 0x00	; 0
    1440:	a1 05       	cpc	r26, r1
    1442:	b1 05       	cpc	r27, r1
    1444:	19 f4       	brne	.+6      	; 0x144c <_fpadd_parts+0x10e>
    1446:	ee 24       	eor	r14, r14
    1448:	ff 24       	eor	r15, r15
    144a:	87 01       	movw	r16, r14
    144c:	e6 28       	or	r14, r6
    144e:	f7 28       	or	r15, r7
    1450:	08 29       	or	r16, r8
    1452:	19 29       	or	r17, r9
    1454:	3c c0       	rjmp	.+120    	; 0x14ce <_fpadd_parts+0x190>
    1456:	00 97       	sbiw	r24, 0x00	; 0
    1458:	d1 f1       	breq	.+116    	; 0x14ce <_fpadd_parts+0x190>
    145a:	ca 0c       	add	r12, r10
    145c:	db 1c       	adc	r13, r11
    145e:	39 01       	movw	r6, r18
    1460:	4a 01       	movw	r8, r20
    1462:	0a 2c       	mov	r0, r10
    1464:	04 c0       	rjmp	.+8      	; 0x146e <_fpadd_parts+0x130>
    1466:	96 94       	lsr	r9
    1468:	87 94       	ror	r8
    146a:	77 94       	ror	r7
    146c:	67 94       	ror	r6
    146e:	0a 94       	dec	r0
    1470:	d2 f7       	brpl	.-12     	; 0x1466 <_fpadd_parts+0x128>
    1472:	81 e0       	ldi	r24, 0x01	; 1
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	a0 e0       	ldi	r26, 0x00	; 0
    1478:	b0 e0       	ldi	r27, 0x00	; 0
    147a:	0a 2c       	mov	r0, r10
    147c:	04 c0       	rjmp	.+8      	; 0x1486 <_fpadd_parts+0x148>
    147e:	88 0f       	add	r24, r24
    1480:	99 1f       	adc	r25, r25
    1482:	aa 1f       	adc	r26, r26
    1484:	bb 1f       	adc	r27, r27
    1486:	0a 94       	dec	r0
    1488:	d2 f7       	brpl	.-12     	; 0x147e <_fpadd_parts+0x140>
    148a:	01 97       	sbiw	r24, 0x01	; 1
    148c:	a1 09       	sbc	r26, r1
    148e:	b1 09       	sbc	r27, r1
    1490:	82 23       	and	r24, r18
    1492:	93 23       	and	r25, r19
    1494:	a4 23       	and	r26, r20
    1496:	b5 23       	and	r27, r21
    1498:	21 e0       	ldi	r18, 0x01	; 1
    149a:	30 e0       	ldi	r19, 0x00	; 0
    149c:	40 e0       	ldi	r20, 0x00	; 0
    149e:	50 e0       	ldi	r21, 0x00	; 0
    14a0:	00 97       	sbiw	r24, 0x00	; 0
    14a2:	a1 05       	cpc	r26, r1
    14a4:	b1 05       	cpc	r27, r1
    14a6:	19 f4       	brne	.+6      	; 0x14ae <_fpadd_parts+0x170>
    14a8:	20 e0       	ldi	r18, 0x00	; 0
    14aa:	30 e0       	ldi	r19, 0x00	; 0
    14ac:	a9 01       	movw	r20, r18
    14ae:	26 29       	or	r18, r6
    14b0:	37 29       	or	r19, r7
    14b2:	48 29       	or	r20, r8
    14b4:	59 29       	or	r21, r9
    14b6:	0b c0       	rjmp	.+22     	; 0x14ce <_fpadd_parts+0x190>
    14b8:	6c 14       	cp	r6, r12
    14ba:	7d 04       	cpc	r7, r13
    14bc:	24 f4       	brge	.+8      	; 0x14c6 <_fpadd_parts+0x188>
    14be:	ee 24       	eor	r14, r14
    14c0:	ff 24       	eor	r15, r15
    14c2:	87 01       	movw	r16, r14
    14c4:	04 c0       	rjmp	.+8      	; 0x14ce <_fpadd_parts+0x190>
    14c6:	63 01       	movw	r12, r6
    14c8:	20 e0       	ldi	r18, 0x00	; 0
    14ca:	30 e0       	ldi	r19, 0x00	; 0
    14cc:	a9 01       	movw	r20, r18
    14ce:	81 81       	ldd	r24, Z+1	; 0x01
    14d0:	fb 01       	movw	r30, r22
    14d2:	91 81       	ldd	r25, Z+1	; 0x01
    14d4:	89 17       	cp	r24, r25
    14d6:	09 f4       	brne	.+2      	; 0x14da <_fpadd_parts+0x19c>
    14d8:	45 c0       	rjmp	.+138    	; 0x1564 <_fpadd_parts+0x226>
    14da:	88 23       	and	r24, r24
    14dc:	49 f0       	breq	.+18     	; 0x14f0 <_fpadd_parts+0x1b2>
    14de:	d8 01       	movw	r26, r16
    14e0:	c7 01       	movw	r24, r14
    14e2:	82 1b       	sub	r24, r18
    14e4:	93 0b       	sbc	r25, r19
    14e6:	a4 0b       	sbc	r26, r20
    14e8:	b5 0b       	sbc	r27, r21
    14ea:	9c 01       	movw	r18, r24
    14ec:	ad 01       	movw	r20, r26
    14ee:	04 c0       	rjmp	.+8      	; 0x14f8 <_fpadd_parts+0x1ba>
    14f0:	2e 19       	sub	r18, r14
    14f2:	3f 09       	sbc	r19, r15
    14f4:	40 0b       	sbc	r20, r16
    14f6:	51 0b       	sbc	r21, r17
    14f8:	57 fd       	sbrc	r21, 7
    14fa:	04 c0       	rjmp	.+8      	; 0x1504 <_fpadd_parts+0x1c6>
    14fc:	19 82       	std	Y+1, r1	; 0x01
    14fe:	db 82       	std	Y+3, r13	; 0x03
    1500:	ca 82       	std	Y+2, r12	; 0x02
    1502:	0b c0       	rjmp	.+22     	; 0x151a <_fpadd_parts+0x1dc>
    1504:	81 e0       	ldi	r24, 0x01	; 1
    1506:	89 83       	std	Y+1, r24	; 0x01
    1508:	db 82       	std	Y+3, r13	; 0x03
    150a:	ca 82       	std	Y+2, r12	; 0x02
    150c:	50 95       	com	r21
    150e:	40 95       	com	r20
    1510:	30 95       	com	r19
    1512:	21 95       	neg	r18
    1514:	3f 4f       	sbci	r19, 0xFF	; 255
    1516:	4f 4f       	sbci	r20, 0xFF	; 255
    1518:	5f 4f       	sbci	r21, 0xFF	; 255
    151a:	2c 83       	std	Y+4, r18	; 0x04
    151c:	3d 83       	std	Y+5, r19	; 0x05
    151e:	4e 83       	std	Y+6, r20	; 0x06
    1520:	5f 83       	std	Y+7, r21	; 0x07
    1522:	0d c0       	rjmp	.+26     	; 0x153e <_fpadd_parts+0x200>
    1524:	88 0f       	add	r24, r24
    1526:	99 1f       	adc	r25, r25
    1528:	aa 1f       	adc	r26, r26
    152a:	bb 1f       	adc	r27, r27
    152c:	8c 83       	std	Y+4, r24	; 0x04
    152e:	9d 83       	std	Y+5, r25	; 0x05
    1530:	ae 83       	std	Y+6, r26	; 0x06
    1532:	bf 83       	std	Y+7, r27	; 0x07
    1534:	8a 81       	ldd	r24, Y+2	; 0x02
    1536:	9b 81       	ldd	r25, Y+3	; 0x03
    1538:	01 97       	sbiw	r24, 0x01	; 1
    153a:	9b 83       	std	Y+3, r25	; 0x03
    153c:	8a 83       	std	Y+2, r24	; 0x02
    153e:	8c 81       	ldd	r24, Y+4	; 0x04
    1540:	9d 81       	ldd	r25, Y+5	; 0x05
    1542:	ae 81       	ldd	r26, Y+6	; 0x06
    1544:	bf 81       	ldd	r27, Y+7	; 0x07
    1546:	9c 01       	movw	r18, r24
    1548:	ad 01       	movw	r20, r26
    154a:	21 50       	subi	r18, 0x01	; 1
    154c:	30 40       	sbci	r19, 0x00	; 0
    154e:	40 40       	sbci	r20, 0x00	; 0
    1550:	50 40       	sbci	r21, 0x00	; 0
    1552:	2f 3f       	cpi	r18, 0xFF	; 255
    1554:	ef ef       	ldi	r30, 0xFF	; 255
    1556:	3e 07       	cpc	r19, r30
    1558:	ef ef       	ldi	r30, 0xFF	; 255
    155a:	4e 07       	cpc	r20, r30
    155c:	ef e3       	ldi	r30, 0x3F	; 63
    155e:	5e 07       	cpc	r21, r30
    1560:	08 f3       	brcs	.-62     	; 0x1524 <_fpadd_parts+0x1e6>
    1562:	0b c0       	rjmp	.+22     	; 0x157a <_fpadd_parts+0x23c>
    1564:	89 83       	std	Y+1, r24	; 0x01
    1566:	db 82       	std	Y+3, r13	; 0x03
    1568:	ca 82       	std	Y+2, r12	; 0x02
    156a:	2e 0d       	add	r18, r14
    156c:	3f 1d       	adc	r19, r15
    156e:	40 1f       	adc	r20, r16
    1570:	51 1f       	adc	r21, r17
    1572:	2c 83       	std	Y+4, r18	; 0x04
    1574:	3d 83       	std	Y+5, r19	; 0x05
    1576:	4e 83       	std	Y+6, r20	; 0x06
    1578:	5f 83       	std	Y+7, r21	; 0x07
    157a:	83 e0       	ldi	r24, 0x03	; 3
    157c:	88 83       	st	Y, r24
    157e:	2c 81       	ldd	r18, Y+4	; 0x04
    1580:	3d 81       	ldd	r19, Y+5	; 0x05
    1582:	4e 81       	ldd	r20, Y+6	; 0x06
    1584:	5f 81       	ldd	r21, Y+7	; 0x07
    1586:	57 ff       	sbrs	r21, 7
    1588:	1d c0       	rjmp	.+58     	; 0x15c4 <_fpadd_parts+0x286>
    158a:	da 01       	movw	r26, r20
    158c:	c9 01       	movw	r24, r18
    158e:	81 70       	andi	r24, 0x01	; 1
    1590:	90 70       	andi	r25, 0x00	; 0
    1592:	a0 70       	andi	r26, 0x00	; 0
    1594:	b0 70       	andi	r27, 0x00	; 0
    1596:	56 95       	lsr	r21
    1598:	47 95       	ror	r20
    159a:	37 95       	ror	r19
    159c:	27 95       	ror	r18
    159e:	82 2b       	or	r24, r18
    15a0:	93 2b       	or	r25, r19
    15a2:	a4 2b       	or	r26, r20
    15a4:	b5 2b       	or	r27, r21
    15a6:	8c 83       	std	Y+4, r24	; 0x04
    15a8:	9d 83       	std	Y+5, r25	; 0x05
    15aa:	ae 83       	std	Y+6, r26	; 0x06
    15ac:	bf 83       	std	Y+7, r27	; 0x07
    15ae:	8a 81       	ldd	r24, Y+2	; 0x02
    15b0:	9b 81       	ldd	r25, Y+3	; 0x03
    15b2:	01 96       	adiw	r24, 0x01	; 1
    15b4:	9b 83       	std	Y+3, r25	; 0x03
    15b6:	8a 83       	std	Y+2, r24	; 0x02
    15b8:	05 c0       	rjmp	.+10     	; 0x15c4 <_fpadd_parts+0x286>
    15ba:	e0 e6       	ldi	r30, 0x60	; 96
    15bc:	f0 e0       	ldi	r31, 0x00	; 0
    15be:	03 c0       	rjmp	.+6      	; 0x15c6 <_fpadd_parts+0x288>
    15c0:	fb 01       	movw	r30, r22
    15c2:	01 c0       	rjmp	.+2      	; 0x15c6 <_fpadd_parts+0x288>
    15c4:	fe 01       	movw	r30, r28
    15c6:	cf 01       	movw	r24, r30
    15c8:	cd b7       	in	r28, 0x3d	; 61
    15ca:	de b7       	in	r29, 0x3e	; 62
    15cc:	ee e0       	ldi	r30, 0x0E	; 14
    15ce:	0c 94 d3 0e 	jmp	0x1da6	; 0x1da6 <__epilogue_restores__+0x8>

000015d2 <__addsf3>:
    15d2:	a0 e2       	ldi	r26, 0x20	; 32
    15d4:	b0 e0       	ldi	r27, 0x00	; 0
    15d6:	ef ee       	ldi	r30, 0xEF	; 239
    15d8:	fa e0       	ldi	r31, 0x0A	; 10
    15da:	0c 94 bf 0e 	jmp	0x1d7e	; 0x1d7e <__prologue_saves__+0x18>
    15de:	69 83       	std	Y+1, r22	; 0x01
    15e0:	7a 83       	std	Y+2, r23	; 0x02
    15e2:	8b 83       	std	Y+3, r24	; 0x03
    15e4:	9c 83       	std	Y+4, r25	; 0x04
    15e6:	2d 83       	std	Y+5, r18	; 0x05
    15e8:	3e 83       	std	Y+6, r19	; 0x06
    15ea:	4f 83       	std	Y+7, r20	; 0x07
    15ec:	58 87       	std	Y+8, r21	; 0x08
    15ee:	89 e0       	ldi	r24, 0x09	; 9
    15f0:	e8 2e       	mov	r14, r24
    15f2:	f1 2c       	mov	r15, r1
    15f4:	ec 0e       	add	r14, r28
    15f6:	fd 1e       	adc	r15, r29
    15f8:	ce 01       	movw	r24, r28
    15fa:	01 96       	adiw	r24, 0x01	; 1
    15fc:	b7 01       	movw	r22, r14
    15fe:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__unpack_f>
    1602:	8e 01       	movw	r16, r28
    1604:	0f 5e       	subi	r16, 0xEF	; 239
    1606:	1f 4f       	sbci	r17, 0xFF	; 255
    1608:	ce 01       	movw	r24, r28
    160a:	05 96       	adiw	r24, 0x05	; 5
    160c:	b8 01       	movw	r22, r16
    160e:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__unpack_f>
    1612:	c7 01       	movw	r24, r14
    1614:	b8 01       	movw	r22, r16
    1616:	ae 01       	movw	r20, r28
    1618:	47 5e       	subi	r20, 0xE7	; 231
    161a:	5f 4f       	sbci	r21, 0xFF	; 255
    161c:	0e 94 9f 09 	call	0x133e	; 0x133e <_fpadd_parts>
    1620:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <__pack_f>
    1624:	a0 96       	adiw	r28, 0x20	; 32
    1626:	e6 e0       	ldi	r30, 0x06	; 6
    1628:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__epilogue_restores__+0x18>

0000162c <__subsf3>:
    162c:	a0 e2       	ldi	r26, 0x20	; 32
    162e:	b0 e0       	ldi	r27, 0x00	; 0
    1630:	ec e1       	ldi	r30, 0x1C	; 28
    1632:	fb e0       	ldi	r31, 0x0B	; 11
    1634:	0c 94 bf 0e 	jmp	0x1d7e	; 0x1d7e <__prologue_saves__+0x18>
    1638:	69 83       	std	Y+1, r22	; 0x01
    163a:	7a 83       	std	Y+2, r23	; 0x02
    163c:	8b 83       	std	Y+3, r24	; 0x03
    163e:	9c 83       	std	Y+4, r25	; 0x04
    1640:	2d 83       	std	Y+5, r18	; 0x05
    1642:	3e 83       	std	Y+6, r19	; 0x06
    1644:	4f 83       	std	Y+7, r20	; 0x07
    1646:	58 87       	std	Y+8, r21	; 0x08
    1648:	8e 01       	movw	r16, r28
    164a:	07 5f       	subi	r16, 0xF7	; 247
    164c:	1f 4f       	sbci	r17, 0xFF	; 255
    164e:	ce 01       	movw	r24, r28
    1650:	01 96       	adiw	r24, 0x01	; 1
    1652:	b8 01       	movw	r22, r16
    1654:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__unpack_f>
    1658:	91 e1       	ldi	r25, 0x11	; 17
    165a:	e9 2e       	mov	r14, r25
    165c:	f1 2c       	mov	r15, r1
    165e:	ec 0e       	add	r14, r28
    1660:	fd 1e       	adc	r15, r29
    1662:	ce 01       	movw	r24, r28
    1664:	05 96       	adiw	r24, 0x05	; 5
    1666:	b7 01       	movw	r22, r14
    1668:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__unpack_f>
    166c:	8a 89       	ldd	r24, Y+18	; 0x12
    166e:	91 e0       	ldi	r25, 0x01	; 1
    1670:	89 27       	eor	r24, r25
    1672:	8a 8b       	std	Y+18, r24	; 0x12
    1674:	c8 01       	movw	r24, r16
    1676:	b7 01       	movw	r22, r14
    1678:	ae 01       	movw	r20, r28
    167a:	47 5e       	subi	r20, 0xE7	; 231
    167c:	5f 4f       	sbci	r21, 0xFF	; 255
    167e:	0e 94 9f 09 	call	0x133e	; 0x133e <_fpadd_parts>
    1682:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <__pack_f>
    1686:	a0 96       	adiw	r28, 0x20	; 32
    1688:	e6 e0       	ldi	r30, 0x06	; 6
    168a:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__epilogue_restores__+0x18>

0000168e <__mulsf3>:
    168e:	a0 e2       	ldi	r26, 0x20	; 32
    1690:	b0 e0       	ldi	r27, 0x00	; 0
    1692:	ed e4       	ldi	r30, 0x4D	; 77
    1694:	fb e0       	ldi	r31, 0x0B	; 11
    1696:	0c 94 b3 0e 	jmp	0x1d66	; 0x1d66 <__prologue_saves__>
    169a:	69 83       	std	Y+1, r22	; 0x01
    169c:	7a 83       	std	Y+2, r23	; 0x02
    169e:	8b 83       	std	Y+3, r24	; 0x03
    16a0:	9c 83       	std	Y+4, r25	; 0x04
    16a2:	2d 83       	std	Y+5, r18	; 0x05
    16a4:	3e 83       	std	Y+6, r19	; 0x06
    16a6:	4f 83       	std	Y+7, r20	; 0x07
    16a8:	58 87       	std	Y+8, r21	; 0x08
    16aa:	ce 01       	movw	r24, r28
    16ac:	01 96       	adiw	r24, 0x01	; 1
    16ae:	be 01       	movw	r22, r28
    16b0:	67 5f       	subi	r22, 0xF7	; 247
    16b2:	7f 4f       	sbci	r23, 0xFF	; 255
    16b4:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__unpack_f>
    16b8:	ce 01       	movw	r24, r28
    16ba:	05 96       	adiw	r24, 0x05	; 5
    16bc:	be 01       	movw	r22, r28
    16be:	6f 5e       	subi	r22, 0xEF	; 239
    16c0:	7f 4f       	sbci	r23, 0xFF	; 255
    16c2:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__unpack_f>
    16c6:	99 85       	ldd	r25, Y+9	; 0x09
    16c8:	92 30       	cpi	r25, 0x02	; 2
    16ca:	78 f0       	brcs	.+30     	; 0x16ea <__mulsf3+0x5c>
    16cc:	89 89       	ldd	r24, Y+17	; 0x11
    16ce:	82 30       	cpi	r24, 0x02	; 2
    16d0:	c0 f0       	brcs	.+48     	; 0x1702 <__mulsf3+0x74>
    16d2:	94 30       	cpi	r25, 0x04	; 4
    16d4:	19 f4       	brne	.+6      	; 0x16dc <__mulsf3+0x4e>
    16d6:	82 30       	cpi	r24, 0x02	; 2
    16d8:	41 f4       	brne	.+16     	; 0x16ea <__mulsf3+0x5c>
    16da:	cb c0       	rjmp	.+406    	; 0x1872 <__mulsf3+0x1e4>
    16dc:	84 30       	cpi	r24, 0x04	; 4
    16de:	19 f4       	brne	.+6      	; 0x16e6 <__mulsf3+0x58>
    16e0:	92 30       	cpi	r25, 0x02	; 2
    16e2:	79 f4       	brne	.+30     	; 0x1702 <__mulsf3+0x74>
    16e4:	c6 c0       	rjmp	.+396    	; 0x1872 <__mulsf3+0x1e4>
    16e6:	92 30       	cpi	r25, 0x02	; 2
    16e8:	51 f4       	brne	.+20     	; 0x16fe <__mulsf3+0x70>
    16ea:	81 e0       	ldi	r24, 0x01	; 1
    16ec:	2a 85       	ldd	r18, Y+10	; 0x0a
    16ee:	9a 89       	ldd	r25, Y+18	; 0x12
    16f0:	29 17       	cp	r18, r25
    16f2:	09 f4       	brne	.+2      	; 0x16f6 <__mulsf3+0x68>
    16f4:	80 e0       	ldi	r24, 0x00	; 0
    16f6:	8a 87       	std	Y+10, r24	; 0x0a
    16f8:	ce 01       	movw	r24, r28
    16fa:	09 96       	adiw	r24, 0x09	; 9
    16fc:	bc c0       	rjmp	.+376    	; 0x1876 <__mulsf3+0x1e8>
    16fe:	82 30       	cpi	r24, 0x02	; 2
    1700:	51 f4       	brne	.+20     	; 0x1716 <__mulsf3+0x88>
    1702:	81 e0       	ldi	r24, 0x01	; 1
    1704:	2a 85       	ldd	r18, Y+10	; 0x0a
    1706:	9a 89       	ldd	r25, Y+18	; 0x12
    1708:	29 17       	cp	r18, r25
    170a:	09 f4       	brne	.+2      	; 0x170e <__mulsf3+0x80>
    170c:	80 e0       	ldi	r24, 0x00	; 0
    170e:	8a 8b       	std	Y+18, r24	; 0x12
    1710:	ce 01       	movw	r24, r28
    1712:	41 96       	adiw	r24, 0x11	; 17
    1714:	b0 c0       	rjmp	.+352    	; 0x1876 <__mulsf3+0x1e8>
    1716:	6d 84       	ldd	r6, Y+13	; 0x0d
    1718:	7e 84       	ldd	r7, Y+14	; 0x0e
    171a:	8f 84       	ldd	r8, Y+15	; 0x0f
    171c:	98 88       	ldd	r9, Y+16	; 0x10
    171e:	ed 88       	ldd	r14, Y+21	; 0x15
    1720:	fe 88       	ldd	r15, Y+22	; 0x16
    1722:	0f 89       	ldd	r16, Y+23	; 0x17
    1724:	18 8d       	ldd	r17, Y+24	; 0x18
    1726:	e0 e2       	ldi	r30, 0x20	; 32
    1728:	f0 e0       	ldi	r31, 0x00	; 0
    172a:	80 e0       	ldi	r24, 0x00	; 0
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	dc 01       	movw	r26, r24
    1730:	aa 24       	eor	r10, r10
    1732:	bb 24       	eor	r11, r11
    1734:	65 01       	movw	r12, r10
    1736:	20 e0       	ldi	r18, 0x00	; 0
    1738:	30 e0       	ldi	r19, 0x00	; 0
    173a:	a9 01       	movw	r20, r18
    173c:	b3 01       	movw	r22, r6
    173e:	61 70       	andi	r22, 0x01	; 1
    1740:	70 70       	andi	r23, 0x00	; 0
    1742:	61 15       	cp	r22, r1
    1744:	71 05       	cpc	r23, r1
    1746:	d1 f0       	breq	.+52     	; 0x177c <__mulsf3+0xee>
    1748:	2e 0d       	add	r18, r14
    174a:	3f 1d       	adc	r19, r15
    174c:	40 1f       	adc	r20, r16
    174e:	51 1f       	adc	r21, r17
    1750:	15 01       	movw	r2, r10
    1752:	26 01       	movw	r4, r12
    1754:	28 0e       	add	r2, r24
    1756:	39 1e       	adc	r3, r25
    1758:	4a 1e       	adc	r4, r26
    175a:	5b 1e       	adc	r5, r27
    175c:	81 e0       	ldi	r24, 0x01	; 1
    175e:	90 e0       	ldi	r25, 0x00	; 0
    1760:	a0 e0       	ldi	r26, 0x00	; 0
    1762:	b0 e0       	ldi	r27, 0x00	; 0
    1764:	2e 15       	cp	r18, r14
    1766:	3f 05       	cpc	r19, r15
    1768:	40 07       	cpc	r20, r16
    176a:	51 07       	cpc	r21, r17
    176c:	18 f0       	brcs	.+6      	; 0x1774 <__mulsf3+0xe6>
    176e:	80 e0       	ldi	r24, 0x00	; 0
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	dc 01       	movw	r26, r24
    1774:	82 0d       	add	r24, r2
    1776:	93 1d       	adc	r25, r3
    1778:	a4 1d       	adc	r26, r4
    177a:	b5 1d       	adc	r27, r5
    177c:	aa 0c       	add	r10, r10
    177e:	bb 1c       	adc	r11, r11
    1780:	cc 1c       	adc	r12, r12
    1782:	dd 1c       	adc	r13, r13
    1784:	17 ff       	sbrs	r17, 7
    1786:	09 c0       	rjmp	.+18     	; 0x179a <__mulsf3+0x10c>
    1788:	61 e0       	ldi	r22, 0x01	; 1
    178a:	26 2e       	mov	r2, r22
    178c:	31 2c       	mov	r3, r1
    178e:	41 2c       	mov	r4, r1
    1790:	51 2c       	mov	r5, r1
    1792:	a2 28       	or	r10, r2
    1794:	b3 28       	or	r11, r3
    1796:	c4 28       	or	r12, r4
    1798:	d5 28       	or	r13, r5
    179a:	31 97       	sbiw	r30, 0x01	; 1
    179c:	49 f0       	breq	.+18     	; 0x17b0 <__mulsf3+0x122>
    179e:	ee 0c       	add	r14, r14
    17a0:	ff 1c       	adc	r15, r15
    17a2:	00 1f       	adc	r16, r16
    17a4:	11 1f       	adc	r17, r17
    17a6:	96 94       	lsr	r9
    17a8:	87 94       	ror	r8
    17aa:	77 94       	ror	r7
    17ac:	67 94       	ror	r6
    17ae:	c6 cf       	rjmp	.-116    	; 0x173c <__mulsf3+0xae>
    17b0:	6b 89       	ldd	r22, Y+19	; 0x13
    17b2:	7c 89       	ldd	r23, Y+20	; 0x14
    17b4:	eb 85       	ldd	r30, Y+11	; 0x0b
    17b6:	fc 85       	ldd	r31, Y+12	; 0x0c
    17b8:	6e 0f       	add	r22, r30
    17ba:	7f 1f       	adc	r23, r31
    17bc:	6e 5f       	subi	r22, 0xFE	; 254
    17be:	7f 4f       	sbci	r23, 0xFF	; 255
    17c0:	7c 8f       	std	Y+28, r23	; 0x1c
    17c2:	6b 8f       	std	Y+27, r22	; 0x1b
    17c4:	61 e0       	ldi	r22, 0x01	; 1
    17c6:	ea 85       	ldd	r30, Y+10	; 0x0a
    17c8:	7a 89       	ldd	r23, Y+18	; 0x12
    17ca:	e7 17       	cp	r30, r23
    17cc:	09 f4       	brne	.+2      	; 0x17d0 <__mulsf3+0x142>
    17ce:	60 e0       	ldi	r22, 0x00	; 0
    17d0:	6a 8f       	std	Y+26, r22	; 0x1a
    17d2:	6b 8d       	ldd	r22, Y+27	; 0x1b
    17d4:	7c 8d       	ldd	r23, Y+28	; 0x1c
    17d6:	10 c0       	rjmp	.+32     	; 0x17f8 <__mulsf3+0x16a>
    17d8:	fc 01       	movw	r30, r24
    17da:	e1 70       	andi	r30, 0x01	; 1
    17dc:	f0 70       	andi	r31, 0x00	; 0
    17de:	30 97       	sbiw	r30, 0x00	; 0
    17e0:	29 f0       	breq	.+10     	; 0x17ec <__mulsf3+0x15e>
    17e2:	56 95       	lsr	r21
    17e4:	47 95       	ror	r20
    17e6:	37 95       	ror	r19
    17e8:	27 95       	ror	r18
    17ea:	50 68       	ori	r21, 0x80	; 128
    17ec:	b6 95       	lsr	r27
    17ee:	a7 95       	ror	r26
    17f0:	97 95       	ror	r25
    17f2:	87 95       	ror	r24
    17f4:	6f 5f       	subi	r22, 0xFF	; 255
    17f6:	7f 4f       	sbci	r23, 0xFF	; 255
    17f8:	b7 fd       	sbrc	r27, 7
    17fa:	ee cf       	rjmp	.-36     	; 0x17d8 <__mulsf3+0x14a>
    17fc:	0c c0       	rjmp	.+24     	; 0x1816 <__mulsf3+0x188>
    17fe:	88 0f       	add	r24, r24
    1800:	99 1f       	adc	r25, r25
    1802:	aa 1f       	adc	r26, r26
    1804:	bb 1f       	adc	r27, r27
    1806:	57 fd       	sbrc	r21, 7
    1808:	81 60       	ori	r24, 0x01	; 1
    180a:	22 0f       	add	r18, r18
    180c:	33 1f       	adc	r19, r19
    180e:	44 1f       	adc	r20, r20
    1810:	55 1f       	adc	r21, r21
    1812:	61 50       	subi	r22, 0x01	; 1
    1814:	70 40       	sbci	r23, 0x00	; 0
    1816:	80 30       	cpi	r24, 0x00	; 0
    1818:	e0 e0       	ldi	r30, 0x00	; 0
    181a:	9e 07       	cpc	r25, r30
    181c:	e0 e0       	ldi	r30, 0x00	; 0
    181e:	ae 07       	cpc	r26, r30
    1820:	e0 e4       	ldi	r30, 0x40	; 64
    1822:	be 07       	cpc	r27, r30
    1824:	60 f3       	brcs	.-40     	; 0x17fe <__mulsf3+0x170>
    1826:	6b 8f       	std	Y+27, r22	; 0x1b
    1828:	7c 8f       	std	Y+28, r23	; 0x1c
    182a:	6f e7       	ldi	r22, 0x7F	; 127
    182c:	e6 2e       	mov	r14, r22
    182e:	f1 2c       	mov	r15, r1
    1830:	01 2d       	mov	r16, r1
    1832:	11 2d       	mov	r17, r1
    1834:	e8 22       	and	r14, r24
    1836:	f9 22       	and	r15, r25
    1838:	0a 23       	and	r16, r26
    183a:	1b 23       	and	r17, r27
    183c:	60 e4       	ldi	r22, 0x40	; 64
    183e:	e6 16       	cp	r14, r22
    1840:	f1 04       	cpc	r15, r1
    1842:	01 05       	cpc	r16, r1
    1844:	11 05       	cpc	r17, r1
    1846:	61 f4       	brne	.+24     	; 0x1860 <__mulsf3+0x1d2>
    1848:	87 fd       	sbrc	r24, 7
    184a:	0a c0       	rjmp	.+20     	; 0x1860 <__mulsf3+0x1d2>
    184c:	21 15       	cp	r18, r1
    184e:	31 05       	cpc	r19, r1
    1850:	41 05       	cpc	r20, r1
    1852:	51 05       	cpc	r21, r1
    1854:	29 f0       	breq	.+10     	; 0x1860 <__mulsf3+0x1d2>
    1856:	80 5c       	subi	r24, 0xC0	; 192
    1858:	9f 4f       	sbci	r25, 0xFF	; 255
    185a:	af 4f       	sbci	r26, 0xFF	; 255
    185c:	bf 4f       	sbci	r27, 0xFF	; 255
    185e:	80 78       	andi	r24, 0x80	; 128
    1860:	8d 8f       	std	Y+29, r24	; 0x1d
    1862:	9e 8f       	std	Y+30, r25	; 0x1e
    1864:	af 8f       	std	Y+31, r26	; 0x1f
    1866:	b8 a3       	std	Y+32, r27	; 0x20
    1868:	83 e0       	ldi	r24, 0x03	; 3
    186a:	89 8f       	std	Y+25, r24	; 0x19
    186c:	ce 01       	movw	r24, r28
    186e:	49 96       	adiw	r24, 0x19	; 25
    1870:	02 c0       	rjmp	.+4      	; 0x1876 <__mulsf3+0x1e8>
    1872:	80 e6       	ldi	r24, 0x60	; 96
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <__pack_f>
    187a:	a0 96       	adiw	r28, 0x20	; 32
    187c:	e2 e1       	ldi	r30, 0x12	; 18
    187e:	0c 94 cf 0e 	jmp	0x1d9e	; 0x1d9e <__epilogue_restores__>

00001882 <__gtsf2>:
    1882:	a8 e1       	ldi	r26, 0x18	; 24
    1884:	b0 e0       	ldi	r27, 0x00	; 0
    1886:	e7 e4       	ldi	r30, 0x47	; 71
    1888:	fc e0       	ldi	r31, 0x0C	; 12
    188a:	0c 94 bf 0e 	jmp	0x1d7e	; 0x1d7e <__prologue_saves__+0x18>
    188e:	69 83       	std	Y+1, r22	; 0x01
    1890:	7a 83       	std	Y+2, r23	; 0x02
    1892:	8b 83       	std	Y+3, r24	; 0x03
    1894:	9c 83       	std	Y+4, r25	; 0x04
    1896:	2d 83       	std	Y+5, r18	; 0x05
    1898:	3e 83       	std	Y+6, r19	; 0x06
    189a:	4f 83       	std	Y+7, r20	; 0x07
    189c:	58 87       	std	Y+8, r21	; 0x08
    189e:	8e 01       	movw	r16, r28
    18a0:	07 5f       	subi	r16, 0xF7	; 247
    18a2:	1f 4f       	sbci	r17, 0xFF	; 255
    18a4:	ce 01       	movw	r24, r28
    18a6:	01 96       	adiw	r24, 0x01	; 1
    18a8:	b8 01       	movw	r22, r16
    18aa:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__unpack_f>
    18ae:	81 e1       	ldi	r24, 0x11	; 17
    18b0:	e8 2e       	mov	r14, r24
    18b2:	f1 2c       	mov	r15, r1
    18b4:	ec 0e       	add	r14, r28
    18b6:	fd 1e       	adc	r15, r29
    18b8:	ce 01       	movw	r24, r28
    18ba:	05 96       	adiw	r24, 0x05	; 5
    18bc:	b7 01       	movw	r22, r14
    18be:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__unpack_f>
    18c2:	89 85       	ldd	r24, Y+9	; 0x09
    18c4:	82 30       	cpi	r24, 0x02	; 2
    18c6:	40 f0       	brcs	.+16     	; 0x18d8 <__gtsf2+0x56>
    18c8:	89 89       	ldd	r24, Y+17	; 0x11
    18ca:	82 30       	cpi	r24, 0x02	; 2
    18cc:	28 f0       	brcs	.+10     	; 0x18d8 <__gtsf2+0x56>
    18ce:	c8 01       	movw	r24, r16
    18d0:	b7 01       	movw	r22, r14
    18d2:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <__fpcmp_parts_f>
    18d6:	01 c0       	rjmp	.+2      	; 0x18da <__gtsf2+0x58>
    18d8:	8f ef       	ldi	r24, 0xFF	; 255
    18da:	68 96       	adiw	r28, 0x18	; 24
    18dc:	e6 e0       	ldi	r30, 0x06	; 6
    18de:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__epilogue_restores__+0x18>

000018e2 <__gesf2>:
    18e2:	a8 e1       	ldi	r26, 0x18	; 24
    18e4:	b0 e0       	ldi	r27, 0x00	; 0
    18e6:	e7 e7       	ldi	r30, 0x77	; 119
    18e8:	fc e0       	ldi	r31, 0x0C	; 12
    18ea:	0c 94 bf 0e 	jmp	0x1d7e	; 0x1d7e <__prologue_saves__+0x18>
    18ee:	69 83       	std	Y+1, r22	; 0x01
    18f0:	7a 83       	std	Y+2, r23	; 0x02
    18f2:	8b 83       	std	Y+3, r24	; 0x03
    18f4:	9c 83       	std	Y+4, r25	; 0x04
    18f6:	2d 83       	std	Y+5, r18	; 0x05
    18f8:	3e 83       	std	Y+6, r19	; 0x06
    18fa:	4f 83       	std	Y+7, r20	; 0x07
    18fc:	58 87       	std	Y+8, r21	; 0x08
    18fe:	8e 01       	movw	r16, r28
    1900:	07 5f       	subi	r16, 0xF7	; 247
    1902:	1f 4f       	sbci	r17, 0xFF	; 255
    1904:	ce 01       	movw	r24, r28
    1906:	01 96       	adiw	r24, 0x01	; 1
    1908:	b8 01       	movw	r22, r16
    190a:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__unpack_f>
    190e:	81 e1       	ldi	r24, 0x11	; 17
    1910:	e8 2e       	mov	r14, r24
    1912:	f1 2c       	mov	r15, r1
    1914:	ec 0e       	add	r14, r28
    1916:	fd 1e       	adc	r15, r29
    1918:	ce 01       	movw	r24, r28
    191a:	05 96       	adiw	r24, 0x05	; 5
    191c:	b7 01       	movw	r22, r14
    191e:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__unpack_f>
    1922:	89 85       	ldd	r24, Y+9	; 0x09
    1924:	82 30       	cpi	r24, 0x02	; 2
    1926:	40 f0       	brcs	.+16     	; 0x1938 <__gesf2+0x56>
    1928:	89 89       	ldd	r24, Y+17	; 0x11
    192a:	82 30       	cpi	r24, 0x02	; 2
    192c:	28 f0       	brcs	.+10     	; 0x1938 <__gesf2+0x56>
    192e:	c8 01       	movw	r24, r16
    1930:	b7 01       	movw	r22, r14
    1932:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <__fpcmp_parts_f>
    1936:	01 c0       	rjmp	.+2      	; 0x193a <__gesf2+0x58>
    1938:	8f ef       	ldi	r24, 0xFF	; 255
    193a:	68 96       	adiw	r28, 0x18	; 24
    193c:	e6 e0       	ldi	r30, 0x06	; 6
    193e:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__epilogue_restores__+0x18>

00001942 <__ltsf2>:
    1942:	a8 e1       	ldi	r26, 0x18	; 24
    1944:	b0 e0       	ldi	r27, 0x00	; 0
    1946:	e7 ea       	ldi	r30, 0xA7	; 167
    1948:	fc e0       	ldi	r31, 0x0C	; 12
    194a:	0c 94 bf 0e 	jmp	0x1d7e	; 0x1d7e <__prologue_saves__+0x18>
    194e:	69 83       	std	Y+1, r22	; 0x01
    1950:	7a 83       	std	Y+2, r23	; 0x02
    1952:	8b 83       	std	Y+3, r24	; 0x03
    1954:	9c 83       	std	Y+4, r25	; 0x04
    1956:	2d 83       	std	Y+5, r18	; 0x05
    1958:	3e 83       	std	Y+6, r19	; 0x06
    195a:	4f 83       	std	Y+7, r20	; 0x07
    195c:	58 87       	std	Y+8, r21	; 0x08
    195e:	8e 01       	movw	r16, r28
    1960:	07 5f       	subi	r16, 0xF7	; 247
    1962:	1f 4f       	sbci	r17, 0xFF	; 255
    1964:	ce 01       	movw	r24, r28
    1966:	01 96       	adiw	r24, 0x01	; 1
    1968:	b8 01       	movw	r22, r16
    196a:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__unpack_f>
    196e:	81 e1       	ldi	r24, 0x11	; 17
    1970:	e8 2e       	mov	r14, r24
    1972:	f1 2c       	mov	r15, r1
    1974:	ec 0e       	add	r14, r28
    1976:	fd 1e       	adc	r15, r29
    1978:	ce 01       	movw	r24, r28
    197a:	05 96       	adiw	r24, 0x05	; 5
    197c:	b7 01       	movw	r22, r14
    197e:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__unpack_f>
    1982:	89 85       	ldd	r24, Y+9	; 0x09
    1984:	82 30       	cpi	r24, 0x02	; 2
    1986:	40 f0       	brcs	.+16     	; 0x1998 <__ltsf2+0x56>
    1988:	89 89       	ldd	r24, Y+17	; 0x11
    198a:	82 30       	cpi	r24, 0x02	; 2
    198c:	28 f0       	brcs	.+10     	; 0x1998 <__ltsf2+0x56>
    198e:	c8 01       	movw	r24, r16
    1990:	b7 01       	movw	r22, r14
    1992:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <__fpcmp_parts_f>
    1996:	01 c0       	rjmp	.+2      	; 0x199a <__ltsf2+0x58>
    1998:	81 e0       	ldi	r24, 0x01	; 1
    199a:	68 96       	adiw	r28, 0x18	; 24
    199c:	e6 e0       	ldi	r30, 0x06	; 6
    199e:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__epilogue_restores__+0x18>

000019a2 <__fixsfsi>:
    19a2:	ac e0       	ldi	r26, 0x0C	; 12
    19a4:	b0 e0       	ldi	r27, 0x00	; 0
    19a6:	e7 ed       	ldi	r30, 0xD7	; 215
    19a8:	fc e0       	ldi	r31, 0x0C	; 12
    19aa:	0c 94 c3 0e 	jmp	0x1d86	; 0x1d86 <__prologue_saves__+0x20>
    19ae:	69 83       	std	Y+1, r22	; 0x01
    19b0:	7a 83       	std	Y+2, r23	; 0x02
    19b2:	8b 83       	std	Y+3, r24	; 0x03
    19b4:	9c 83       	std	Y+4, r25	; 0x04
    19b6:	ce 01       	movw	r24, r28
    19b8:	01 96       	adiw	r24, 0x01	; 1
    19ba:	be 01       	movw	r22, r28
    19bc:	6b 5f       	subi	r22, 0xFB	; 251
    19be:	7f 4f       	sbci	r23, 0xFF	; 255
    19c0:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__unpack_f>
    19c4:	8d 81       	ldd	r24, Y+5	; 0x05
    19c6:	82 30       	cpi	r24, 0x02	; 2
    19c8:	81 f1       	breq	.+96     	; 0x1a2a <__fixsfsi+0x88>
    19ca:	82 30       	cpi	r24, 0x02	; 2
    19cc:	70 f1       	brcs	.+92     	; 0x1a2a <__fixsfsi+0x88>
    19ce:	84 30       	cpi	r24, 0x04	; 4
    19d0:	21 f4       	brne	.+8      	; 0x19da <__fixsfsi+0x38>
    19d2:	8e 81       	ldd	r24, Y+6	; 0x06
    19d4:	88 23       	and	r24, r24
    19d6:	69 f1       	breq	.+90     	; 0x1a32 <__fixsfsi+0x90>
    19d8:	0a c0       	rjmp	.+20     	; 0x19ee <__fixsfsi+0x4c>
    19da:	2f 81       	ldd	r18, Y+7	; 0x07
    19dc:	38 85       	ldd	r19, Y+8	; 0x08
    19de:	37 fd       	sbrc	r19, 7
    19e0:	24 c0       	rjmp	.+72     	; 0x1a2a <__fixsfsi+0x88>
    19e2:	6e 81       	ldd	r22, Y+6	; 0x06
    19e4:	2f 31       	cpi	r18, 0x1F	; 31
    19e6:	31 05       	cpc	r19, r1
    19e8:	3c f0       	brlt	.+14     	; 0x19f8 <__fixsfsi+0x56>
    19ea:	66 23       	and	r22, r22
    19ec:	11 f1       	breq	.+68     	; 0x1a32 <__fixsfsi+0x90>
    19ee:	20 e0       	ldi	r18, 0x00	; 0
    19f0:	30 e0       	ldi	r19, 0x00	; 0
    19f2:	40 e0       	ldi	r20, 0x00	; 0
    19f4:	50 e8       	ldi	r21, 0x80	; 128
    19f6:	21 c0       	rjmp	.+66     	; 0x1a3a <__fixsfsi+0x98>
    19f8:	8e e1       	ldi	r24, 0x1E	; 30
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	82 1b       	sub	r24, r18
    19fe:	93 0b       	sbc	r25, r19
    1a00:	29 85       	ldd	r18, Y+9	; 0x09
    1a02:	3a 85       	ldd	r19, Y+10	; 0x0a
    1a04:	4b 85       	ldd	r20, Y+11	; 0x0b
    1a06:	5c 85       	ldd	r21, Y+12	; 0x0c
    1a08:	04 c0       	rjmp	.+8      	; 0x1a12 <__fixsfsi+0x70>
    1a0a:	56 95       	lsr	r21
    1a0c:	47 95       	ror	r20
    1a0e:	37 95       	ror	r19
    1a10:	27 95       	ror	r18
    1a12:	8a 95       	dec	r24
    1a14:	d2 f7       	brpl	.-12     	; 0x1a0a <__fixsfsi+0x68>
    1a16:	66 23       	and	r22, r22
    1a18:	81 f0       	breq	.+32     	; 0x1a3a <__fixsfsi+0x98>
    1a1a:	50 95       	com	r21
    1a1c:	40 95       	com	r20
    1a1e:	30 95       	com	r19
    1a20:	21 95       	neg	r18
    1a22:	3f 4f       	sbci	r19, 0xFF	; 255
    1a24:	4f 4f       	sbci	r20, 0xFF	; 255
    1a26:	5f 4f       	sbci	r21, 0xFF	; 255
    1a28:	08 c0       	rjmp	.+16     	; 0x1a3a <__fixsfsi+0x98>
    1a2a:	20 e0       	ldi	r18, 0x00	; 0
    1a2c:	30 e0       	ldi	r19, 0x00	; 0
    1a2e:	a9 01       	movw	r20, r18
    1a30:	04 c0       	rjmp	.+8      	; 0x1a3a <__fixsfsi+0x98>
    1a32:	2f ef       	ldi	r18, 0xFF	; 255
    1a34:	3f ef       	ldi	r19, 0xFF	; 255
    1a36:	4f ef       	ldi	r20, 0xFF	; 255
    1a38:	5f e7       	ldi	r21, 0x7F	; 127
    1a3a:	b9 01       	movw	r22, r18
    1a3c:	ca 01       	movw	r24, r20
    1a3e:	2c 96       	adiw	r28, 0x0c	; 12
    1a40:	e2 e0       	ldi	r30, 0x02	; 2
    1a42:	0c 94 df 0e 	jmp	0x1dbe	; 0x1dbe <__epilogue_restores__+0x20>

00001a46 <__pack_f>:
    1a46:	ef 92       	push	r14
    1a48:	ff 92       	push	r15
    1a4a:	0f 93       	push	r16
    1a4c:	1f 93       	push	r17
    1a4e:	cf 93       	push	r28
    1a50:	df 93       	push	r29
    1a52:	fc 01       	movw	r30, r24
    1a54:	24 81       	ldd	r18, Z+4	; 0x04
    1a56:	35 81       	ldd	r19, Z+5	; 0x05
    1a58:	46 81       	ldd	r20, Z+6	; 0x06
    1a5a:	57 81       	ldd	r21, Z+7	; 0x07
    1a5c:	61 81       	ldd	r22, Z+1	; 0x01
    1a5e:	80 81       	ld	r24, Z
    1a60:	82 30       	cpi	r24, 0x02	; 2
    1a62:	20 f4       	brcc	.+8      	; 0x1a6c <__pack_f+0x26>
    1a64:	40 61       	ori	r20, 0x10	; 16
    1a66:	ef ef       	ldi	r30, 0xFF	; 255
    1a68:	f0 e0       	ldi	r31, 0x00	; 0
    1a6a:	a3 c0       	rjmp	.+326    	; 0x1bb2 <__pack_f+0x16c>
    1a6c:	84 30       	cpi	r24, 0x04	; 4
    1a6e:	09 f4       	brne	.+2      	; 0x1a72 <__pack_f+0x2c>
    1a70:	9b c0       	rjmp	.+310    	; 0x1ba8 <__pack_f+0x162>
    1a72:	82 30       	cpi	r24, 0x02	; 2
    1a74:	09 f4       	brne	.+2      	; 0x1a78 <__pack_f+0x32>
    1a76:	92 c0       	rjmp	.+292    	; 0x1b9c <__pack_f+0x156>
    1a78:	21 15       	cp	r18, r1
    1a7a:	31 05       	cpc	r19, r1
    1a7c:	41 05       	cpc	r20, r1
    1a7e:	51 05       	cpc	r21, r1
    1a80:	09 f4       	brne	.+2      	; 0x1a84 <__pack_f+0x3e>
    1a82:	8f c0       	rjmp	.+286    	; 0x1ba2 <__pack_f+0x15c>
    1a84:	02 80       	ldd	r0, Z+2	; 0x02
    1a86:	f3 81       	ldd	r31, Z+3	; 0x03
    1a88:	e0 2d       	mov	r30, r0
    1a8a:	8f ef       	ldi	r24, 0xFF	; 255
    1a8c:	e2 38       	cpi	r30, 0x82	; 130
    1a8e:	f8 07       	cpc	r31, r24
    1a90:	0c f0       	brlt	.+2      	; 0x1a94 <__pack_f+0x4e>
    1a92:	5a c0       	rjmp	.+180    	; 0x1b48 <__pack_f+0x102>
    1a94:	c2 e8       	ldi	r28, 0x82	; 130
    1a96:	df ef       	ldi	r29, 0xFF	; 255
    1a98:	ce 1b       	sub	r28, r30
    1a9a:	df 0b       	sbc	r29, r31
    1a9c:	ca 31       	cpi	r28, 0x1A	; 26
    1a9e:	d1 05       	cpc	r29, r1
    1aa0:	6c f5       	brge	.+90     	; 0x1afc <__pack_f+0xb6>
    1aa2:	79 01       	movw	r14, r18
    1aa4:	8a 01       	movw	r16, r20
    1aa6:	0c 2e       	mov	r0, r28
    1aa8:	04 c0       	rjmp	.+8      	; 0x1ab2 <__pack_f+0x6c>
    1aaa:	16 95       	lsr	r17
    1aac:	07 95       	ror	r16
    1aae:	f7 94       	ror	r15
    1ab0:	e7 94       	ror	r14
    1ab2:	0a 94       	dec	r0
    1ab4:	d2 f7       	brpl	.-12     	; 0x1aaa <__pack_f+0x64>
    1ab6:	81 e0       	ldi	r24, 0x01	; 1
    1ab8:	90 e0       	ldi	r25, 0x00	; 0
    1aba:	a0 e0       	ldi	r26, 0x00	; 0
    1abc:	b0 e0       	ldi	r27, 0x00	; 0
    1abe:	0c 2e       	mov	r0, r28
    1ac0:	04 c0       	rjmp	.+8      	; 0x1aca <__pack_f+0x84>
    1ac2:	88 0f       	add	r24, r24
    1ac4:	99 1f       	adc	r25, r25
    1ac6:	aa 1f       	adc	r26, r26
    1ac8:	bb 1f       	adc	r27, r27
    1aca:	0a 94       	dec	r0
    1acc:	d2 f7       	brpl	.-12     	; 0x1ac2 <__pack_f+0x7c>
    1ace:	01 97       	sbiw	r24, 0x01	; 1
    1ad0:	a1 09       	sbc	r26, r1
    1ad2:	b1 09       	sbc	r27, r1
    1ad4:	82 23       	and	r24, r18
    1ad6:	93 23       	and	r25, r19
    1ad8:	a4 23       	and	r26, r20
    1ada:	b5 23       	and	r27, r21
    1adc:	21 e0       	ldi	r18, 0x01	; 1
    1ade:	30 e0       	ldi	r19, 0x00	; 0
    1ae0:	40 e0       	ldi	r20, 0x00	; 0
    1ae2:	50 e0       	ldi	r21, 0x00	; 0
    1ae4:	00 97       	sbiw	r24, 0x00	; 0
    1ae6:	a1 05       	cpc	r26, r1
    1ae8:	b1 05       	cpc	r27, r1
    1aea:	19 f4       	brne	.+6      	; 0x1af2 <__pack_f+0xac>
    1aec:	20 e0       	ldi	r18, 0x00	; 0
    1aee:	30 e0       	ldi	r19, 0x00	; 0
    1af0:	a9 01       	movw	r20, r18
    1af2:	2e 29       	or	r18, r14
    1af4:	3f 29       	or	r19, r15
    1af6:	40 2b       	or	r20, r16
    1af8:	51 2b       	or	r21, r17
    1afa:	03 c0       	rjmp	.+6      	; 0x1b02 <__pack_f+0xbc>
    1afc:	20 e0       	ldi	r18, 0x00	; 0
    1afe:	30 e0       	ldi	r19, 0x00	; 0
    1b00:	a9 01       	movw	r20, r18
    1b02:	da 01       	movw	r26, r20
    1b04:	c9 01       	movw	r24, r18
    1b06:	8f 77       	andi	r24, 0x7F	; 127
    1b08:	90 70       	andi	r25, 0x00	; 0
    1b0a:	a0 70       	andi	r26, 0x00	; 0
    1b0c:	b0 70       	andi	r27, 0x00	; 0
    1b0e:	80 34       	cpi	r24, 0x40	; 64
    1b10:	91 05       	cpc	r25, r1
    1b12:	a1 05       	cpc	r26, r1
    1b14:	b1 05       	cpc	r27, r1
    1b16:	39 f4       	brne	.+14     	; 0x1b26 <__pack_f+0xe0>
    1b18:	27 ff       	sbrs	r18, 7
    1b1a:	09 c0       	rjmp	.+18     	; 0x1b2e <__pack_f+0xe8>
    1b1c:	20 5c       	subi	r18, 0xC0	; 192
    1b1e:	3f 4f       	sbci	r19, 0xFF	; 255
    1b20:	4f 4f       	sbci	r20, 0xFF	; 255
    1b22:	5f 4f       	sbci	r21, 0xFF	; 255
    1b24:	04 c0       	rjmp	.+8      	; 0x1b2e <__pack_f+0xe8>
    1b26:	21 5c       	subi	r18, 0xC1	; 193
    1b28:	3f 4f       	sbci	r19, 0xFF	; 255
    1b2a:	4f 4f       	sbci	r20, 0xFF	; 255
    1b2c:	5f 4f       	sbci	r21, 0xFF	; 255
    1b2e:	e1 e0       	ldi	r30, 0x01	; 1
    1b30:	f0 e0       	ldi	r31, 0x00	; 0
    1b32:	20 30       	cpi	r18, 0x00	; 0
    1b34:	80 e0       	ldi	r24, 0x00	; 0
    1b36:	38 07       	cpc	r19, r24
    1b38:	80 e0       	ldi	r24, 0x00	; 0
    1b3a:	48 07       	cpc	r20, r24
    1b3c:	80 e4       	ldi	r24, 0x40	; 64
    1b3e:	58 07       	cpc	r21, r24
    1b40:	28 f5       	brcc	.+74     	; 0x1b8c <__pack_f+0x146>
    1b42:	e0 e0       	ldi	r30, 0x00	; 0
    1b44:	f0 e0       	ldi	r31, 0x00	; 0
    1b46:	22 c0       	rjmp	.+68     	; 0x1b8c <__pack_f+0x146>
    1b48:	e0 38       	cpi	r30, 0x80	; 128
    1b4a:	f1 05       	cpc	r31, r1
    1b4c:	6c f5       	brge	.+90     	; 0x1ba8 <__pack_f+0x162>
    1b4e:	e1 58       	subi	r30, 0x81	; 129
    1b50:	ff 4f       	sbci	r31, 0xFF	; 255
    1b52:	da 01       	movw	r26, r20
    1b54:	c9 01       	movw	r24, r18
    1b56:	8f 77       	andi	r24, 0x7F	; 127
    1b58:	90 70       	andi	r25, 0x00	; 0
    1b5a:	a0 70       	andi	r26, 0x00	; 0
    1b5c:	b0 70       	andi	r27, 0x00	; 0
    1b5e:	80 34       	cpi	r24, 0x40	; 64
    1b60:	91 05       	cpc	r25, r1
    1b62:	a1 05       	cpc	r26, r1
    1b64:	b1 05       	cpc	r27, r1
    1b66:	39 f4       	brne	.+14     	; 0x1b76 <__pack_f+0x130>
    1b68:	27 ff       	sbrs	r18, 7
    1b6a:	09 c0       	rjmp	.+18     	; 0x1b7e <__pack_f+0x138>
    1b6c:	20 5c       	subi	r18, 0xC0	; 192
    1b6e:	3f 4f       	sbci	r19, 0xFF	; 255
    1b70:	4f 4f       	sbci	r20, 0xFF	; 255
    1b72:	5f 4f       	sbci	r21, 0xFF	; 255
    1b74:	04 c0       	rjmp	.+8      	; 0x1b7e <__pack_f+0x138>
    1b76:	21 5c       	subi	r18, 0xC1	; 193
    1b78:	3f 4f       	sbci	r19, 0xFF	; 255
    1b7a:	4f 4f       	sbci	r20, 0xFF	; 255
    1b7c:	5f 4f       	sbci	r21, 0xFF	; 255
    1b7e:	57 ff       	sbrs	r21, 7
    1b80:	05 c0       	rjmp	.+10     	; 0x1b8c <__pack_f+0x146>
    1b82:	56 95       	lsr	r21
    1b84:	47 95       	ror	r20
    1b86:	37 95       	ror	r19
    1b88:	27 95       	ror	r18
    1b8a:	31 96       	adiw	r30, 0x01	; 1
    1b8c:	87 e0       	ldi	r24, 0x07	; 7
    1b8e:	56 95       	lsr	r21
    1b90:	47 95       	ror	r20
    1b92:	37 95       	ror	r19
    1b94:	27 95       	ror	r18
    1b96:	8a 95       	dec	r24
    1b98:	d1 f7       	brne	.-12     	; 0x1b8e <__pack_f+0x148>
    1b9a:	0b c0       	rjmp	.+22     	; 0x1bb2 <__pack_f+0x16c>
    1b9c:	e0 e0       	ldi	r30, 0x00	; 0
    1b9e:	f0 e0       	ldi	r31, 0x00	; 0
    1ba0:	05 c0       	rjmp	.+10     	; 0x1bac <__pack_f+0x166>
    1ba2:	e0 e0       	ldi	r30, 0x00	; 0
    1ba4:	f0 e0       	ldi	r31, 0x00	; 0
    1ba6:	05 c0       	rjmp	.+10     	; 0x1bb2 <__pack_f+0x16c>
    1ba8:	ef ef       	ldi	r30, 0xFF	; 255
    1baa:	f0 e0       	ldi	r31, 0x00	; 0
    1bac:	20 e0       	ldi	r18, 0x00	; 0
    1bae:	30 e0       	ldi	r19, 0x00	; 0
    1bb0:	a9 01       	movw	r20, r18
    1bb2:	8e 2f       	mov	r24, r30
    1bb4:	87 95       	ror	r24
    1bb6:	88 27       	eor	r24, r24
    1bb8:	87 95       	ror	r24
    1bba:	94 2f       	mov	r25, r20
    1bbc:	9f 77       	andi	r25, 0x7F	; 127
    1bbe:	67 95       	ror	r22
    1bc0:	66 27       	eor	r22, r22
    1bc2:	67 95       	ror	r22
    1bc4:	e6 95       	lsr	r30
    1bc6:	e2 2e       	mov	r14, r18
    1bc8:	a9 2f       	mov	r26, r25
    1bca:	a8 2b       	or	r26, r24
    1bcc:	fe 2f       	mov	r31, r30
    1bce:	f6 2b       	or	r31, r22
    1bd0:	62 2f       	mov	r22, r18
    1bd2:	73 2f       	mov	r23, r19
    1bd4:	8a 2f       	mov	r24, r26
    1bd6:	9f 2f       	mov	r25, r31
    1bd8:	cd b7       	in	r28, 0x3d	; 61
    1bda:	de b7       	in	r29, 0x3e	; 62
    1bdc:	e6 e0       	ldi	r30, 0x06	; 6
    1bde:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__epilogue_restores__+0x18>

00001be2 <__unpack_f>:
    1be2:	dc 01       	movw	r26, r24
    1be4:	fb 01       	movw	r30, r22
    1be6:	2c 91       	ld	r18, X
    1be8:	11 96       	adiw	r26, 0x01	; 1
    1bea:	3c 91       	ld	r19, X
    1bec:	11 97       	sbiw	r26, 0x01	; 1
    1bee:	12 96       	adiw	r26, 0x02	; 2
    1bf0:	8c 91       	ld	r24, X
    1bf2:	12 97       	sbiw	r26, 0x02	; 2
    1bf4:	48 2f       	mov	r20, r24
    1bf6:	4f 77       	andi	r20, 0x7F	; 127
    1bf8:	50 e0       	ldi	r21, 0x00	; 0
    1bfa:	98 2f       	mov	r25, r24
    1bfc:	99 1f       	adc	r25, r25
    1bfe:	99 27       	eor	r25, r25
    1c00:	99 1f       	adc	r25, r25
    1c02:	13 96       	adiw	r26, 0x03	; 3
    1c04:	6c 91       	ld	r22, X
    1c06:	13 97       	sbiw	r26, 0x03	; 3
    1c08:	86 2f       	mov	r24, r22
    1c0a:	88 0f       	add	r24, r24
    1c0c:	89 2b       	or	r24, r25
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	66 1f       	adc	r22, r22
    1c12:	66 27       	eor	r22, r22
    1c14:	66 1f       	adc	r22, r22
    1c16:	61 83       	std	Z+1, r22	; 0x01
    1c18:	00 97       	sbiw	r24, 0x00	; 0
    1c1a:	39 f5       	brne	.+78     	; 0x1c6a <__unpack_f+0x88>
    1c1c:	21 15       	cp	r18, r1
    1c1e:	31 05       	cpc	r19, r1
    1c20:	41 05       	cpc	r20, r1
    1c22:	51 05       	cpc	r21, r1
    1c24:	11 f4       	brne	.+4      	; 0x1c2a <__unpack_f+0x48>
    1c26:	82 e0       	ldi	r24, 0x02	; 2
    1c28:	29 c0       	rjmp	.+82     	; 0x1c7c <__unpack_f+0x9a>
    1c2a:	82 e8       	ldi	r24, 0x82	; 130
    1c2c:	9f ef       	ldi	r25, 0xFF	; 255
    1c2e:	93 83       	std	Z+3, r25	; 0x03
    1c30:	82 83       	std	Z+2, r24	; 0x02
    1c32:	67 e0       	ldi	r22, 0x07	; 7
    1c34:	22 0f       	add	r18, r18
    1c36:	33 1f       	adc	r19, r19
    1c38:	44 1f       	adc	r20, r20
    1c3a:	55 1f       	adc	r21, r21
    1c3c:	6a 95       	dec	r22
    1c3e:	d1 f7       	brne	.-12     	; 0x1c34 <__unpack_f+0x52>
    1c40:	83 e0       	ldi	r24, 0x03	; 3
    1c42:	80 83       	st	Z, r24
    1c44:	09 c0       	rjmp	.+18     	; 0x1c58 <__unpack_f+0x76>
    1c46:	22 0f       	add	r18, r18
    1c48:	33 1f       	adc	r19, r19
    1c4a:	44 1f       	adc	r20, r20
    1c4c:	55 1f       	adc	r21, r21
    1c4e:	82 81       	ldd	r24, Z+2	; 0x02
    1c50:	93 81       	ldd	r25, Z+3	; 0x03
    1c52:	01 97       	sbiw	r24, 0x01	; 1
    1c54:	93 83       	std	Z+3, r25	; 0x03
    1c56:	82 83       	std	Z+2, r24	; 0x02
    1c58:	20 30       	cpi	r18, 0x00	; 0
    1c5a:	80 e0       	ldi	r24, 0x00	; 0
    1c5c:	38 07       	cpc	r19, r24
    1c5e:	80 e0       	ldi	r24, 0x00	; 0
    1c60:	48 07       	cpc	r20, r24
    1c62:	80 e4       	ldi	r24, 0x40	; 64
    1c64:	58 07       	cpc	r21, r24
    1c66:	78 f3       	brcs	.-34     	; 0x1c46 <__unpack_f+0x64>
    1c68:	20 c0       	rjmp	.+64     	; 0x1caa <__unpack_f+0xc8>
    1c6a:	8f 3f       	cpi	r24, 0xFF	; 255
    1c6c:	91 05       	cpc	r25, r1
    1c6e:	79 f4       	brne	.+30     	; 0x1c8e <__unpack_f+0xac>
    1c70:	21 15       	cp	r18, r1
    1c72:	31 05       	cpc	r19, r1
    1c74:	41 05       	cpc	r20, r1
    1c76:	51 05       	cpc	r21, r1
    1c78:	19 f4       	brne	.+6      	; 0x1c80 <__unpack_f+0x9e>
    1c7a:	84 e0       	ldi	r24, 0x04	; 4
    1c7c:	80 83       	st	Z, r24
    1c7e:	08 95       	ret
    1c80:	44 ff       	sbrs	r20, 4
    1c82:	03 c0       	rjmp	.+6      	; 0x1c8a <__unpack_f+0xa8>
    1c84:	81 e0       	ldi	r24, 0x01	; 1
    1c86:	80 83       	st	Z, r24
    1c88:	10 c0       	rjmp	.+32     	; 0x1caa <__unpack_f+0xc8>
    1c8a:	10 82       	st	Z, r1
    1c8c:	0e c0       	rjmp	.+28     	; 0x1caa <__unpack_f+0xc8>
    1c8e:	8f 57       	subi	r24, 0x7F	; 127
    1c90:	90 40       	sbci	r25, 0x00	; 0
    1c92:	93 83       	std	Z+3, r25	; 0x03
    1c94:	82 83       	std	Z+2, r24	; 0x02
    1c96:	83 e0       	ldi	r24, 0x03	; 3
    1c98:	80 83       	st	Z, r24
    1c9a:	87 e0       	ldi	r24, 0x07	; 7
    1c9c:	22 0f       	add	r18, r18
    1c9e:	33 1f       	adc	r19, r19
    1ca0:	44 1f       	adc	r20, r20
    1ca2:	55 1f       	adc	r21, r21
    1ca4:	8a 95       	dec	r24
    1ca6:	d1 f7       	brne	.-12     	; 0x1c9c <__unpack_f+0xba>
    1ca8:	50 64       	ori	r21, 0x40	; 64
    1caa:	24 83       	std	Z+4, r18	; 0x04
    1cac:	35 83       	std	Z+5, r19	; 0x05
    1cae:	46 83       	std	Z+6, r20	; 0x06
    1cb0:	57 83       	std	Z+7, r21	; 0x07
    1cb2:	08 95       	ret

00001cb4 <__fpcmp_parts_f>:
    1cb4:	fc 01       	movw	r30, r24
    1cb6:	db 01       	movw	r26, r22
    1cb8:	90 81       	ld	r25, Z
    1cba:	92 30       	cpi	r25, 0x02	; 2
    1cbc:	08 f4       	brcc	.+2      	; 0x1cc0 <__fpcmp_parts_f+0xc>
    1cbe:	49 c0       	rjmp	.+146    	; 0x1d52 <__fpcmp_parts_f+0x9e>
    1cc0:	8c 91       	ld	r24, X
    1cc2:	82 30       	cpi	r24, 0x02	; 2
    1cc4:	08 f4       	brcc	.+2      	; 0x1cc8 <__fpcmp_parts_f+0x14>
    1cc6:	45 c0       	rjmp	.+138    	; 0x1d52 <__fpcmp_parts_f+0x9e>
    1cc8:	94 30       	cpi	r25, 0x04	; 4
    1cca:	51 f4       	brne	.+20     	; 0x1ce0 <__fpcmp_parts_f+0x2c>
    1ccc:	61 81       	ldd	r22, Z+1	; 0x01
    1cce:	84 30       	cpi	r24, 0x04	; 4
    1cd0:	b1 f5       	brne	.+108    	; 0x1d3e <__fpcmp_parts_f+0x8a>
    1cd2:	11 96       	adiw	r26, 0x01	; 1
    1cd4:	2c 91       	ld	r18, X
    1cd6:	11 97       	sbiw	r26, 0x01	; 1
    1cd8:	30 e0       	ldi	r19, 0x00	; 0
    1cda:	26 1b       	sub	r18, r22
    1cdc:	31 09       	sbc	r19, r1
    1cde:	41 c0       	rjmp	.+130    	; 0x1d62 <__fpcmp_parts_f+0xae>
    1ce0:	84 30       	cpi	r24, 0x04	; 4
    1ce2:	21 f0       	breq	.+8      	; 0x1cec <__fpcmp_parts_f+0x38>
    1ce4:	92 30       	cpi	r25, 0x02	; 2
    1ce6:	41 f4       	brne	.+16     	; 0x1cf8 <__fpcmp_parts_f+0x44>
    1ce8:	82 30       	cpi	r24, 0x02	; 2
    1cea:	b1 f1       	breq	.+108    	; 0x1d58 <__fpcmp_parts_f+0xa4>
    1cec:	11 96       	adiw	r26, 0x01	; 1
    1cee:	8c 91       	ld	r24, X
    1cf0:	11 97       	sbiw	r26, 0x01	; 1
    1cf2:	88 23       	and	r24, r24
    1cf4:	a1 f1       	breq	.+104    	; 0x1d5e <__fpcmp_parts_f+0xaa>
    1cf6:	2d c0       	rjmp	.+90     	; 0x1d52 <__fpcmp_parts_f+0x9e>
    1cf8:	61 81       	ldd	r22, Z+1	; 0x01
    1cfa:	82 30       	cpi	r24, 0x02	; 2
    1cfc:	01 f1       	breq	.+64     	; 0x1d3e <__fpcmp_parts_f+0x8a>
    1cfe:	11 96       	adiw	r26, 0x01	; 1
    1d00:	8c 91       	ld	r24, X
    1d02:	11 97       	sbiw	r26, 0x01	; 1
    1d04:	68 17       	cp	r22, r24
    1d06:	d9 f4       	brne	.+54     	; 0x1d3e <__fpcmp_parts_f+0x8a>
    1d08:	22 81       	ldd	r18, Z+2	; 0x02
    1d0a:	33 81       	ldd	r19, Z+3	; 0x03
    1d0c:	12 96       	adiw	r26, 0x02	; 2
    1d0e:	8d 91       	ld	r24, X+
    1d10:	9c 91       	ld	r25, X
    1d12:	13 97       	sbiw	r26, 0x03	; 3
    1d14:	82 17       	cp	r24, r18
    1d16:	93 07       	cpc	r25, r19
    1d18:	94 f0       	brlt	.+36     	; 0x1d3e <__fpcmp_parts_f+0x8a>
    1d1a:	28 17       	cp	r18, r24
    1d1c:	39 07       	cpc	r19, r25
    1d1e:	bc f0       	brlt	.+46     	; 0x1d4e <__fpcmp_parts_f+0x9a>
    1d20:	24 81       	ldd	r18, Z+4	; 0x04
    1d22:	35 81       	ldd	r19, Z+5	; 0x05
    1d24:	46 81       	ldd	r20, Z+6	; 0x06
    1d26:	57 81       	ldd	r21, Z+7	; 0x07
    1d28:	14 96       	adiw	r26, 0x04	; 4
    1d2a:	8d 91       	ld	r24, X+
    1d2c:	9d 91       	ld	r25, X+
    1d2e:	0d 90       	ld	r0, X+
    1d30:	bc 91       	ld	r27, X
    1d32:	a0 2d       	mov	r26, r0
    1d34:	82 17       	cp	r24, r18
    1d36:	93 07       	cpc	r25, r19
    1d38:	a4 07       	cpc	r26, r20
    1d3a:	b5 07       	cpc	r27, r21
    1d3c:	18 f4       	brcc	.+6      	; 0x1d44 <__fpcmp_parts_f+0x90>
    1d3e:	66 23       	and	r22, r22
    1d40:	41 f0       	breq	.+16     	; 0x1d52 <__fpcmp_parts_f+0x9e>
    1d42:	0d c0       	rjmp	.+26     	; 0x1d5e <__fpcmp_parts_f+0xaa>
    1d44:	28 17       	cp	r18, r24
    1d46:	39 07       	cpc	r19, r25
    1d48:	4a 07       	cpc	r20, r26
    1d4a:	5b 07       	cpc	r21, r27
    1d4c:	28 f4       	brcc	.+10     	; 0x1d58 <__fpcmp_parts_f+0xa4>
    1d4e:	66 23       	and	r22, r22
    1d50:	31 f0       	breq	.+12     	; 0x1d5e <__fpcmp_parts_f+0xaa>
    1d52:	21 e0       	ldi	r18, 0x01	; 1
    1d54:	30 e0       	ldi	r19, 0x00	; 0
    1d56:	05 c0       	rjmp	.+10     	; 0x1d62 <__fpcmp_parts_f+0xae>
    1d58:	20 e0       	ldi	r18, 0x00	; 0
    1d5a:	30 e0       	ldi	r19, 0x00	; 0
    1d5c:	02 c0       	rjmp	.+4      	; 0x1d62 <__fpcmp_parts_f+0xae>
    1d5e:	2f ef       	ldi	r18, 0xFF	; 255
    1d60:	3f ef       	ldi	r19, 0xFF	; 255
    1d62:	c9 01       	movw	r24, r18
    1d64:	08 95       	ret

00001d66 <__prologue_saves__>:
    1d66:	2f 92       	push	r2
    1d68:	3f 92       	push	r3
    1d6a:	4f 92       	push	r4
    1d6c:	5f 92       	push	r5
    1d6e:	6f 92       	push	r6
    1d70:	7f 92       	push	r7
    1d72:	8f 92       	push	r8
    1d74:	9f 92       	push	r9
    1d76:	af 92       	push	r10
    1d78:	bf 92       	push	r11
    1d7a:	cf 92       	push	r12
    1d7c:	df 92       	push	r13
    1d7e:	ef 92       	push	r14
    1d80:	ff 92       	push	r15
    1d82:	0f 93       	push	r16
    1d84:	1f 93       	push	r17
    1d86:	cf 93       	push	r28
    1d88:	df 93       	push	r29
    1d8a:	cd b7       	in	r28, 0x3d	; 61
    1d8c:	de b7       	in	r29, 0x3e	; 62
    1d8e:	ca 1b       	sub	r28, r26
    1d90:	db 0b       	sbc	r29, r27
    1d92:	0f b6       	in	r0, 0x3f	; 63
    1d94:	f8 94       	cli
    1d96:	de bf       	out	0x3e, r29	; 62
    1d98:	0f be       	out	0x3f, r0	; 63
    1d9a:	cd bf       	out	0x3d, r28	; 61
    1d9c:	09 94       	ijmp

00001d9e <__epilogue_restores__>:
    1d9e:	2a 88       	ldd	r2, Y+18	; 0x12
    1da0:	39 88       	ldd	r3, Y+17	; 0x11
    1da2:	48 88       	ldd	r4, Y+16	; 0x10
    1da4:	5f 84       	ldd	r5, Y+15	; 0x0f
    1da6:	6e 84       	ldd	r6, Y+14	; 0x0e
    1da8:	7d 84       	ldd	r7, Y+13	; 0x0d
    1daa:	8c 84       	ldd	r8, Y+12	; 0x0c
    1dac:	9b 84       	ldd	r9, Y+11	; 0x0b
    1dae:	aa 84       	ldd	r10, Y+10	; 0x0a
    1db0:	b9 84       	ldd	r11, Y+9	; 0x09
    1db2:	c8 84       	ldd	r12, Y+8	; 0x08
    1db4:	df 80       	ldd	r13, Y+7	; 0x07
    1db6:	ee 80       	ldd	r14, Y+6	; 0x06
    1db8:	fd 80       	ldd	r15, Y+5	; 0x05
    1dba:	0c 81       	ldd	r16, Y+4	; 0x04
    1dbc:	1b 81       	ldd	r17, Y+3	; 0x03
    1dbe:	aa 81       	ldd	r26, Y+2	; 0x02
    1dc0:	b9 81       	ldd	r27, Y+1	; 0x01
    1dc2:	ce 0f       	add	r28, r30
    1dc4:	d1 1d       	adc	r29, r1
    1dc6:	0f b6       	in	r0, 0x3f	; 63
    1dc8:	f8 94       	cli
    1dca:	de bf       	out	0x3e, r29	; 62
    1dcc:	0f be       	out	0x3f, r0	; 63
    1dce:	cd bf       	out	0x3d, r28	; 61
    1dd0:	ed 01       	movw	r28, r26
    1dd2:	08 95       	ret

00001dd4 <_exit>:
    1dd4:	f8 94       	cli

00001dd6 <__stop_program>:
    1dd6:	ff cf       	rjmp	.-2      	; 0x1dd6 <__stop_program>
